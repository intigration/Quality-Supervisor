---
- title: Pre-Requisites
  slug: web-browsing
  description: Avoiding tracking, censorship, and data collection online
  icon: browser
  intro: "Process Variant and Master Documentation are initiated. "
  checklist:
    - point: Project Notebook Startup Version
      priority: Essential
      details: Typical project folder structure are in placed
    - point: Process Variant determined and Tailoring
      priority: Essential
      details: Any tailoring need might be needed according to budget, timelines and
        delivery nature
- title: Requirements Engineering Workflow
  slug: requirements
  description: Requirements Engineering Workflow where Competitors and their
    products are analyzed and rated
  icon: password
  color: yellow
  intro: Product Portfolio
  checklist:
    - point: Analyze Competition
      priority: Essential
      details: Competitors and their products are analyzed and rated
    - point: Perform Positioning
      priority: Essential
      details: Perform Positioning Classification of the new product is established in
        the SBT and the divisional product portfolio. The position of the new
        product in the market is determined
    - point: Analyze Market Opportunities
      priority: Essential
      details: The current market situation is rated and opportunities and risks are
        analyzed
    - point: Identify Requirements
      priority: Advanced
      details: The market assessment will be performed to collect market data,
        conditions, and user information
    - point: Define User Scenarios
      priority: Advanced
      details: The relevant work processes of the customer, the users of the
        product/system, and the user tasks are analyzed by the product manager
    - point: Specify customer Benefits
      priority: Advanced
      details: The advantages attained by the customer through use of the
        product/system are compiled
    - point: Analyze Customers
      priority: Advanced
      details: Customers are analyzed and classified in consultation with experts from
        sales and marketing
    - point: Benchmark competition
      priority: Advanced
      details: The competition’s products are benchmarked
    - point: Create Service Concept
      priority: Advanced
      details: Define the product-specific service concept and the serviceability
        requirements determining how, in what depth and who performs service on
        the product and components Define service documentation requests
  softwareLinks:
    - title: Requirement Engineering a complete overview
      url: https://www.theknowledgeacademy.com/blog/requirements-engineering/
    - title: Requirements Engineering
      url: https://link.springer.com/journal/766
- title: Product Management
  slug: product-management
  description: Product Management workflow initiation
  icon: browser
  intro: Typically covers the product vision and roadmap ownership
  checklist:
    - point: Project Summary created
      priority: Essential
      details: Project Summary creation
    - point: Phase in Roadmap created
      priority: Basic
      details: Phase In Roadmap Project Summary
    - point: Product Manager is nominated
      priority: Basic
      details: Product Manager is nominated
- title: Planning / Project Management
  slug: pm
  description: Standard guidlines for Project Management Actcities, Reporting and
    Measurement Tool
  icon: email
  intro: Standard guidlines for Project Management Actcities, Reporting and
    Measurement Tool
  checklist:
    - point: A Project Leader is nominated.
      priority: Essential
      details: Consider using a different email address for security-critical
        communications from trivial mail such as newsletters. This
        compartmentalization could reduce the amount of damage caused by a data
        breach, and also make it easier to recover a compromised account.
    - point: A Project Quality Manager is nominated.
      priority: Essential
      details: Do not share your primary email publicly, as mail addresses are often
        the starting point for most phishing attacks.
    - point: A Project Architect is nominated
      priority: Essential
      details: Use a long and unique password, enable 2FA and be careful while logging
        in. Your email account provides an easy entry point to all your other
        online accounts for an attacker.
    - point: Disable Automatic Loading of Remote Content
      priority: Essential
      details: Email messages can contain remote content such as images or
        stylesheets, often automatically loaded from the server. You should
        disable this, as it exposes your IP address and device information, and
        is often used for tracking. For more info, see [this
        article](https://www.theverge.com/2019/7/3/20680903/email-pixel-trackers-how-to-stop-images-automatic-download).
    - point: Start-up version of Planning Document
      priority: Optional
      details: "There are two main types of emails on the internet: plaintext and
        HTML. The former is strongly preferred for privacy & security as HTML
        messages often include identifiers in links and inline images, which can
        collect usage and personal data. There's also numerous risks of remote
        code execution targeting the HTML parser of your mail client, which
        cannot be exploited if you are using plaintext. For more info, as well
        as setup instructions for your mail provider, see
        [UsePlaintext.email](https://useplaintext.email/)."
    - point: All required QA activities for the next phase are planned and given in
        the project planning.
      priority: Optional
      details: If you give a third-party app or plug-in full access to your inbox,
        they effectively have full unhindered access to all your emails and
        their contents, which poses significant security and privacy risks.
    - point: Requirements for project team members have been specified
      priority: Optional
      details: Emails are very easily intercepted. Furthermore, you can’t be sure of
        how secure your recipient's environment is. Therefore, emails cannot be
        considered safe for exchanging confidential information, unless it is
        encrypted.
- title: Messaging
  slug: messaging
  description: Keeping your communications private and secure
  icon: messaging
  intro: ""
  checklist:
    - point: Only Use Fully End-to-End Encrypted Messengers
      priority: Essential
      details: End-to-end encryption is a system of communication where messages are
        encrypted on your device and not decrypted until they reach the intended
        recipient. This ensures that any actor who intercepts traffic cannot
        read the message contents, nor can anybody with access to the central
        servers where data is stored.
    - point: Use only Open Source Messaging Platforms
      priority: Essential
      details: If code is open source then it can be independently examined and
        audited by anyone qualified to do so, to ensure that there are no
        backdoors, vulnerabilities, or other security issues.
    - point: Use a "Trustworthy" Messaging Platform
      priority: Essential
      details: When selecting an encrypted messaging app, ensure it's fully open
        source, stable, actively maintained, and ideally backed by reputable
        developers.
    - point: Check Security Settings
      priority: Essential
      details: Enable security settings, including contact verification, security
        notifications, and encryption. Disable optional non-security features
        such as read receipt, last online, and typing notification.
    - point: Ensure your Recipients Environment is Secure
      priority: Essential
      details: Your conversation can only be as secure as the weakest link. Often the
        easiest way to infiltrate a communications channel is to target the
        individual or node with the least protection.
    - point: Disable Cloud Services
      priority: Essential
      details: Some mobile messaging apps offer a web or desktop companion. This not
        only increases attack surface but it has been linked to several critical
        security issues, and should therefore be avoided, if possible.
    - point: Secure Group Chats
      priority: Essential
      details: The risk of compromise rises exponentially, the more participants are
        in a group, as the attack surface increases. Periodically check that all
        participants are legitimate.
    - point: Create a Safe Environment for Communication
      priority: Essential
      details: "There are several stages where your digital communications could be
        monitored or intercepted. This includes: your or your participants'
        device, your ISP, national gateway or government logging, the messaging
        provider, the servers."
    - point: Agree on a Communication Plan
      priority: Optional
      details: In certain situations, it may be worth making a communication plan.
        This should include primary and backup methods of securely getting in
        hold with each other.
    - point: Strip Meta-Data from Media
      priority: Optional
      details: Metadata is "Data about Data" or additional information attached to a
        file or transaction. When you send a photo, audio recording, video, or
        document you may be revealing more than you intended to.
    - point: Defang URLs
      priority: Optional
      details: Sending links via various services can unintentionally expose your
        personal information. This is because, when a thumbnail or preview is
        generated- it happens on the client-side.
    - point: Verify your Recipient
      priority: Optional
      details: Always ensure you are talking to the intended recipient, and that they
        have not been compromised. One method for doing so is to use an app
        which supports contact verification.
    - point: Enable Ephemeral Messages
      priority: Optional
      details: Self-destructing messages is a feature that causes your messages to
        automatically delete after a set amount of time. This means that if your
        device is lost, stolen, or seized, an adversary will only have access to
        the most recent communications.
    - point: Avoid SMS
      priority: Optional
      details: SMS may be convenient, but it's not secure. It is susceptible to
        threats such as interception, sim swapping, manipulation, and malware.
    - point: Watch out for Trackers
      priority: Optional
      details: Be wary of messaging applications with trackers, as the detailed usage
        statistics they collect are often very invasive, and can sometimes
        reveal your identity as well as personal information that you would
        otherwise not intend to share.
    - point: Consider Jurisdiction
      priority: Advanced
      details: The jurisdictions where the organisation is based, and data is hosted
        should also be taken into account.
    - point: Use an Anonymous Platform
      priority: Advanced
      details: If you believe you may be targeted, you should opt for an anonymous
        messaging platform that does not require a phone number, or any other
        personally identifiable information to sign up or use.
    - point: Ensure Forward Secrecy is Supported
      priority: Advanced
      details: Opt for a platform that implements forward secrecy. This is where your
        app generates a new encryption key for every message.
    - point: Consider a Decentralized Platform
      priority: Advanced
      details: If all data flows through a central provider, you have to trust them
        with your data and meta-data. You cannot verify that the system running
        is authentic without back doors.
  softwareLinks:
    - title: Secure Messaging Apps
      url: https://github.com/Lissy93/awesome-privacy#encrypted-messaging
    - title: P2P Messaging Platforms
      url: https://github.com/Lissy93/awesome-privacy#p2p-messaging
  color: cyan
- title: Process Compliance
  slug: social-media
  description: Minimizing the risks associated with using online communities
  icon: social
  intro: >
    Online communities have existed since the invention of the internet, and
    give people around the world the opportunity to connect, communicate and
    share. Although these networks are a great way to promote social interaction
    and bring people together, that have a dark side - there are some serious
    [Privacy Concerns with Social Networking
    Services](https://en.wikipedia.org/wiki/Privacy_concerns_with_social_networking_services),
    and these social networking sites are owned by private corporations, and
    that they make their money by collecting data about individuals and selling
    that data on, often to third party advertisers.

    Secure your account, lock down your privacy settings, but know that even after doing so, all data intentionally and non-intentionally uploaded is effectively public. If possible, avoid using conventional social media networks.
  checklist:
    - point: Secure your Account
      priority: Essential
      details: "Social media profiles get stolen or taken over all too often. To
        protect your account: use a unique and strong password, and enable
        2-factor authentication."
    - point: Check Privacy Settings
      priority: Essential
      details: Most social networks allow you to control your privacy settings. Ensure
        that you are comfortable with what data you are currently exposing and
        to whom.
    - point: Think of All Interactions as Public
      priority: Essential
      details: There are still numerous methods of viewing a users 'private' content
        across many social networks. Therefore, before uploading, posting or
        commenting on anything, think "Would I mind if this was totally public?"
    - point: Think of All Interactions as Permanent
      priority: Essential
      details: Pretty much every post, comment, photo etc is being continuously backed
        up by a myriad of third-party services, who archive this data and make
        it indexable and publicly available almost forever.
    - point: Don't Reveal too Much
      priority: Essential
      details: Profile information creates a goldmine of info for hackers, the kind of
        data that helps them personalize phishing scams. Avoid sharing too much
        detail (DoB, Hometown, School etc).
    - point: Be Careful what you Upload
      priority: Essential
      details: Status updates, comments, check-ins and media can unintentionally
        reveal a lot more than you intended them to. This is especially relevant
        to photos and videos, which may show things in the background.
    - point: Don't Share Email or Phone Number
      priority: Essential
      details: Posting your real email address or mobile number, gives hackers, trolls
        and spammers more munition to use against you, and can also allow
        separate aliases, profiles or data points to be connected.
    - point: Don't Grant Unnecessary Permissions
      priority: Essential
      details: By default many of the popular social networking apps will ask for
        permission to access your contacts, call log, location, messaging
        history etc. If they don’t need this access, don’t grant it.
    - point: Be Careful of 3rd-Party Integrations
      priority: Essential
      details: Avoid signing up for accounts using a Social Network login, revoke
        access to social apps you no longer use.
    - point: Avoid Publishing Geo Data while still Onsite
      priority: Essential
      details: If you plan to share any content that reveals a location, then wait
        until you have left that place. This is particularly important when you
        are taking a trip, at a restaurant, campus, hotel/resort, public
        building or airport.
    - point: Remove metadata before uploading media
      priority: Optional
      details: Most smartphones and some cameras automatically attach a comprehensive
        set of additional data (called EXIF data) to each photograph. Remove
        this data before uploading.
    - point: Implement Image Cloaking
      priority: Advanced
      details: Tools like Fawkes can be used to very subtly, slightly change the
        structure of faces within photos in a way that is imperceptible by
        humans, but will prevent facial recognition systems from being able to
        recognize a given face.
    - point: Consider Spoofing GPS in home vicinity
      priority: Advanced
      details: Even if you yourself never use social media, there is always going to
        be others who are not as careful, and could reveal your location.
    - point: Consider False Information
      priority: Advanced
      details: If you just want to read, and do not intend on posting too much-
        consider using an alias name, and false contact details.
    - point: Don’t have any social media accounts
      priority: Advanced
      details: Social media is fundamentally un-private, so for maximum online
        security and privacy, avoid using any mainstream social networks.
  softwareLinks:
    - title: Alternative Social Media
      url: https://github.com/Lissy93/awesome-privacy#social-networks
    - title: Alternative Video Platforms
      url: https://github.com/Lissy93/awesome-privacy#video-platforms
    - title: Alternative Blogging Platforms
      url: https://github.com/Lissy93/awesome-privacy#blogging-platforms
    - title: News Readers and Aggregation
      url: https://github.com/Lissy93/awesome-privacy#news-readers-and-aggregation
  color: blue
- title: System Testing
  slug: system-test
  description: Safeguarding your network traffic
  icon: network
  intro: |
    This section covers standard practices in system testing workflow
  checklist:
    - point: All required QA activities for the next phase are planned and given in
        the project planning.
      priority: Essential
      details: Use a reputable, paid-for VPN. This can help protect sites you visit
        from logging your real IP, reduce the amount of data your ISP can
        collect, and increase protection on public WiFi.
    - point: All required workproducts are under configuration management control and
        if required approved.
      priority: Essential
      details: After getting a new router, change the password. Default router
        passwords are publicly available, meaning anyone within proximity would
        be able to connect.
    - point: Use WPA2, and a strong password
      priority: Essential
      details: There are different authentication protocols for connecting to WiFi.
        Currently, the most secure options are WPA2 and WPA3 (on newer routers).
    - point: Keep router firmware up-to-date
      priority: Essential
      details: Manufacturers release firmware updates that fix security
        vulnerabilities, implement new standards, and sometimes add features or
        improve the performance of your router.
    - point: Implement a Network-Wide VPN
      priority: Optional
      details: If you configure your VPN on your router, firewall, or home server,
        then traffic from all devices will be encrypted and routed through it,
        without needing individual VPN apps.
    - point: Protect against DNS leaks
      priority: Optional
      details: When using a VPN, it is extremely important to exclusively use the DNS
        server of your VPN provider or secure service.
    - point: Use a secure VPN Protocol
      priority: Optional
      details: OpenVPN and WireGuard are open source, lightweight, and secure
        tunneling protocols. Avoid using PPTP or SSTP.
    - point: Secure DNS
      priority: Optional
      details: Use DNS-over-HTTPS which performs DNS resolution via the HTTPS
        protocol, encrypting data between you and your DNS resolver.
    - point: Avoid the free router from your ISP
      priority: Optional
      details: Typically they’re manufactured cheaply in bulk in China, with insecure
        propriety firmware that doesn't receive regular security updates.
    - point: Whitelist MAC Addresses
      priority: Optional
      details: You can whitelist MAC addresses in your router settings, disallowing
        any unknown devices to immediately connect to your network, even if they
        know your credentials.
    - point: Change the Router’s Local IP Address
      priority: Optional
      details: It is possible for a malicious script in your web browser to exploit a
        cross-site scripting vulnerability, accessing known-vulnerable routers
        at their local IP address and tampering with them.
    - point: Don't Reveal Personal Info in SSID
      priority: Optional
      details: You should update your network name, choosing an SSID that does not
        identify you, include your flat number/address, and does not specify the
        device brand/model.
    - point: Opt-Out Router Listings
      priority: Optional
      details: WiFi SSIDs are scanned, logged, and then published on various websites,
        which is a serious privacy concern for some.
    - point: Hide your SSID
      priority: Optional
      details: Your router's Service Set Identifier is simply the network name. If it
        is not visible, it may receive less abuse.
    - point: Disable WPS
      priority: Optional
      details: Wi-Fi Protected Setup provides an easier method to connect, without
        entering a long WiFi password, but WPS introduces a series of major
        security issues.
    - point: Disable UPnP
      priority: Optional
      details: Universal Plug and Play allows applications to automatically forward a
        port on your router, but it has a long history of serious security
        issues.
    - point: Use a Guest Network for Guests
      priority: Optional
      details: Do not grant access to your primary WiFi network to visitors, as it
        enables them to interact with other devices on the network.
    - point: Change your Router's Default IP
      priority: Optional
      details: Modifying your router admin panel's default IP address will make it
        more difficult for malicious scripts targeting local IP addresses.
    - point: Kill unused processes and services on your router
      priority: Optional
      details: Services like Telnet and SSH that provide command-line access to
        devices should never be exposed to the internet and should also be
        disabled on the local network unless they're actually needed.
    - point: Don't have Open Ports
      priority: Optional
      details: Close any open ports on your router that are not needed. Open ports
        provide an easy entrance for hackers.
    - point: Disable Unused Remote Access Protocols
      priority: Optional
      details: When protocols such as PING, Telnet, SSH, UPnP, and HNAP etc are
        enabled, they allow your router to be probed from anywhere in the world.
    - point: Disable Cloud-Based Management
      priority: Optional
      details: You should treat your router's admin panel with the utmost care, as
        considerable damage can be caused if an attacker is able to gain access.
    - point: Manage Range Correctly
      priority: Optional
      details: It's common to want to pump your router's range to the max, but if you
        reside in a smaller flat, your attack surface is increased when your
        WiFi network can be picked up across the street.
    - point: Route all traffic through
        [Tor](https://awesome-privacy.xyz/networking/mix-networks/tor)
      priority: Advanced
      details: VPNs have their weaknesses. For increased security, route all your
        internet traffic through the
        [Tor](https://awesome-privacy.xyz/networking/mix-networks/tor) network.
    - point: Disable WiFi on all Devices
      priority: Advanced
      details: Connecting to even a secure WiFi network increases your attack surface.
        Disabling your home WiFi and connect each device via Ethernet.
  color: violet
  softwareLinks:
    - title: Virtual Private Networks
      url: https://github.com/Lissy93/awesome-privacy#virtual-private-networks
    - title: Mix Networks
      url: https://github.com/Lissy93/awesome-privacy#mix-networks
    - title: Router Firmware
      url: https://github.com/Lissy93/awesome-privacy#router-firmware
    - title: Open Source Proxies
      url: https://github.com/Lissy93/awesome-privacy#proxies
    - title: DNS Providers
      url: https://github.com/Lissy93/awesome-privacy#dns
    - title: Firewalls
      url: https://github.com/Lissy93/awesome-privacy#firewalls
    - title: Network Analysis Tools
      url: https://github.com/Lissy93/awesome-privacy#network-analysis
    - title: Self-Hosted Network Security Tools
      url: https://github.com/Lissy93/awesome-privacy#self-hosted-network-security
- title: Development
  slug: mobile-devices
  description: Reduce invasive tracking for cells, smartphones and tablets
  icon: mobile
  intro: >
    Smart phones have revolutionized so many aspects of life and brought the
    world to our fingertips. For many of us, smart phones are our primary means
    of communication, entertainment and access to knowledge. But while they've
    brought convenience to whole new level, there's some ugly things going on
    behind the screen.

    Geo-tracking is used to trace our every move, and we have little control over who has this data- your phone is even able to [track your location without GPS](https://gizmodo.com/how-to-track-a-cellphone-without-gps-or-consent-1821125371). Over the years numerous reports that surfaced, outlining ways in which your phone's [mic can eavesdrop](https://www.independent.co.uk/life-style/gadgets-and-tech/news/smartphone-apps-listening-privacy-alphonso-shazam-advertising-pool-3d-honey-quest-a8139451.html), and the [camera can watch you](https://www.businessinsider.com/hackers-governments-smartphone-iphone-camera-wikileaks-cybersecurity-hack-privacy-webcam-2017-6)- all without your knowledge or consent. And then there's the malicious apps, lack of security patches and potential/ likely backdoors.

    Using a smart phone generates a lot of data about you- from information you intentionally share, to data silently generated from your actions. It can be scary to see what Google, Microsoft, Apple and Facebook know about us- sometimes they know more than our closest family. It's hard to comprehend what your data will reveal, especially in conjunction with other data.

    This data is used for [far more than just advertising](https://internethealthreport.org/2018/the-good-the-bad-and-the-ugly-sides-of-data-tracking/) - more often it's used to rate people for finance, insurance and employment. Targeted ads can even be used for fine-grained surveillance (see [ADINT](https://adint.cs.washington.edu))

    More of us are concerned about how [governments use collect and use our smart phone data](https://www.statista.com/statistics/373916/global-opinion-online-monitoring-government/), and rightly so, federal agencies often [request our data from Google](https://www.statista.com/statistics/273501/global-data-requests-from-google-by-federal-agencies-and-governments/), [Facebook](https://www.statista.com/statistics/287845/global-data-requests-from-facebook-by-federal-agencies-and-governments/), Apple, Microsoft, Amazon, and other tech companies. Sometimes requests are made in bulk, returning detailed information on everybody within a certain geo-fence, [often for innocent people](https://www.nytimes.com/interactive/2019/04/13/us/google-location-tracking-police.html). And this doesn't include all of the internet traffic that intelligence agencies around the world have unhindered access to.
  checklist:
    - point: Encrypt your Device
      priority: Essential
      details: In order to keep your data safe from physical access, use file
        encryption. This will mean if your device is lost or stolen, no one will
        have access to your data.
    - point: Turn off connectivity features that aren’t being used
      priority: Essential
      details: When you're not using WiFi, Bluetooth, NFC etc, turn those features
        off. There are several common threats that utilise these features.
    - point: Keep app count to a minimum
      priority: Essential
      details: Uninstall apps that you don’t need or use regularly. As apps often run
        in the background, slowing your device down, but also collecting data.
    - point: App Permissions
      priority: Essential
      details: Don’t grant apps permissions that they don’t need. For Android,
        [Bouncer](https://awesome-privacy.xyz/security-tools/mobile-apps/bouncer)
        is an app that allows you to grant temporary/ 1-off permissions.
    - point: Only install Apps from official source
      priority: Essential
      details: Applications on Apple App Store and Google Play Store are scanned and
        cryptographically signed, making them less likely to be malicious.
    - point: Be Careful of Phone Charging Threats
      priority: Optional
      details: Juice Jacking is when hackers use public charging stations to install
        malware on your smartphone or tablet through a compromised USB port.
    - point: Set up a mobile carrier PIN
      priority: Essential
      details: SIM hijacking is when a hacker is able to get your mobile number
        transferred to their sim. The easiest way to protect against this is to
        set up a PIN through your mobile provider.
    - point: Opt-out of Caller ID Listings
      priority: Optional
      details: To keep your details private, you can unlist your number from caller ID
        apps like TrueCaller, CallApp, SyncMe, and Hiya.
    - point: Use Offline Maps
      priority: Optional
      details: Consider using an offline maps app, such as OsmAnd or Organic Maps, to
        reduce data leaks from map apps.
    - point: Opt-out of personalized ads
      priority: Optional
      details: You can slightly reduce the amount of data collected by opting-out of
        seeing personalized ads.
    - point: Erase after too many login attempts
      priority: Optional
      details: To protect against an attacker brute forcing your pin, set your device
        to erase after too many failed login attempts.
    - point: Monitor Trackers
      priority: Optional
      details: "[εxodus](https://awesome-privacy.xyz/security-tools/online-tools/εxod\
        us) is a great service which lets you search for any app and see which
        trackers are embedded in it."
    - point: Use a Mobile Firewall
      priority: Optional
      details: To prevent applications from leaking privacy-sensitive data, you can
        install a firewall app.
    - point: Reduce Background Activity
      priority: Optional
      details: For Android, SuperFreeze makes it possible to entirely freeze all
        background activities on a per-app basis.
    - point: Sandbox Mobile Apps
      priority: Optional
      details: Prevent permission-hungry apps from accessing your private data with
        [Island](https://awesome-privacy.xyz/security-tools/mobile-apps/island),
        a sandbox environment.
    - point: Tor Traffic
      priority: Advanced
      details: "[Orbot](https://awesome-privacy.xyz/security-tools/mobile-apps/orbot)
        provides a system-wide Tor connection, which will help protect you from
        surveillance and public WiFi threats."
    - point: Avoid Custom Virtual Keyboards
      priority: Optional
      details: It is recommended to stick with your device's stock keyboard. If you
        choose to use a third-party keyboard app, ensure it is reputable.
    - point: Restart Device Regularly
      priority: Optional
      details: Restarting your phone at least once a week will clear the app state
        cached in memory and may run more smoothly after a restart.
    - point: Avoid SMS
      priority: Optional
      details: SMS should not be used to receive 2FA codes or for communication,
        instead use an encrypted messaging app, such as
        [Signal](https://awesome-privacy.xyz/communication/encrypted-messaging/signal).
    - point: Keep your Number Private
      priority: Optional
      details: "[MySudo](https://awesome-privacy.xyz/finance/virtual-credit-cards/mys\
        udo) allows you to create and use virtual phone numbers for different
        people or groups. This is great for compartmentalisation."
    - point: Watch out for Stalkerware
      priority: Optional
      details: Stalkerware is malware that is installed directly onto your device by
        someone you know. The best way to get rid of it is through a factory
        reset.
    - point: Favor the Browser, over Dedicated App
      priority: Optional
      details: Where possible, consider using a secure browser to access sites, rather
        than installing dedicated applications.
    - point: Consider running a custom ROM (Android)
      priority: Advanced
      details: If you're concerned about your device manufacturer collecting too much
        personal information, consider a privacy-focused custom ROM.
  color: fuchsia
  softwareLinks:
    - title: Mobile Apps, for Security + Privacy
      url: https://github.com/Lissy93/awesome-privacy#mobile-apps
    - title: Encrypted Messaging
      url: https://github.com/Lissy93/awesome-privacy#encrypted-messaging
    - title: Mobile Operation Systems
      url: https://github.com/Lissy93/awesome-privacy#mobile-operating-systems
- title: Supply Chain Management
  slug: personal-computers
  description: Securing your PC's operating system, data & activity
  icon: computer
  intro: >
    Although Windows and OS X are easy to use and convenient, they both are
    far from secure. Your OS provides the interface between hardware and your
    applications, so if compromised can have detrimental effects.
  checklist:
    - point: Keep your System up-to-date
      priority: Essential
      details: System updates contain fixes/patches for security issues, improve
        performance, and sometimes add new features. Install new updates when
        prompted.
    - point: Encrypt your Device
      priority: Essential
      details: Use BitLocker for Windows, FileVault on MacOS, or LUKS on Linux, to
        enable full disk encryption. This prevents unauthorized access if your
        computer is lost or stolen.
    - point: Backup Important Data
      priority: Essential
      details: Maintaining encrypted backups prevents loss due to ransomware, theft,
        or damage. Consider using
        [Cryptomator](https://awesome-privacy.xyz/security-tools/mobile-apps/cryptomator)
        for cloud files or
        [VeraCrypt](https://awesome-privacy.xyz/essentials/file-encryption/veracrypt)
        for USB drives.
    - point: Be Careful Plugging USB Devices into your Computer
      priority: Essential
      details: USB devices can pose serious threats. Consider making a USB sanitizer
        with CIRCLean to safely check USB devices.
    - point: Activate Screen-Lock when Idle
      priority: Essential
      details: Lock your computer when away and set it to require a password on resume
        from screensaver or sleep to prevent unauthorized access.
    - point: Disable Cortana or Siri
      priority: Essential
      details: Voice-controlled assistants can have privacy implications due to data
        sent back for processing. Disable or limit their listening capabilities.
    - point: Review your Installed Apps
      priority: Essential
      details: Keep installed applications to a minimum to reduce exposure to
        vulnerabilities and regularly clear application caches.
    - point: Manage Permissions
      priority: Essential
      details: Control which apps have access to your location, camera, microphone,
        contacts, and other sensitive information.
    - point: Disallow Usage Data from being sent to the Cloud
      priority: Essential
      details: Limit the amount of usage information or feedback sent to the cloud to
        protect your privacy.
    - point: Avoid Quick Unlock
      priority: Essential
      details: Use a strong password instead of biometrics or short PINs for unlocking
        your computer to enhance security.
    - point: Power Off Computer, instead of Standby
      priority: Essential
      details: Shut down your device when not in use, especially if your disk is
        encrypted, to keep data secure.
    - point: Don't link your PC with your Microsoft or Apple Account
      priority: Optional
      details: Use a local account only to prevent data syncing and exposure. Avoid
        using sync services that compromise privacy.
    - point: Check which Sharing Services are Enabled
      priority: Optional
      details: Disable network sharing features you are not using to close gateways to
        common threats.
    - point: Don't use Root/Admin Account for Non-Admin Tasks
      priority: Optional
      details: Use an unprivileged user account for daily tasks and only elevate
        permissions for administrative changes to mitigate vulnerabilities.
    - point: Block Webcam + Microphone
      priority: Optional
      details: Cover your webcam when not in use and consider blocking unauthorized
        audio recording to protect privacy.
    - point: Use a Privacy Filter
      priority: Optional
      details: Use a screen privacy filter in public spaces to prevent shoulder
        surfing and protect sensitive information.
    - point: Physically Secure Device
      priority: Optional
      details: Use a Kensington Lock to secure your laptop in public spaces and
        consider port locks to prevent unauthorized physical access.
    - point: Don't Charge Devices from your PC
      priority: Optional
      details: Use a power bank or AC wall charger instead of your PC to avoid
        security risks associated with USB connections.
    - point: Randomize your hardware address on Wi-Fi
      priority: Optional
      details: Modify or randomize your MAC address to protect against tracking across
        different WiFi networks.
    - point: Use a Firewall
      priority: Optional
      details: Install a firewall app to monitor and block unwanted internet access by
        certain applications, protecting against remote access attacks and
        privacy breaches.
    - point: Protect Against Software Keyloggers
      priority: Optional
      details: Use key stroke encryption tools to protect against software keyloggers
        recording your keystrokes.
    - point: Check Keyboard Connection
      priority: Optional
      details: Be vigilant for hardware keyloggers when using public or unfamiliar
        computers by checking keyboard connections.
    - point: Prevent Keystroke Injection Attacks
      priority: Optional
      details: Lock your PC when away and consider using USBGuard or similar tools to
        protect against keystroke injection attacks.
    - point: Don't use commercial "Free" Anti-Virus
      priority: Optional
      details: Rely on built-in security tools and avoid free anti-virus applications
        due to their potential for privacy invasion and data collection.
    - point: Periodically check for Rootkits
      priority: Advanced
      details: Regularly check for rootkits to detect and mitigate full system control
        threats using tools like
        [chkrootkit](https://awesome-privacy.xyz/operating-systems/linux-defenses/chkrootkit).
    - point: BIOS Boot Password
      priority: Advanced
      details: Enable a BIOS or UEFI password to add an additional security layer
        during boot-up, though be aware of its limitations.
    - point: Use a Security-Focused Operating System
      priority: Advanced
      details: Consider switching to Linux or a security-focused distro like QubeOS or
        [Tails](https://awesome-privacy.xyz/operating-systems/desktop-operating-systems/tails)
        for enhanced privacy and security.
    - point: Make Use of VMs
      priority: Advanced
      details: Use virtual machines for risky activities or testing suspicious
        software to isolate potential threats from your primary system.
    - point: Compartmentalize
      priority: Advanced
      details: Isolate different programs and data sources from one another as much as
        possible to limit the extent of potential breaches.
    - point: Disable Undesired Features (Windows)
      priority: Advanced
      details: Disable unnecessary Windows "features" and services that run in the
        background to reduce data collection and resource use.
    - point: Secure Boot
      priority: Advanced
      details: Ensure that Secure Boot is enabled to prevent malware from replacing
        your boot loader and other critical software.
    - point: Secure SSH Access
      priority: Advanced
      details: Take steps to protect SSH access from attacks by changing the default
        port, using SSH keys, and configuring firewalls.
    - point: Close Un-used Open Ports
      priority: Advanced
      details: Turn off services listening on external ports that are not needed to
        protect against remote exploits and improve security.
    - point: Implement Mandatory Access Control
      priority: Advanced
      details: Restrict privileged access to limit the damage that can be done if a
        system is compromised.
    - point: Use Canary Tokens
      priority: Advanced
      details: Deploy canary tokens to detect unauthorized access to your files or
        emails faster and gather information about the intruder.
  color: pink
  softwareLinks:
    - title: Secure Operating Systems
      url: https://github.com/Lissy93/awesome-privacy#desktop-operating-systems
    - title: Linux Defenses
      url: https://github.com/Lissy93/awesome-privacy#linux-defences
    - title: Windows Defenses
      url: https://github.com/Lissy93/awesome-privacy#windows-defences
    - title: Mac OS Defenses
      url: https://github.com/Lissy93/awesome-privacy#mac-os-defences
    - title: Anti-Malware
      url: https://github.com/Lissy93/awesome-privacy#anti-malware
    - title: Firewalls
      url: https://github.com/Lissy93/awesome-privacy#firewalls-1
    - title: File Encryption
      url: https://github.com/Lissy93/awesome-privacy#file-encryption
- title: Security Risks
  slug: human-aspect
  description: Avoiding social engineering security risks
  icon: human
  intro: Many data breaches, hacks and attacks are caused by human error. The
    following list contains steps you should take, to reduce the risk of this
    happening to you. Many of them are common sense, but it's worth takin note
    of.
  checklist:
    - point: Verify Recipients
      priority: Essential
      details: Emails can be easily spoofed. Verify the sender's authenticity,
        especially for sensitive actions, and prefer entering URLs manually
        rather than clicking links in emails.
    - point: Don't Trust Your Popup Notifications
      priority: Essential
      details: Fake pop-ups can be deployed by malicious actors. Always check the URL
        before entering any information on a popup.
    - point: Never Leave Device Unattended
      priority: Essential
      details: Unattended devices can be compromised even with strong passwords. Use
        encryption and remote erase features like Find My Phone for lost
        devices.
    - point: Prevent Camfecting
      priority: Essential
      details: Protect against camfecting by using webcam covers and microphone
        blockers. Mute home assistants when not in use or discussing sensitive
        matters.
    - point: Stay protected from shoulder surfers
      priority: Essential
      details: Use privacy screens on laptops and mobiles to prevent others from
        reading your screen in public spaces.
    - point: Educate yourself about phishing attacks
      priority: Essential
      details: Be cautious of phishing attempts. Verify URLs, context of received
        messages, and employ good security practices like using 2FA and not
        reusing passwords.
    - point: Watch out for Stalkerware
      priority: Essential
      details: Be aware of stalkerware installed by acquaintances for spying. Look out
        for signs like unusual battery usage and perform factory resets if
        suspected.
    - point: Install Reputable Software from Trusted Sources
      priority: Essential
      details: Only download software from legitimate sources and check files with
        tools like [Virus
        Total](https://awesome-privacy.xyz/security-tools/online-tools/virus-total)
        before installation.
    - point: Store personal data securely
      priority: Essential
      details: Ensure all personal data on devices or in the cloud is encrypted to
        protect against unauthorized access.
    - point: Obscure Personal Details from Documents
      priority: Essential
      details: When sharing documents, obscure personal details with opaque rectangles
        to prevent information leakage.
    - point: Do not assume a site is secure, just because it is `HTTPS`
      priority: Essential
      details: HTTPS does not guarantee a website's legitimacy. Verify URLs and
        exercise caution with personal data.
    - point: Use Virtual Cards when paying online
      priority: Optional
      details: Use virtual cards for online payments to protect your banking details
        and limit transaction risks.
    - point: Review application permissions
      priority: Optional
      details: Regularly review and manage app permissions to ensure no unnecessary
        access to sensitive device features.
    - point: Opt-out of public lists
      priority: Optional
      details: Remove yourself from public databases and marketing lists to reduce
        unwanted contacts and potential risks.
    - point: Never Provide Additional PII When Opting-Out
      priority: Optional
      details: Do not provide additional personal information when opting out of data
        services to avoid further data collection.
    - point: Opt-out of data sharing
      priority: Optional
      details: Many apps and services default to data sharing settings. Opt out to
        protect your data from being shared with third parties.
    - point: Review and update social media privacy
      priority: Optional
      details: Regularly check and update your social media settings due to frequent
        terms updates that may affect your privacy settings.
    - point: Compartmentalize
      priority: Advanced
      details: Keep different areas of digital activity separate to limit data
        exposure in case of a breach.
    - point: WhoIs Privacy Guard
      priority: Advanced
      details: Use WhoIs Privacy Guard for domain registrations to protect your
        personal information from public searches.
    - point: Use a forwarding address
      priority: Advanced
      details: Use a PO Box or forwarding address for mail to prevent companies from
        knowing your real address, adding a layer of privacy protection.
    - point: Use anonymous payment methods
      priority: Advanced
      details: Opt for anonymous payment methods like cryptocurrencies to avoid
        entering identifiable information online.
  color: indigo
- title: Physical Security
  slug: physical-security
  description: Taking measures to prevent IRL security incidents
  icon: physical
  intro: >-
    Public records often include sensitive personal data (full name, date of
    birth, phone number, email, address, ethnicity etc), and are gathered from a
    range of sources (census records, birth/ death/ marriage certificates, voter
    registrants, marketing information, customer databases, motor vehicle
    records, professional/ business licenses and all court files in full
    detail). This sensitive personal information is [easy and legal to
    access](https://www.consumerreports.org/consumerist/its-creepy-but-not-illegal-for-this-website-to-provide-all-your-public-info-to-anyone/),
    which raises some [serious privacy
    concerns](https://privacyrights.org/resources/public-records-internet-privacy-dilemma)
    (identity theft, personal safety risks/ stalkers, destruction of
    reputations, dossier society)


    CCTV is one of the major ways that the corporations, individuals and the government tracks your movements. In London, UK the average person is caught on camera about 500 times per day. This network is continuing to grow, and in many cities around the world, facial recognition is being rolled out, meaning the state can know the identity of residents on the footage in real-time.

    Strong authentication, encrypted devices, patched software and anonymous web browsing may be of little use if someone is able to physically compromise you, your devices and your data. This section outlines some basic methods for physical security
  checklist:
    - point: "CWE-ID: 5J2EE Misconfiguration: Data Transmission Without Encryption"
      priority: Essential
      details: "Information sent over a network can be compromised while in transit.
        An attacker may be able to read or modify the contents if the data are
        sent in plaintext or are weakly
        encrypted.Guidelines:::TYPE:Other:NOTE:If an application uses SSL to
        guarantee confidential communication with client browsers, the
        application configuration should make it impossible to view any access
        controlled page without SSL. There are three common ways for SSL to be
        bypassed: A user manually enters URL and types HTTP rather than HTTPS.
        Attackers intentionally send a user to an insecure URL. A programmer
        erroneously creates a relative link to a page in the application, which
        does not switch from HTTP to HTTPS. (This is particularly easy to do
        when the link moves between public and secured areas on a web site.)::"
    - point: "CWE-ID: 6J2EE Misconfiguration: Insufficient Session-ID Length"
      priority: Essential
      details: "The J2EE application is configured to use an insufficient session ID
        length.Guidelines:"
    - point: "CWE-ID: 7J2EE Misconfiguration: Missing Custom Error Page"
      priority: Essential
      details: "The default error page of a web application should not display
        sensitive information about the product.Guidelines:"
    - point: "CWE-ID: 8J2EE Misconfiguration: Entity Bean Declared Remote"
      priority: Essential
      details: "When an application exposes a remote interface for an entity bean, it
        might also expose methods that get or set the bean's data. These methods
        could be leveraged to read sensitive information, or to change data in
        ways that violate the application's expectations, potentially leading to
        other vulnerabilities.Guidelines:::TYPE:Other:NOTE:Entity beans that
        expose a remote interface become part of an application's attack
        surface. For performance reasons, an application should rarely use
        remote entity beans, so there is a good chance that a remote entity bean
        declaration is an error.::"
    - point: "CWE-ID: 9J2EE Misconfiguration: Weak Access Permissions for EJB Methods"
      priority: Essential
      details: "If elevated access rights are assigned to EJB methods, then an
        attacker can take advantage of the permissions to exploit the
        product.Guidelines:"
    - point: "CWE-ID: 11ASP.NET Misconfiguration: Creating Debug Binary"
      priority: Essential
      details: "Debugging messages help attackers learn about the system and plan a
        form of attack.Guidelines:"
    - point: "CWE-ID: 12ASP.NET Misconfiguration: Missing Custom Error Page"
      priority: Essential
      details: "An ASP .NET application must enable custom error pages in order to
        prevent attackers from mining information from the framework's built-in
        responses.Guidelines:"
    - point: "CWE-ID: 13ASP.NET Misconfiguration: Password in Configuration File"
      priority: Essential
      details: "Storing a plaintext password in a configuration file allows anyone who
        can read the file access to the password-protected resource making them
        an easy target for attackers.Guidelines:"
    - point: "CWE-ID: 14Compiler Removal of Code to Clear Buffers"
      priority: Essential
      details: "Sensitive memory is cleared according to the source code, but compiler
        optimizations leave the memory untouched when it is not read from again,
        aka dead store removal.Guidelines:"
    - point: "CWE-ID: 15External Control of System or Configuration Setting"
      priority: Essential
      details: "One or more system settings or configuration elements can be
        externally controlled by a user.Guidelines:"
    - point: "CWE-ID: 20Improper Input Validation"
      priority: Essential
      details: "The product receives input or data, but it does not validate or
        incorrectly validates that the input has the properties that are
        required to process the data safely and
        correctly.Guidelines:::TYPE:Relationship:NOTE:CWE-116 and CWE-20 have a
        close association because, depending on the nature of the structured
        message, proper input validation can indirectly prevent special
        characters from changing the meaning of a structured message. For
        example, by validating that a numeric ID field should only contain the
        0-9 characters, the programmer effectively prevents injection
        attacks.::TYPE:Maintenance:NOTE:As of 2020, this entry is used more
        often than preferred, and it is a source of frequent confusion. It is
        being actively modified for CWE 4.1 and subsequent
        versions.::TYPE:Maintenance:NOTE:Concepts such as validation, data
        transformation, and neutralization are being refined, so relationships
        between CWE-20 and other entries such as CWE-707 may change in future
        versions, along with an update to the Vulnerability Theory
        document.::TYPE:Maintenance:NOTE:Input validation - whether missing or
        incorrect - is such an essential and widespread part of secure
        development that it is implicit in many different weaknesses.
        Traditionally, problems such as buffer overflows and XSS have been
        classified as input validation problems by many security professionals.
        However, input validation is not necessarily the only protection
        mechanism available for avoiding such problems, and in some cases it is
        not even sufficient. The CWE team has begun capturing these subtleties
        in chains within the Research Concepts view (CWE-1000), but more work is
        needed.::TYPE:Terminology:NOTE:The input validation term is extremely
        common, but it is used in many different ways. In some cases its usage
        can obscure the real underlying weakness or otherwise hide chaining and
        composite relationships. Some people use input validation as a general
        term that covers many different neutralization techniques for ensuring
        that input is appropriate, such as filtering, canonicalization, and
        escaping. Others use the term in a more narrow context to simply mean
        checking if an input conforms to expectations without changing it. CWE
        uses this more narrow interpretation.::"
    - point: "CWE-ID: 22Improper Limitation of a Pathname to a Restricted Directory
        ('Path Traversal')"
      priority: Essential
      details: "The product uses external input to construct a pathname that is
        intended to identify a file or directory that is located underneath a
        restricted parent directory, but the product does not properly
        neutralize special elements within the pathname that can cause the
        pathname to resolve to a location that is outside of the restricted
        directory.Guidelines:::TYPE:Relationship:NOTE:Pathname equivalence can
        be regarded as a type of canonicalization
        error.::TYPE:Relationship:NOTE:Some pathname equivalence issues are not
        directly related to directory traversal, rather are used to bypass
        security-relevant checks for whether a file/directory can be accessed by
        the attacker (e.g. a trailing / on a filename could bypass access rules
        that don't expect a trailing /, causing a server to provide the file
        when it normally would not).::TYPE:Terminology:NOTE:Like other
        weaknesses, terminology is often based on the types of manipulations
        used, instead of the underlying weaknesses. Some people use directory
        traversal only to refer to the injection of .. and equivalent sequences
        whose specific meaning is to traverse directories. Other variants like
        absolute pathname and drive letter have the *effect* of directory
        traversal, but some people may not call it such, since it doesn't
        involve .. or equivalent.::TYPE:Research Gap:NOTE:Many variants of path
        traversal attacks are probably under-studied with respect to root cause.
        CWE-790 and CWE-182 begin to cover part of this gap.::TYPE:Research
        Gap:NOTE:Incomplete diagnosis or reporting of vulnerabilities can make
        it difficult to know which variant is affected. For example, a
        researcher might say that .. is vulnerable, but not test ../ which may
        also be vulnerable. Any combination of directory separators (/, , etc.)
        and numbers of . (e.g. ....) can produce unique variants; for example,
        the //../ variant is not listed (CVE-2004-0325). See this entry's
        children and lower-level descendants.::"
    - point: "CWE-ID: 23Relative Path Traversal"
      priority: Essential
      details: "The product uses external input to construct a pathname that should be
        within a restricted directory, but it does not properly neutralize
        sequences such as .. that can resolve to a location that is outside of
        that directory.Guidelines:"
    - point: "CWE-ID: 24Path Traversal: '../filedir'"
      priority: Essential
      details: "The product uses external input to construct a pathname that should be
        within a restricted directory, but it does not properly neutralize ../
        sequences that can resolve to a location that is outside of that
        directory.Guidelines:"
    - point: "CWE-ID: 25Path Traversal: '/../filedir'"
      priority: Essential
      details: "The product uses external input to construct a pathname that should be
        within a restricted directory, but it does not properly neutralize /../
        sequences that can resolve to a location that is outside of that
        directory.Guidelines:"
    - point: "CWE-ID: 26Path Traversal: '/dir/../filename'"
      priority: Essential
      details: "The product uses external input to construct a pathname that should be
        within a restricted directory, but it does not properly neutralize
        /dir/../filename sequences that can resolve to a location that is
        outside of that directory.Guidelines:"
    - point: "CWE-ID: 27Path Traversal: 'dir/../../filename'"
      priority: Essential
      details: "The product uses external input to construct a pathname that should be
        within a restricted directory, but it does not properly neutralize
        multiple internal ../ sequences that can resolve to a location that is
        outside of that directory.Guidelines:"
    - point: "CWE-ID: 28Path Traversal: '..filedir'"
      priority: Essential
      details: "The product uses external input to construct a pathname that should be
        within a restricted directory, but it does not properly neutralize ..
        sequences that can resolve to a location that is outside of that
        directory.Guidelines:"
    - point: "CWE-ID: 29Path Traversal: '..filename'"
      priority: Essential
      details: "The product uses external input to construct a pathname that should be
        within a restricted directory, but it does not properly neutralize
        '..filename' (leading backslash dot dot) sequences that can resolve to a
        location that is outside of that directory.Guidelines:"
    - point: "CWE-ID: 30Path Traversal: 'dir..filename'"
      priority: Essential
      details: "The product uses external input to construct a pathname that should be
        within a restricted directory, but it does not properly neutralize
        'dir..filename' (leading backslash dot dot) sequences that can resolve
        to a location that is outside of that directory.Guidelines:"
    - point: "CWE-ID: 31Path Traversal: 'dir....filename'"
      priority: Essential
      details: "The product uses external input to construct a pathname that should be
        within a restricted directory, but it does not properly neutralize
        'dir....filename' (multiple internal backslash dot dot) sequences that
        can resolve to a location that is outside of that directory.Guidelines:"
    - point: "CWE-ID: 32Path Traversal: '...' (Triple Dot)"
      priority: Essential
      details: "The product uses external input to construct a pathname that should be
        within a restricted directory, but it does not properly neutralize '...'
        (triple dot) sequences that can resolve to a location that is outside of
        that directory.Guidelines:::TYPE:Maintenance:NOTE:This
        manipulation-focused entry is currently hiding two distinct weaknesses,
        so it might need to be split. The manipulation is effective in two
        different contexts: it is equivalent to .... on Windows, or it can take
        advantage of incomplete filtering, e.g. if the programmer does a
        single-pass removal of ./ in a string (collapse of data into unsafe
        value, CWE-182).::"
    - point: "CWE-ID: 33Path Traversal: '....' (Multiple Dot)"
      priority: Essential
      details: "The product uses external input to construct a pathname that should be
        within a restricted directory, but it does not properly neutralize
        '....' (multiple dot) sequences that can resolve to a location that is
        outside of that directory.Guidelines:::TYPE:Maintenance:NOTE:Like the
        triple-dot CWE-32, this manipulation probably hides multiple weaknesses
        that should be made more explicit.::"
    - point: "CWE-ID: 34Path Traversal: '....//'"
      priority: Essential
      details: "The product uses external input to construct a pathname that should be
        within a restricted directory, but it does not properly neutralize
        '....//' (doubled dot dot slash) sequences that can resolve to a
        location that is outside of that
        directory.Guidelines:::TYPE:Relationship:NOTE:This could occur due to a
        cleansing error that removes a single ../ from ....//::"
    - point: "CWE-ID: 35Path Traversal: '.../...//'"
      priority: Essential
      details: "The product uses external input to construct a pathname that should be
        within a restricted directory, but it does not properly neutralize
        '.../...//' (doubled triple dot slash) sequences that can resolve to a
        location that is outside of that directory.Guidelines:"
    - point: "CWE-ID: 36Absolute Path Traversal"
      priority: Essential
      details: "The product uses external input to construct a pathname that should be
        within a restricted directory, but it does not properly neutralize
        absolute path sequences such as /abs/path that can resolve to a location
        that is outside of that directory.Guidelines:"
    - point: "CWE-ID: 37Path Traversal: '/absolute/pathname/here'"
      priority: Essential
      details: "The product accepts input in the form of a slash absolute path
        ('/absolute/pathname/here') without appropriate validation, which can
        allow an attacker to traverse the file system to unintended locations or
        access arbitrary files.Guidelines:"
    - point: "CWE-ID: 38Path Traversal: 'absolutepathnamehere'"
      priority: Essential
      details: "The product accepts input in the form of a backslash absolute path
        ('absolutepathnamehere') without appropriate validation, which can allow
        an attacker to traverse the file system to unintended locations or
        access arbitrary files.Guidelines:"
    - point: "CWE-ID: 39Path Traversal: 'C:dirname'"
      priority: Essential
      details: "The product accepts input that contains a drive letter or Windows
        volume letter ('C:dirname') that potentially redirects access to an
        unintended location or arbitrary file.Guidelines:"
    - point: "CWE-ID: 40Path Traversal: 'UNCsharename' (Windows UNC Share)"
      priority: Essential
      details: "The product accepts input that identifies a Windows UNC share
        ('UNCsharename') that potentially redirects access to an unintended
        location or arbitrary file.Guidelines:"
    - point: "CWE-ID: 41Improper Resolution of Path Equivalence"
      priority: Essential
      details: "The product is vulnerable to file system contents disclosure through
        path equivalence. Path equivalence involves the use of special
        characters in file and directory names. The associated manipulations are
        intended to generate multiple names for the same
        object.Guidelines:::TYPE:Relationship:NOTE:Some of these manipulations
        could be effective in path traversal issues, too.::"
    - point: "CWE-ID: 42Path Equivalence: 'filename.' (Trailing Dot)"
      priority: Essential
      details: "The product accepts path input in the form of trailing dot
        ('filedir.') without appropriate validation, which can lead to ambiguous
        path resolution and allow an attacker to traverse the file system to
        unintended locations or access arbitrary files.Guidelines:"
    - point: "CWE-ID: 43Path Equivalence: 'filename....' (Multiple Trailing Dot)"
      priority: Essential
      details: "The product accepts path input in the form of multiple trailing dot
        ('filedir....') without appropriate validation, which can lead to
        ambiguous path resolution and allow an attacker to traverse the file
        system to unintended locations or access arbitrary files.Guidelines:"
    - point: "CWE-ID: 44Path Equivalence: 'file.name' (Internal Dot)"
      priority: Essential
      details: "The product accepts path input in the form of internal dot
        ('file.ordir') without appropriate validation, which can lead to
        ambiguous path resolution and allow an attacker to traverse the file
        system to unintended locations or access arbitrary
        files.Guidelines:::TYPE:Relationship:NOTE:An improper attempt to remove
        the internal dots from the string could lead to CWE-181 (Incorrect
        Behavior Order: Validate Before Filter).::"
    - point: "CWE-ID: 45Path Equivalence: 'file...name' (Multiple Internal Dot)"
      priority: Essential
      details: "The product accepts path input in the form of multiple internal dot
        ('file...dir') without appropriate validation, which can lead to
        ambiguous path resolution and allow an attacker to traverse the file
        system to unintended locations or access arbitrary
        files.Guidelines:::TYPE:Relationship:NOTE:An improper attempt to remove
        the internal dots from the string could lead to CWE-181 (Incorrect
        Behavior Order: Validate Before Filter).::"
    - point: "CWE-ID: 46Path Equivalence: 'filename ' (Trailing Space)"
      priority: Essential
      details: "The product accepts path input in the form of trailing space ('filedir
        ') without appropriate validation, which can lead to ambiguous path
        resolution and allow an attacker to traverse the file system to
        unintended locations or access arbitrary files.Guidelines:"
    - point: "CWE-ID: 47Path Equivalence: ' filename' (Leading Space)"
      priority: Essential
      details: "The product accepts path input in the form of leading space ('
        filedir') without appropriate validation, which can lead to ambiguous
        path resolution and allow an attacker to traverse the file system to
        unintended locations or access arbitrary files.Guidelines:"
    - point: "CWE-ID: 48Path Equivalence: 'file name' (Internal Whitespace)"
      priority: Essential
      details: "The product accepts path input in the form of internal space
        ('file(SPACE)name') without appropriate validation, which can lead to
        ambiguous path resolution and allow an attacker to traverse the file
        system to unintended locations or access arbitrary
        files.Guidelines:::TYPE:Relationship:NOTE:This weakness is likely to
        overlap quoting problems, e.g. the Program Files unquoted search path
        (CWE-428). It also could be an equivalence issue if filtering removes
        all extraneous spaces.::TYPE:Relationship:NOTE:Whitespace can be a
        factor in other weaknesses not directly related to equivalence. It can
        also be used to spoof icons or hide files with dangerous names (see icon
        manipulation and visual truncation in CWE-451).::"
    - point: "CWE-ID: 49Path Equivalence: 'filename/' (Trailing Slash)"
      priority: Essential
      details: "The product accepts path input in the form of trailing slash
        ('filedir/') without appropriate validation, which can lead to ambiguous
        path resolution and allow an attacker to traverse the file system to
        unintended locations or access arbitrary files.Guidelines:"
    - point: "CWE-ID: 50Path Equivalence: '//multiple/leading/slash'"
      priority: Essential
      details: "The product accepts path input in the form of multiple leading slash
        ('//multiple/leading/slash') without appropriate validation, which can
        lead to ambiguous path resolution and allow an attacker to traverse the
        file system to unintended locations or access arbitrary
        files.Guidelines:"
    - point: "CWE-ID: 51Path Equivalence: '/multiple//internal/slash'"
      priority: Essential
      details: "The product accepts path input in the form of multiple internal slash
        ('/multiple//internal/slash/') without appropriate validation, which can
        lead to ambiguous path resolution and allow an attacker to traverse the
        file system to unintended locations or access arbitrary
        files.Guidelines:"
    - point: "CWE-ID: 52Path Equivalence: '/multiple/trailing/slash//'"
      priority: Essential
      details: "The product accepts path input in the form of multiple trailing slash
        ('/multiple/trailing/slash//') without appropriate validation, which can
        lead to ambiguous path resolution and allow an attacker to traverse the
        file system to unintended locations or access arbitrary
        files.Guidelines:"
    - point: "CWE-ID: 53Path Equivalence: 'multipleinternalbackslash'"
      priority: Essential
      details: "The product accepts path input in the form of multiple internal
        backslash ('multipletrailingslash') without appropriate validation,
        which can lead to ambiguous path resolution and allow an attacker to
        traverse the file system to unintended locations or access arbitrary
        files.Guidelines:"
    - point: "CWE-ID: 54Path Equivalence: 'filedir' (Trailing Backslash)"
      priority: Essential
      details: "The product accepts path input in the form of trailing backslash
        ('filedir') without appropriate validation, which can lead to ambiguous
        path resolution and allow an attacker to traverse the file system to
        unintended locations or access arbitrary files.Guidelines:"
    - point: "CWE-ID: 55Path Equivalence: '/./' (Single Dot Directory)"
      priority: Essential
      details: "The product accepts path input in the form of single dot directory
        exploit ('/./') without appropriate validation, which can lead to
        ambiguous path resolution and allow an attacker to traverse the file
        system to unintended locations or access arbitrary files.Guidelines:"
    - point: "CWE-ID: 56Path Equivalence: 'filedir*' (Wildcard)"
      priority: Essential
      details: "The product accepts path input in the form of asterisk wildcard
        ('filedir*') without appropriate validation, which can lead to ambiguous
        path resolution and allow an attacker to traverse the file system to
        unintended locations or access arbitrary files.Guidelines:"
    - point: "CWE-ID: 57Path Equivalence: 'fakedir/../realdir/filename'"
      priority: Essential
      details: "The product contains protection mechanisms to restrict access to
        'realdir/filename', but it constructs pathnames using external input in
        the form of 'fakedir/../realdir/filename' that are not handled by those
        mechanisms. This allows attackers to perform unauthorized actions
        against the targeted file.Guidelines:::TYPE:Theoretical:NOTE:This is a
        manipulation that uses an injection for one consequence (containment
        violation using relative path) to achieve a different consequence
        (equivalence by alternate name).::"
    - point: "CWE-ID: 58Path Equivalence: Windows 8.3 Filename"
      priority: Essential
      details: "The product contains a protection mechanism that restricts access to a
        long filename on a Windows operating system, but it does not properly
        restrict access to the equivalent short 8.3
        filename.Guidelines:::TYPE:Research Gap:NOTE:Probably under-studied.::"
    - point: "CWE-ID: 59Improper Link Resolution Before File Access ('Link
        Following')"
      priority: Essential
      details: "The product attempts to access a file based on the filename, but it
        does not properly prevent that filename from identifying a link or
        shortcut that resolves to an unintended
        resource.Guidelines:::TYPE:Theoretical:NOTE:Link following
        vulnerabilities are Multi-factor Vulnerabilities (MFV). They are the
        combination of multiple elements: file or directory permissions,
        filename predictability, race conditions, and in some cases, a design
        limitation in which there is no mechanism for performing atomic file
        creation operations. Some potential factors are race conditions,
        permissions, and predictability.::"
    - point: "CWE-ID: 61UNIX Symbolic Link (Symlink) Following"
      priority: Essential
      details: "The product, when opening a file or directory, does not sufficiently
        account for when the file is a symbolic link that resolves to a target
        outside of the intended control sphere. This could allow an attacker to
        cause the product to operate on unauthorized
        files.Guidelines:::TYPE:Research Gap:NOTE:Symlink vulnerabilities are
        regularly found in C and shell programs, but all programming languages
        can have this problem. Even shell programs are probably under-reported.
        Second-order symlink vulnerabilities may exist in programs that invoke
        other programs that follow symlinks. They are rarely reported but are
        likely to be fairly common when process invocation is used [REF-493].::"
    - point: "CWE-ID: 62UNIX Hard Link"
      priority: Essential
      details: "The product, when opening a file or directory, does not sufficiently
        account for when the name is associated with a hard link to a target
        that is outside of the intended control sphere. This could allow an
        attacker to cause the product to operate on unauthorized
        files.Guidelines:"
    - point: "CWE-ID: 64Windows Shortcut Following (.LNK)"
      priority: Essential
      details: "The product, when opening a file or directory, does not sufficiently
        handle when the file is a Windows shortcut (.LNK) whose target is
        outside of the intended control sphere. This could allow an attacker to
        cause the product to operate on unauthorized
        files.Guidelines:::TYPE:Research Gap:NOTE:Under-studied. Windows .LNK
        files are more portable than Unix symlinks and have been used in remote
        exploits. Some Windows API's will access LNK's as if they are regular
        files, so one would expect that they would be reported more
        frequently.::"
    - point: "CWE-ID: 65Windows Hard Link"
      priority: Essential
      details: "The product, when opening a file or directory, does not sufficiently
        handle when the name is associated with a hard link to a target that is
        outside of the intended control sphere. This could allow an attacker to
        cause the product to operate on unauthorized files.Guidelines:"
    - point: "CWE-ID: 66Improper Handling of File Names that Identify Virtual
        Resources"
      priority: Essential
      details: "The product does not handle or incorrectly handles a file name that
        identifies a virtual resource that is not directly specified within the
        directory that is associated with the file name, causing the product to
        perform file-based operations on a resource that is not a
        file.Guidelines:"
    - point: "CWE-ID: 67Improper Handling of Windows Device Names"
      priority: Essential
      details: "The product constructs pathnames from user input, but it does not
        handle or incorrectly handles a pathname containing a Windows device
        name such as AUX or CON. This typically leads to denial of service or an
        information exposure when the application attempts to process the
        pathname as a regular file.Guidelines:"
    - point: "CWE-ID: 69Improper Handling of Windows ::DATA Alternate Data Stream"
      priority: Essential
      details: "The product does not properly prevent access to, or detect usage of,
        alternate data streams (ADS).Guidelines:::TYPE:Theoretical:NOTE:This and
        similar problems exist because the same resource can have multiple
        identifiers that dictate which behavior can be performed on the
        resource.::"
    - point: "CWE-ID: 72Improper Handling of Apple HFS+ Alternate Data Stream Path"
      priority: Essential
      details: "The product does not properly handle special paths that may identify
        the data or resource fork of a file on the HFS+ file
        system.Guidelines:::TYPE:Theoretical:NOTE:This and similar problems
        exist because the same resource can have multiple identifiers that
        dictate which behavior can be performed on the resource.::TYPE:Research
        Gap:NOTE:Under-studied::"
    - point: "CWE-ID: 73External Control of File Name or Path"
      priority: Essential
      details: "The product allows user input to control or influence paths or file
        names that are used in filesystem
        operations.Guidelines:::TYPE:Maintenance:NOTE:CWE-114 is a Class, but it
        is listed a child of CWE-73 in view 1000. This suggests some abstraction
        problems that should be resolved in future
        versions.::TYPE:Relationship:NOTE:The external control of filenames can
        be the primary link in chains with other file-related weaknesses, as
        seen in the CanPrecede relationships. This is because software systems
        use files for many different purposes: to execute programs, load code
        libraries, to store application data, to store configuration settings,
        record temporary data, act as signals or semaphores to other processes,
        etc. However, those weaknesses do not always require external control.
        For example, link-following weaknesses (CWE-59) often involve pathnames
        that are not controllable by the attacker at all. The external control
        can be resultant from other issues. For example, in PHP applications,
        the register_globals setting can allow an attacker to modify variables
        that the programmer thought were immutable, enabling file inclusion
        (CWE-98) and path traversal (CWE-22). Operating with excessive
        privileges (CWE-250) might allow an attacker to specify an input
        filename that is not directly readable by the attacker, but is
        accessible to the privileged program. A buffer overflow (CWE-119) might
        give an attacker control over nearby memory locations that are related
        to pathnames, but were not directly modifiable by the attacker.::"
    - point: "CWE-ID: 74Improper Neutralization of Special Elements in Output Used by
        a Downstream Component ('Injection')"
      priority: Essential
      details: "The product constructs all or part of a command, data structure, or
        record using externally-influenced input from an upstream component, but
        it does not neutralize or incorrectly neutralizes special elements that
        could modify how it is parsed or interpreted when it is sent to a
        downstream component.Guidelines:::TYPE:Theoretical:NOTE:Many people
        treat injection only as an input validation problem (CWE-20) because
        many people do not distinguish between the consequence/attack
        (injection) and the protection mechanism that prevents the attack from
        succeeding. However, input validation is only one potential protection
        mechanism (output encoding is another), and there is a chaining
        relationship between improper input validation and the improper
        enforcement of the structure of messages to other components. Other
        issues not directly related to input validation, such as race
        conditions, could similarly impact message structure.::"
    - point: "CWE-ID: 75Failure to Sanitize Special Elements into a Different Plane
        (Special Element Injection)"
      priority: Essential
      details: "The product does not adequately filter user-controlled input for
        special elements with control implications.Guidelines:"
    - point: "CWE-ID: 76Improper Neutralization of Equivalent Special Elements"
      priority: Essential
      details: "The product correctly neutralizes certain special elements, but it
        improperly neutralizes equivalent special elements.Guidelines:"
    - point: "CWE-ID: 77Improper Neutralization of Special Elements used in a Command
        ('Command Injection')"
      priority: Essential
      details: "The product constructs all or part of a command using
        externally-influenced input from an upstream component, but it does not
        neutralize or incorrectly neutralizes special elements that could modify
        the intended command when it is sent to a downstream
        component.Guidelines:::TYPE:Terminology:NOTE:The command injection
        phrase carries different meanings to different people. For some people,
        it refers to any type of attack that can allow the attacker to execute
        commands of their own choosing, regardless of how those commands are
        inserted. The command injection could thus be resultant from another
        weakness. This usage also includes cases in which the functionality
        allows the user to specify an entire command, which is then executed;
        within CWE, this situation might be better regarded as an authorization
        problem (since an attacker should not be able to specify arbitrary
        commands.) Another common usage, which includes CWE-77 and its
        descendants, involves cases in which the attacker injects separators
        into the command being constructed.::"
    - point: "CWE-ID: 78Improper Neutralization of Special Elements used in an OS
        Command ('OS Command Injection')"
      priority: Essential
      details: "The product constructs all or part of an OS command using
        externally-influenced input from an upstream component, but it does not
        neutralize or incorrectly neutralizes special elements that could modify
        the intended OS command when it is sent to a downstream
        component.Guidelines:::TYPE:Terminology:NOTE:The OS command injection
        phrase carries different meanings to different people. For some people,
        it only refers to cases in which the attacker injects command separators
        into arguments for an application-controlled program that is being
        invoked. For some people, it refers to any type of attack that can allow
        the attacker to execute OS commands of their own choosing. This usage
        could include untrusted search path weaknesses (CWE-426) that cause the
        application to find and execute an attacker-controlled program. Further
        complicating the issue is the case when argument injection (CWE-88)
        allows alternate command-line switches or options to be inserted into
        the command line, such as an -exec switch whose purpose may be to
        execute the subsequent argument as a command (this -exec switch exists
        in the UNIX find command, for example). In this latter case, however,
        CWE-88 could be regarded as the primary weakness in a chain with
        CWE-78.::TYPE:Research Gap:NOTE:More investigation is needed into the
        distinction between the OS command injection variants, including the
        role with argument injection (CWE-88). Equivalent distinctions may exist
        in other injection-related problems such as SQL injection.::"
    - point: "CWE-ID: 79Improper Neutralization of Input During Web Page Generation
        ('Cross-site Scripting')"
      priority: Essential
      details: "The product does not neutralize or incorrectly neutralizes
        user-controllable input before it is placed in output that is used as a
        web page that is served to other
        users.Guidelines:::TYPE:Relationship:NOTE:There can be a close
        relationship between XSS and CSRF (CWE-352). An attacker might use CSRF
        in order to trick the victim into submitting requests to the server in
        which the requests contain an XSS payload. A well-known example of this
        was the Samy worm on MySpace [REF-956]. The worm used XSS to insert
        malicious HTML sequences into a user's profile and add the attacker as a
        MySpace friend. MySpace friends of that victim would then execute the
        payload to modify their own profiles, causing the worm to propagate
        exponentially. Since the victims did not intentionally insert the
        malicious script themselves, CSRF was a root cause.::TYPE:Applicable
        Platform:NOTE:XSS flaws are very common in web applications, since they
        require a great deal of developer discipline to avoid them.::"
    - point: "CWE-ID: 80Improper Neutralization of Script-Related HTML Tags in a Web
        Page (Basic XSS)"
      priority: Essential
      details: "The product receives input from an upstream component, but it does not
        neutralize or incorrectly neutralizes special characters such as <, >,
        and & that could be interpreted as web-scripting elements when they are
        sent to a downstream component that processes web pages.Guidelines:"
    - point: "CWE-ID: 81Improper Neutralization of Script in an Error Message Web
        Page"
      priority: Essential
      details: "The product receives input from an upstream component, but it does not
        neutralize or incorrectly neutralizes special characters that could be
        interpreted as web-scripting elements when they are sent to an error
        page.Guidelines:"
    - point: "CWE-ID: 82Improper Neutralization of Script in Attributes of IMG Tags in
        a Web Page"
      priority: Essential
      details: "The web application does not neutralize or incorrectly neutralizes
        scripting elements within attributes of HTML IMG tags, such as the src
        attribute.Guidelines:"
    - point: "CWE-ID: 83Improper Neutralization of Script in Attributes in a Web Page"
      priority: Essential
      details: "The product does not neutralize or incorrectly neutralizes javascript:
        or other URIs from dangerous attributes within tags, such as
        onmouseover, onload, onerror, or style.Guidelines:"
    - point: "CWE-ID: 84Improper Neutralization of Encoded URI Schemes in a Web Page"
      priority: Essential
      details: "The web application improperly neutralizes user-controlled input for
        executable script disguised with URI encodings.Guidelines:"
    - point: "CWE-ID: 85Doubled Character XSS Manipulations"
      priority: Essential
      details: "The web application does not filter user-controlled input for
        executable script disguised using doubling of the involved
        characters.Guidelines:"
    - point: "CWE-ID: 86Improper Neutralization of Invalid Characters in Identifiers
        in Web Pages"
      priority: Essential
      details: "The product does not neutralize or incorrectly neutralizes invalid
        characters or byte sequences in the middle of tag names, URI schemes,
        and other identifiers.Guidelines:"
    - point: "CWE-ID: 87Improper Neutralization of Alternate XSS Syntax"
      priority: Essential
      details: "The product does not neutralize or incorrectly neutralizes
        user-controlled input for alternate script syntax.Guidelines:"
    - point: "CWE-ID: 88Improper Neutralization of Argument Delimiters in a Command
        ('Argument Injection')"
      priority: Essential
      details: "The product constructs a string for a command to be executed by a
        separate component in another control sphere, but it does not properly
        delimit the intended arguments, options, or switches within that command
        string.Guidelines:::TYPE:Relationship:NOTE:At one layer of abstraction,
        this can overlap other weaknesses that have whitespace problems, e.g.
        injection of javascript into attributes of HTML tags.::"
    - point: "CWE-ID: 89Improper Neutralization of Special Elements used in an SQL
        Command ('SQL Injection')"
      priority: Essential
      details: "The product constructs all or part of an SQL command using
        externally-influenced input from an upstream component, but it does not
        neutralize or incorrectly neutralizes special elements that could modify
        the intended SQL command when it is sent to a downstream
        component.Guidelines:::TYPE:Relationship:NOTE:SQL injection can be
        resultant from special character mismanagement, MAID, or
        denylist/allowlist problems. It can be primary to authentication
        errors.::"
    - point: "CWE-ID: 90Improper Neutralization of Special Elements used in an LDAP
        Query ('LDAP Injection')"
      priority: Essential
      details: "The product constructs all or part of an LDAP query using
        externally-influenced input from an upstream component, but it does not
        neutralize or incorrectly neutralizes special elements that could modify
        the intended LDAP query when it is sent to a downstream
        component.Guidelines:::TYPE:Relationship:NOTE:Factors: resultant to
        special character mismanagement, MAID, or denylist/allowlist problems.
        Can be primary to authentication and verification errors.::"
    - point: "CWE-ID: 91XML Injection (aka Blind XPath Injection)"
      priority: Essential
      details: "The product does not properly neutralize special elements that are
        used in XML, allowing attackers to modify the syntax, content, or
        commands of the XML before it is processed by an end
        system.Guidelines:::TYPE:Maintenance:NOTE:The description for this entry
        is generally applicable to XML, but the name includes blind XPath
        injection which is more closely associated with CWE-643. Therefore this
        entry might need to be deprecated or converted to a general category -
        although injection into raw XML is not covered by CWE-643 or
        CWE-652.::TYPE:Theoretical:NOTE:In vulnerability theory terms, this is a
        representation-specific case of a Data/Directive Boundary
        Error.::TYPE:Research Gap:NOTE:Under-reported. This is likely found
        regularly by third party code auditors, but there are very few publicly
        reported examples.::"
    - point: "CWE-ID: 93Improper Neutralization of CRLF Sequences ('CRLF Injection')"
      priority: Essential
      details: "The product uses CRLF (carriage return line feeds) as a special
        element, e.g. to separate lines or records, but it does not neutralize
        or incorrectly neutralizes CRLF sequences from inputs.Guidelines:"
    - point: "CWE-ID: 94Improper Control of Generation of Code ('Code Injection')"
      priority: Essential
      details: "The product constructs all or part of a code segment using
        externally-influenced input from an upstream component, but it does not
        neutralize or incorrectly neutralizes special elements that could modify
        the syntax or behavior of the intended code segment.Guidelines:"
    - point: "CWE-ID: 95Improper Neutralization of Directives in Dynamically Evaluated
        Code ('Eval Injection')"
      priority: Essential
      details: "The product receives input from an upstream component, but it does not
        neutralize or incorrectly neutralizes code syntax before using the input
        in a dynamic evaluation call (e.g.
        eval).Guidelines:::TYPE:Other:NOTE:Factors: special character errors can
        play a role in increasing the variety of code that can be injected,
        although some vulnerabilities do not require special characters at all,
        e.g. when a single function without arguments can be referenced and a
        terminator character is not necessary.::"
    - point: "CWE-ID: 96Improper Neutralization of Directives in Statically Saved Code
        ('Static Code Injection')"
      priority: Essential
      details: "The product receives input from an upstream component, but it does not
        neutralize or incorrectly neutralizes code syntax before inserting the
        input into an executable resource, such as a library, configuration
        file, or template.Guidelines:::TYPE:Relationship:NOTE:HTML injection
        (see CWE-79: XSS) could be thought of as an example of this, but the
        code is injected and executed on the client side, not the server side.
        Server-Side Includes (SSI) are an example of direct static code
        injection.::"
    - point: "CWE-ID: 97Improper Neutralization of Server-Side Includes (SSI) Within a
        Web Page"
      priority: Essential
      details: "The product generates a web page, but does not neutralize or
        incorrectly neutralizes user-controllable input that could be
        interpreted as a server-side include (SSI)
        directive.Guidelines:::TYPE:Relationship:NOTE:This can be resultant from
        XSS/HTML injection because the same special characters can be involved.
        However, this is server-side code execution, not client-side.::"
    - point: "CWE-ID: 98Improper Control of Filename for Include/Require Statement in
        PHP Program ('PHP Remote File Inclusion')"
      priority: Essential
      details: "The PHP application receives input from an upstream component, but it
        does not restrict or incorrectly restricts the input before its usage in
        require, include, or similar
        functions.Guidelines:::TYPE:Relationship:NOTE:This is frequently a
        functional consequence of other weaknesses. It is usually multi-factor
        with other factors (e.g. MAID), although not all inclusion bugs involve
        assumed-immutable data. Direct request weaknesses frequently play a
        role. Can overlap directory traversal in local inclusion problems.::"
    - point: "CWE-ID: 99Improper Control of Resource Identifiers ('Resource
        Injection')"
      priority: Essential
      details: "The product receives input from an upstream component, but it does not
        restrict or incorrectly restricts the input before it is used as an
        identifier for a resource that may be outside the intended sphere of
        control.Guidelines:::TYPE:Relationship:NOTE:Resource injection that
        involves resources stored on the filesystem goes by the name path
        manipulation (CWE-73).::TYPE:Maintenance:NOTE:The relationship between
        CWE-99 and CWE-610 needs further investigation and clarification. They
        might be duplicates. CWE-99 Resource Injection, as originally defined in
        Seven Pernicious Kingdoms taxonomy, emphasizes the identifier used to
        access a system resource such as a file name or port number, yet it
        explicitly states that the resource injection term does not apply to
        path manipulation, which effectively identifies the path at which a
        resource can be found and could be considered to be one aspect of a
        resource identifier. Also, CWE-610 effectively covers any type of
        resource, whether that resource is at the system layer, the application
        layer, or the code layer.::"
    - point: "CWE-ID: 102Struts: Duplicate Validation Forms"
      priority: Essential
      details: "The product uses multiple validation forms with the same name, which
        might cause the Struts Validator to validate a form that the programmer
        does not expect.Guidelines:"
    - point: "CWE-ID: 103Struts: Incomplete validate() Method Definition"
      priority: Essential
      details: "The product has a validator form that either does not define a
        validate() method, or defines a validate() method but does not call
        super.validate().Guidelines:::TYPE:Relationship:NOTE:This could
        introduce other weaknesses related to missing input
        validation.::TYPE:Maintenance:NOTE:The current description implies a
        loose composite of two separate weaknesses, so this node might need to
        be split or converted into a low-level category.::"
    - point: "CWE-ID: 104Struts: Form Bean Does Not Extend Validation Class"
      priority: Essential
      details: "If a form bean does not extend an ActionForm subclass of the Validator
        framework, it can expose the application to other weaknesses related to
        insufficient input validation.Guidelines:"
    - point: "CWE-ID: 105Struts: Form Field Without Validator"
      priority: Essential
      details: "The product has a form field that is not validated by a corresponding
        validation form, which can introduce other weaknesses related to
        insufficient input validation.Guidelines:"
    - point: "CWE-ID: 106Struts: Plug-in Framework not in Use"
      priority: Essential
      details: "When an application does not use an input validation framework such as
        the Struts Validator, there is a greater risk of introducing weaknesses
        related to insufficient input validation.Guidelines:"
    - point: "CWE-ID: 107Struts: Unused Validation Form"
      priority: Essential
      details: "An unused validation form indicates that validation logic is not
        up-to-date.Guidelines:"
    - point: "CWE-ID: 108Struts: Unvalidated Action Form"
      priority: Essential
      details: "Every Action Form must have a corresponding validation form.Guidelines:"
    - point: "CWE-ID: 109Struts: Validator Turned Off"
      priority: Essential
      details: "Automatic filtering via a Struts bean has been turned off, which
        disables the Struts Validator and custom validation logic. This exposes
        the application to other weaknesses related to insufficient input
        validation.Guidelines:::TYPE:Other:NOTE:The Action Form mapping in the
        demonstrative example disables the form's validate() method. The Struts
        bean: write tag automatically encodes special HTML characters, replacing
        a < with &lt; and a > with &gt;. This action can be disabled by
        specifying filter=false as an attribute of the tag to disable specified
        JSP pages. However, being disabled makes these pages susceptible to
        cross-site scripting attacks. An attacker may be able to insert
        malicious scripts as user input to write to these JSP pages.::"
    - point: "CWE-ID: 110Struts: Validator Without Form Field"
      priority: Essential
      details: "Validation fields that do not appear in forms they are associated with
        indicate that the validation logic is out of date.Guidelines:"
    - point: "CWE-ID: 111Direct Use of Unsafe JNI"
      priority: Essential
      details: "When a Java application uses the Java Native Interface (JNI) to call
        code written in another programming language, it can expose the
        application to weaknesses in that code, even if those weaknesses cannot
        occur in Java.Guidelines:"
    - point: "CWE-ID: 112Missing XML Validation"
      priority: Essential
      details: "The product accepts XML from an untrusted source but does not validate
        the XML against the proper schema.Guidelines:"
    - point: "CWE-ID: 113Improper Neutralization of CRLF Sequences in HTTP Headers
        ('HTTP Request/Response Splitting')"
      priority: Essential
      details: "The product receives data from an HTTP agent/component (e.g., web
        server, proxy, browser, etc.), but it does not neutralize or incorrectly
        neutralizes CR and LF characters before the data is included in outgoing
        HTTP headers.Guidelines:"
    - point: "CWE-ID: 114Process Control"
      priority: Essential
      details: "Executing commands or loading libraries from an untrusted source or in
        an untrusted environment can cause an application to execute malicious
        commands (and payloads) on behalf of an
        attacker.Guidelines:::TYPE:Maintenance:NOTE:CWE-114 is a Class, but it
        is listed a child of CWE-73 in view 1000. This suggests some abstraction
        problems that should be resolved in future
        versions.::TYPE:Maintenance:NOTE:This entry seems to have close
        relationships with CWE-426/CWE-427. It seems more attack-oriented.::"
    - point: "CWE-ID: 115Misinterpretation of Input"
      priority: Essential
      details: "The product misinterprets an input, whether from an attacker or
        another product, in a security-relevant
        fashion.Guidelines:::TYPE:Research Gap:NOTE:This concept needs further
        study. It is likely a factor in several weaknesses, possibly resultant
        as well. Overlaps Multiple Interpretation Errors (MIE).::"
    - point: "CWE-ID: 116Improper Encoding or Escaping of Output"
      priority: Essential
      details: "The product prepares a structured message for communication with
        another component, but encoding or escaping of the data is either
        missing or done incorrectly. As a result, the intended structure of the
        message is not preserved.Guidelines:::TYPE:Relationship:NOTE:This
        weakness is primary to all weaknesses related to injection (CWE-74)
        since the inherent nature of injection involves the violation of
        structured messages.::TYPE:Relationship:NOTE:CWE-116 and CWE-20 have a
        close association because, depending on the nature of the structured
        message, proper input validation can indirectly prevent special
        characters from changing the meaning of a structured message. For
        example, by validating that a numeric ID field should only contain the
        0-9 characters, the programmer effectively prevents injection attacks.
        However, input validation is not always sufficient, especially when less
        stringent data types must be supported, such as free-form text. Consider
        a SQL injection scenario in which a last name is inserted into a query.
        The name O'Reilly would likely pass the validation step since it is a
        common last name in the English language. However, it cannot be directly
        inserted into the database because it contains the ' apostrophe
        character, which would need to be escaped or otherwise neutralized. In
        this case, stripping the apostrophe might reduce the risk of SQL
        injection, but it would produce incorrect behavior because the wrong
        name would be recorded.::TYPE:Terminology:NOTE:The usage of the encoding
        and escaping terms varies widely. For example, in some programming
        languages, the terms are used interchangeably, while other languages
        provide APIs that use both terms for different tasks. This overlapping
        usage extends to the Web, such as the escape JavaScript function whose
        purpose is stated to be encoding. The concepts of encoding and escaping
        predate the Web by decades. Given such a context, it is difficult for
        CWE to adopt a consistent vocabulary that will not be misinterpreted by
        some constituency.::TYPE:Theoretical:NOTE:This is a data/directive
        boundary error in which data boundaries are not sufficiently enforced
        before it is sent to a different control sphere.::TYPE:Research
        Gap:NOTE:While many published vulnerabilities are related to
        insufficient output encoding, there is such an emphasis on input
        validation as a protection mechanism that the underlying causes are
        rarely described. Within CVE, the focus is primarily on well-understood
        issues like cross-site scripting and SQL injection. It is likely that
        this weakness frequently occurs in custom protocols that support
        multiple encodings, which are not necessarily detectable with automated
        techniques.::"
    - point: "CWE-ID: 117Improper Output Neutralization for Logs"
      priority: Essential
      details: "The product does not neutralize or incorrectly neutralizes output that
        is written to logs.Guidelines:"
    - point: "CWE-ID: 118Incorrect Access of Indexable Resource ('Range Error')"
      priority: Essential
      details: "The product does not restrict or incorrectly restricts operations
        within the boundaries of a resource that is accessed using an index or
        pointer, such as memory or files.Guidelines:"
    - point: "CWE-ID: 119Improper Restriction of Operations within the Bounds of a
        Memory Buffer"
      priority: Essential
      details: "The product performs operations on a memory buffer, but it can read
        from or write to a memory location that is outside of the intended
        boundary of the buffer.Guidelines:::TYPE:Applicable Platform:NOTE:It is
        possible in any programming languages without memory management support
        to attempt an operation outside of the bounds of a memory buffer, but
        the consequences will vary widely depending on the language, platform,
        and chip architecture.::"
    - point: "CWE-ID: 120Buffer Copy without Checking Size of Input ('Classic Buffer
        Overflow')"
      priority: Essential
      details: "The product copies an input buffer to an output buffer without
        verifying that the size of the input buffer is less than the size of the
        output buffer, leading to a buffer
        overflow.Guidelines:::TYPE:Relationship:NOTE:At the code level,
        stack-based and heap-based overflows do not differ significantly, so
        there usually is not a need to distinguish them. From the attacker
        perspective, they can be quite different, since different techniques are
        required to exploit them.::TYPE:Terminology:NOTE:Many issues that are
        now called buffer overflows are substantively different than the classic
        overflow, including entirely different bug types that rely on overflow
        exploit techniques, such as integer signedness errors, integer
        overflows, and format string bugs. This imprecise terminology can make
        it difficult to determine which variant is being reported.::"
    - point: "CWE-ID: 121Stack-based Buffer Overflow"
      priority: Essential
      details: "A stack-based buffer overflow condition is a condition where the
        buffer being overwritten is allocated on the stack (i.e., is a local
        variable or, rarely, a parameter to a
        function).Guidelines:::TYPE:Other:NOTE:Stack-based buffer overflows can
        instantiate in return address overwrites, stack pointer overwrites or
        frame pointer overwrites. They can also be considered function pointer
        overwrites, array indexer overwrites or write-what-where condition,
        etc.::"
    - point: "CWE-ID: 122Heap-based Buffer Overflow"
      priority: Essential
      details: "A heap overflow condition is a buffer overflow, where the buffer that
        can be overwritten is allocated in the heap portion of memory, generally
        meaning that the buffer was allocated using a routine such as
        malloc().Guidelines:::TYPE:Relationship:NOTE:Heap-based buffer overflows
        are usually just as dangerous as stack-based buffer overflows.::"
    - point: "CWE-ID: 123Write-what-where Condition"
      priority: Essential
      details: "Any condition where the attacker has the ability to write an arbitrary
        value to an arbitrary location, often as the result of a buffer
        overflow.Guidelines:"
    - point: "CWE-ID: 124Buffer Underwrite ('Buffer Underflow')"
      priority: Essential
      details: "The product writes to a buffer using an index or pointer that
        references a memory location prior to the beginning of the
        buffer.Guidelines:::TYPE:Relationship:NOTE:This could be resultant from
        several errors, including a bad offset or an array index that decrements
        before the beginning of the buffer (see CWE-129).::"
    - point: "CWE-ID: 125Out-of-bounds Read"
      priority: Essential
      details: "The product reads data past the end, or before the beginning, of the
        intended buffer.Guidelines:"
    - point: "CWE-ID: 126Buffer Over-read"
      priority: Essential
      details: "The product reads from a buffer using buffer access mechanisms such as
        indexes or pointers that reference memory locations after the targeted
        buffer.Guidelines:::TYPE:Relationship:NOTE:These problems may be
        resultant from missing sentinel values (CWE-463) or trusting a
        user-influenced input length variable.::"
    - point: "CWE-ID: 127Buffer Under-read"
      priority: Essential
      details: "The product reads from a buffer using buffer access mechanisms such as
        indexes or pointers that reference memory locations prior to the
        targeted buffer.Guidelines:::TYPE:Research Gap:NOTE:Under-studied.::"
    - point: "CWE-ID: 128Wrap-around Error"
      priority: Essential
      details: "Wrap around errors occur whenever a value is incremented past the
        maximum value for its type and therefore wraps around to a very small,
        negative, or undefined value.Guidelines:::TYPE:Relationship:NOTE:The
        relationship between overflow and wrap-around needs to be examined more
        closely, since several entries (including CWE-190) are closely
        related.::"
    - point: "CWE-ID: 129Improper Validation of Array Index"
      priority: Essential
      details: "The product uses untrusted input when calculating or using an array
        index, but the product does not validate or incorrectly validates the
        index to ensure the index references a valid position within the
        array.Guidelines:::TYPE:Relationship:NOTE:This weakness can precede
        uncontrolled memory allocation (CWE-789) in languages that automatically
        expand an array when an index is used that is larger than the size of
        the array, such as JavaScript.::TYPE:Theoretical:NOTE:An improperly
        validated array index might lead directly to the always-incorrect
        behavior of access of array using out-of-bounds index.::"
    - point: "CWE-ID: 130Improper Handling of Length Parameter Inconsistency"
      priority: Essential
      details: "The product parses a formatted message or structure, but it does not
        handle or incorrectly handles a length field that is inconsistent with
        the actual length of the associated
        data.Guidelines:::TYPE:Relationship:NOTE:This probably overlaps other
        categories including zero-length issues.::"
    - point: "CWE-ID: 131Incorrect Calculation of Buffer Size"
      priority: Essential
      details: "The product does not correctly calculate the size to be used when
        allocating a buffer, which could lead to a buffer
        overflow.Guidelines:::TYPE:Maintenance:NOTE:This is a broad category.
        Some examples include: simple math errors, incorrectly updating parallel
        counters, not accounting for size differences when transforming one
        input to another format (e.g. URL canonicalization or other
        transformation that can generate a result that's larger than the
        original input, i.e. expansion). This level of detail is rarely
        available in public reports, so it is difficult to find good
        examples.::TYPE:Maintenance:NOTE:This weakness may be a composite or a
        chain. It also may contain layering or perspective differences. This
        issue may be associated with many different types of incorrect
        calculations (CWE-682), although the integer overflow (CWE-190) is
        probably the most prevalent. This can be primary to resource consumption
        problems (CWE-400), including uncontrolled memory allocation (CWE-789).
        However, its relationship with out-of-bounds buffer access (CWE-119)
        must also be considered.::"
    - point: "CWE-ID: 134Use of Externally-Controlled Format String"
      priority: Essential
      details: "The product uses a function that accepts a format string as an
        argument, but the format string originates from an external
        source.Guidelines:::TYPE:Applicable Platform:NOTE:This weakness is
        possible in any programming language that support format
        strings.::TYPE:Other:NOTE:While Format String vulnerabilities typically
        fall under the Buffer Overflow category, technically they are not
        overflowed buffers. The Format String vulnerability is fairly new (circa
        1999) and stems from the fact that there is no realistic way for a
        function that takes a variable number of arguments to determine just how
        many arguments were passed in. The most common functions that take a
        variable number of arguments, including C-runtime functions, are the
        printf() family of calls. The Format String problem appears in a number
        of ways. A *printf() call without a format specifier is dangerous and
        can be exploited. For example, printf(input); is exploitable, while
        printf(y, input); is not exploitable in that context. The result of the
        first call, used incorrectly, allows for an attacker to be able to peek
        at stack memory since the input string will be used as the format
        specifier. The attacker can stuff the input string with format
        specifiers and begin reading stack values, since the remaining
        parameters will be pulled from the stack. Worst case, this improper use
        may give away enough control to allow an arbitrary value (or values in
        the case of an exploit program) to be written into the memory of the
        running program. Frequently targeted entities are file names, process
        names, identifiers. Format string problems are a classic C/C++ issue
        that are now rare due to the ease of discovery. One main reason format
        string vulnerabilities can be exploited is due to the %n operator. The
        %n operator will write the number of characters, which have been printed
        by the format string therefore far, to the memory pointed to by its
        argument. Through skilled creation of a format string, a malicious user
        may use values on the stack to create a write-what-where condition. Once
        this is achieved, they can execute arbitrary code. Other operators can
        be used as well; for example, a %9999s operator could also trigger a
        buffer overflow, or when used in file-formatting functions like fprintf,
        it can generate a much larger output than intended.::TYPE:Research
        Gap:NOTE:Format string issues are under-studied for languages other than
        C. Memory or disk consumption, control flow or variable alteration, and
        data corruption may result from format string exploitation in
        applications written in other languages such as Perl, PHP, Python,
        etc.::"
    - point: "CWE-ID: 135Incorrect Calculation of Multi-Byte String Length"
      priority: Essential
      details: "The product does not correctly calculate the length of strings that
        can contain wide or multi-byte characters.Guidelines:"
    - point: "CWE-ID: 138Improper Neutralization of Special Elements"
      priority: Essential
      details: "The product receives input from an upstream component, but it does not
        neutralize or incorrectly neutralizes special elements that could be
        interpreted as control elements or syntactic markers when they are sent
        to a downstream component.Guidelines:::TYPE:Relationship:NOTE:This
        weakness can be related to interpretation conflicts or interaction
        errors in intermediaries (such as proxies or application firewalls) when
        the intermediary's model of an endpoint does not account for
        protocol-specific special elements.::TYPE:Relationship:NOTE:See this
        entry's children for different types of special elements that have been
        observed at one point or another. However, it can be difficult to find
        suitable CVE examples. In an attempt to be complete, CWE includes some
        types that do not have any associated observed example.::TYPE:Research
        Gap:NOTE:This weakness is probably under-studied for proprietary or
        custom formats. It is likely that these issues are fairly common in
        applications that use their own custom format for configuration files,
        logs, meta-data, messaging, etc. They would only be found by accident or
        with a focused effort based on an understanding of the format.::"
    - point: "CWE-ID: 140Improper Neutralization of Delimiters"
      priority: Essential
      details: "The product does not neutralize or incorrectly neutralizes
        delimiters.Guidelines:"
    - point: "CWE-ID: 141Improper Neutralization of Parameter/Argument Delimiters"
      priority: Essential
      details: "The product receives input from an upstream component, but it does not
        neutralize or incorrectly neutralizes special elements that could be
        interpreted as parameter or argument delimiters when they are sent to a
        downstream component.Guidelines:"
    - point: "CWE-ID: 142Improper Neutralization of Value Delimiters"
      priority: Essential
      details: "The product receives input from an upstream component, but it does not
        neutralize or incorrectly neutralizes special elements that could be
        interpreted as value delimiters when they are sent to a downstream
        component.Guidelines:"
    - point: "CWE-ID: 143Improper Neutralization of Record Delimiters"
      priority: Essential
      details: "The product receives input from an upstream component, but it does not
        neutralize or incorrectly neutralizes special elements that could be
        interpreted as record delimiters when they are sent to a downstream
        component.Guidelines:"
    - point: "CWE-ID: 144Improper Neutralization of Line Delimiters"
      priority: Essential
      details: "The product receives input from an upstream component, but it does not
        neutralize or incorrectly neutralizes special elements that could be
        interpreted as line delimiters when they are sent to a downstream
        component.Guidelines:::TYPE:Relationship:NOTE:Depending on the language
        and syntax being used, this could be the same as the record delimiter
        (CWE-143).::"
    - point: "CWE-ID: 145Improper Neutralization of Section Delimiters"
      priority: Essential
      details: "The product receives input from an upstream component, but it does not
        neutralize or incorrectly neutralizes special elements that could be
        interpreted as section delimiters when they are sent to a downstream
        component.Guidelines:::TYPE:Relationship:NOTE:Depending on the language
        and syntax being used, this could be the same as the record delimiter
        (CWE-143).::"
    - point: "CWE-ID: 146Improper Neutralization of Expression/Command Delimiters"
      priority: Essential
      details: "The product receives input from an upstream component, but it does not
        neutralize or incorrectly neutralizes special elements that could be
        interpreted as expression or command delimiters when they are sent to a
        downstream component.Guidelines:::TYPE:Relationship:NOTE:A shell
        metacharacter (covered in CWE-150) is one example of a potential
        delimiter that may need to be neutralized.::"
    - point: "CWE-ID: 147Improper Neutralization of Input Terminators"
      priority: Essential
      details: "The product receives input from an upstream component, but it does not
        neutralize or incorrectly neutralizes special elements that could be
        interpreted as input terminators when they are sent to a downstream
        component.Guidelines:"
    - point: "CWE-ID: 148Improper Neutralization of Input Leaders"
      priority: Essential
      details: "The product does not properly handle when a leading character or
        sequence (leader) is missing or malformed, or if multiple leaders are
        used when only one should be allowed.Guidelines:"
    - point: "CWE-ID: 149Improper Neutralization of Quoting Syntax"
      priority: Essential
      details: "Quotes injected into a product can be used to compromise a system. As
        data are parsed, an injected/absent/duplicate/malformed use of quotes
        may cause the process to take unexpected actions.Guidelines:"
    - point: "CWE-ID: 150Improper Neutralization of Escape, Meta, or Control
        Sequences"
      priority: Essential
      details: "The product receives input from an upstream component, but it does not
        neutralize or incorrectly neutralizes special elements that could be
        interpreted as escape, meta, or control character sequences when they
        are sent to a downstream component.Guidelines:"
    - point: "CWE-ID: 151Improper Neutralization of Comment Delimiters"
      priority: Essential
      details: "The product receives input from an upstream component, but it does not
        neutralize or incorrectly neutralizes special elements that could be
        interpreted as comment delimiters when they are sent to a downstream
        component.Guidelines:"
    - point: "CWE-ID: 152Improper Neutralization of Macro Symbols"
      priority: Essential
      details: "The product receives input from an upstream component, but it does not
        neutralize or incorrectly neutralizes special elements that could be
        interpreted as macro symbols when they are sent to a downstream
        component.Guidelines:::TYPE:Research Gap:NOTE:Under-studied.::"
    - point: "CWE-ID: 153Improper Neutralization of Substitution Characters"
      priority: Essential
      details: "The product receives input from an upstream component, but it does not
        neutralize or incorrectly neutralizes special elements that could be
        interpreted as substitution characters when they are sent to a
        downstream component.Guidelines:::TYPE:Research
        Gap:NOTE:Under-studied.::"
    - point: "CWE-ID: 154Improper Neutralization of Variable Name Delimiters"
      priority: Essential
      details: "The product receives input from an upstream component, but it does not
        neutralize or incorrectly neutralizes special elements that could be
        interpreted as variable name delimiters when they are sent to a
        downstream component.Guidelines:::TYPE:Research
        Gap:NOTE:Under-studied.::"
    - point: "CWE-ID: 155Improper Neutralization of Wildcards or Matching Symbols"
      priority: Essential
      details: "The product receives input from an upstream component, but it does not
        neutralize or incorrectly neutralizes special elements that could be
        interpreted as wildcards or matching symbols when they are sent to a
        downstream component.Guidelines:::TYPE:Research
        Gap:NOTE:Under-studied.::"
    - point: "CWE-ID: 156Improper Neutralization of Whitespace"
      priority: Essential
      details: "The product receives input from an upstream component, but it does not
        neutralize or incorrectly neutralizes special elements that could be
        interpreted as whitespace when they are sent to a downstream
        component.Guidelines:::TYPE:Relationship:NOTE:Can overlap other
        separator characters or delimiters.::"
    - point: "CWE-ID: 157Failure to Sanitize Paired Delimiters"
      priority: Essential
      details: "The product does not properly handle the characters that are used to
        mark the beginning and ending of a group of entities, such as
        parentheses, brackets, and braces.Guidelines:::TYPE:Research
        Gap:NOTE:Under-studied.::"
    - point: "CWE-ID: 158Improper Neutralization of Null Byte or NUL Character"
      priority: Essential
      details: "The product receives input from an upstream component, but it does not
        neutralize or incorrectly neutralizes NUL characters or null bytes when
        they are sent to a downstream
        component.Guidelines:::TYPE:Relationship:NOTE:This can be a factor in
        multiple interpretation errors, other interaction errors, filename
        equivalence, etc.::"
    - point: "CWE-ID: 159Improper Handling of Invalid Use of Special Elements"
      priority: Essential
      details: "The product does not properly filter, remove, quote, or otherwise
        manage the invalid use of special elements in user-controlled input,
        which could cause adverse effect on its behavior and
        integrity.Guidelines:::TYPE:Maintenance:NOTE:The list of children for
        this entry is far from complete. However, the types of special elements
        might be too precise for use within CWE.::TYPE:Terminology:NOTE:Precise
        terminology for the underlying weaknesses does not exist. Therefore,
        these weaknesses use the terminology associated with the
        manipulation.::TYPE:Research Gap:NOTE:Customized languages and grammars,
        even those that are specific to a particular product, are potential
        sources of weaknesses that are related to special elements. However,
        most researchers concentrate on the most commonly used representations
        for data transmission, such as HTML and SQL. Any representation that is
        commonly used is likely to be a rich source of weaknesses; researchers
        are encouraged to investigate previously unexplored representations.::"
    - point: "CWE-ID: 160Improper Neutralization of Leading Special Elements"
      priority: Essential
      details: "The product receives input from an upstream component, but it does not
        neutralize or incorrectly neutralizes leading special elements that
        could be interpreted in unexpected ways when they are sent to a
        downstream component.Guidelines:"
    - point: "CWE-ID: 161Improper Neutralization of Multiple Leading Special Elements"
      priority: Essential
      details: "The product receives input from an upstream component, but it does not
        neutralize or incorrectly neutralizes multiple leading special elements
        that could be interpreted in unexpected ways when they are sent to a
        downstream component.Guidelines:"
    - point: "CWE-ID: 162Improper Neutralization of Trailing Special Elements"
      priority: Essential
      details: "The product receives input from an upstream component, but it does not
        neutralize or incorrectly neutralizes trailing special elements that
        could be interpreted in unexpected ways when they are sent to a
        downstream component.Guidelines:"
    - point: "CWE-ID: 163Improper Neutralization of Multiple Trailing Special
        Elements"
      priority: Essential
      details: "The product receives input from an upstream component, but it does not
        neutralize or incorrectly neutralizes multiple trailing special elements
        that could be interpreted in unexpected ways when they are sent to a
        downstream component.Guidelines:"
    - point: "CWE-ID: 164Improper Neutralization of Internal Special Elements"
      priority: Essential
      details: "The product receives input from an upstream component, but it does not
        neutralize or incorrectly neutralizes internal special elements that
        could be interpreted in unexpected ways when they are sent to a
        downstream component.Guidelines:"
    - point: "CWE-ID: 165Improper Neutralization of Multiple Internal Special
        Elements"
      priority: Essential
      details: "The product receives input from an upstream component, but it does not
        neutralize or incorrectly neutralizes multiple internal special elements
        that could be interpreted in unexpected ways when they are sent to a
        downstream component.Guidelines:"
    - point: "CWE-ID: 166Improper Handling of Missing Special Element"
      priority: Essential
      details: "The product receives input from an upstream component, but it does not
        handle or incorrectly handles when an expected special element is
        missing.Guidelines:"
    - point: "CWE-ID: 167Improper Handling of Additional Special Element"
      priority: Essential
      details: "The product receives input from an upstream component, but it does not
        handle or incorrectly handles when an additional unexpected special
        element is provided.Guidelines:"
    - point: "CWE-ID: 168Improper Handling of Inconsistent Special Elements"
      priority: Essential
      details: "The product does not properly handle input in which an inconsistency
        exists between two or more special characters or reserved
        words.Guidelines:"
    - point: "CWE-ID: 170Improper Null Termination"
      priority: Essential
      details: "The product does not terminate or incorrectly terminates a string or
        array with a null character or equivalent
        terminator.Guidelines:::TYPE:Relationship:NOTE:Factors: this is usually
        resultant from other weaknesses such as off-by-one errors, but it can be
        primary to boundary condition violations such as buffer overflows. In
        buffer overflows, it can act as an expander for assumed-immutable
        data.::TYPE:Relationship:NOTE:Overlaps missing input
        terminator.::TYPE:Applicable Platform:NOTE:Conceptually, this does not
        just apply to the C language; any language or representation that
        involves a terminator could have this type of
        problem.::TYPE:Maintenance:NOTE:As currently described, this entry is
        more like a category than a weakness.::"
    - point: "CWE-ID: 172Encoding Error"
      priority: Essential
      details: "The product does not properly encode or decode the data, resulting in
        unexpected values.Guidelines:::TYPE:Relationship:NOTE:Partially overlaps
        path traversal and equivalence weaknesses.::TYPE:Maintenance:NOTE:This
        is more like a category than a weakness.::TYPE:Maintenance:NOTE:Many
        other types of encodings should be listed in this category.::"
    - point: "CWE-ID: 173Improper Handling of Alternate Encoding"
      priority: Essential
      details: "The product does not properly handle when an input uses an alternate
        encoding that is valid for the control sphere to which the input is
        being sent.Guidelines:"
    - point: "CWE-ID: 174Double Decoding of the Same Data"
      priority: Essential
      details: "The product decodes the same input twice, which can limit the
        effectiveness of any protection mechanism that occurs in between the
        decoding operations.Guidelines:::TYPE:Research Gap:NOTE:Probably
        under-studied.::"
    - point: "CWE-ID: 175Improper Handling of Mixed Encoding"
      priority: Essential
      details: "The product does not properly handle when the same input uses several
        different (mixed) encodings.Guidelines:"
    - point: "CWE-ID: 176Improper Handling of Unicode Encoding"
      priority: Essential
      details: "The product does not properly handle when an input contains Unicode
        encoding.Guidelines:"
    - point: "CWE-ID: 177Improper Handling of URL Encoding (Hex Encoding)"
      priority: Essential
      details: "The product does not properly handle when all or part of an input has
        been URL encoded.Guidelines:"
    - point: "CWE-ID: 178Improper Handling of Case Sensitivity"
      priority: Essential
      details: "The product does not properly account for differences in case
        sensitivity when accessing or determining the properties of a resource,
        leading to inconsistent results.Guidelines:::TYPE:Research
        Gap:NOTE:These are probably under-studied in Windows and Mac
        environments, where file names are case-insensitive and thus are subject
        to equivalence manipulations involving case.::"
    - point: "CWE-ID: 179Incorrect Behavior Order: Early Validation"
      priority: Essential
      details: "The product validates input before applying protection mechanisms that
        modify the input, which could allow an attacker to bypass the validation
        via dangerous inputs that only arise after the
        modification.Guidelines:::TYPE:Research Gap:NOTE:These errors are mostly
        reported in path traversal vulnerabilities, but the concept applies
        whenever validation occurs.::"
    - point: "CWE-ID: 180Incorrect Behavior Order: Validate Before Canonicalize"
      priority: Essential
      details: "The product validates input before it is canonicalized, which prevents
        the product from detecting data that becomes invalid after the
        canonicalization step.Guidelines:::TYPE:Relationship:NOTE:This overlaps
        other categories.::"
    - point: "CWE-ID: 181Incorrect Behavior Order: Validate Before Filter"
      priority: Essential
      details: "The product validates data before it has been filtered, which prevents
        the product from detecting data that becomes invalid after the filtering
        step.Guidelines:::TYPE:Research Gap:NOTE:This category is probably
        under-studied.::"
    - point: "CWE-ID: 182Collapse of Data into Unsafe Value"
      priority: Essential
      details: "The product filters data in a way that causes it to be reduced or
        collapsed into an unsafe value that violates an expected security
        property.Guidelines:::TYPE:Relationship:NOTE:Overlaps regular
        expressions, although an implementation might not necessarily use
        regexp's.::"
    - point: "CWE-ID: 183Permissive List of Allowed Inputs"
      priority: Essential
      details: "The product implements a protection mechanism that relies on a list of
        inputs (or properties of inputs) that are explicitly allowed by policy
        because the inputs are assumed to be safe, but the list is too
        permissive - that is, it allows an input that is unsafe, leading to
        resultant weaknesses.Guidelines:"
    - point: "CWE-ID: 184Incomplete List of Disallowed Inputs"
      priority: Essential
      details: "The product implements a protection mechanism that relies on a list of
        inputs (or properties of inputs) that are not allowed by policy or
        otherwise require other action to neutralize before additional
        processing takes place, but the list is incomplete, leading to resultant
        weaknesses.Guidelines:::TYPE:Relationship:NOTE:Multiple interpretation
        errors can indirectly introduce inputs that should be disallowed. For
        example, a list of dangerous shell metacharacters might not include a
        metacharacter that only has meaning in one particular shell, not all of
        them; or a check for XSS manipulations might ignore an unusual construct
        that is supported by one web browser, but not others.::"
    - point: "CWE-ID: 185Incorrect Regular Expression"
      priority: Essential
      details: "The product specifies a regular expression in a way that causes data
        to be improperly matched or
        compared.Guidelines:::TYPE:Relationship:NOTE:While there is some overlap
        with allowlist/denylist problems, this entry is intended to deal with
        incorrectly written regular expressions, regardless of their intended
        use. Not every regular expression is intended for use as an allowlist or
        denylist. In addition, allowlists and denylists can be implemented using
        other mechanisms besides regular expressions.::TYPE:Research
        Gap:NOTE:Regexp errors are likely a primary factor in many MFVs,
        especially those that require multiple manipulations to exploit.
        However, they are rarely diagnosed at this level of detail.::"
    - point: "CWE-ID: 186Overly Restrictive Regular Expression"
      priority: Essential
      details: "A regular expression is overly restrictive, which prevents dangerous
        values from being detected.Guidelines:::TYPE:Relationship:NOTE:Can
        overlap allowlist/denylist errors (CWE-183/CWE-184)::"
    - point: "CWE-ID: 187Partial String Comparison"
      priority: Essential
      details: "The product performs a comparison that only examines a portion of a
        factor before determining whether there is a match, such as a substring,
        leading to resultant weaknesses.Guidelines:::TYPE:Relationship:NOTE:This
        is conceptually similar to other weaknesses, such as insufficient
        verification and regular expression errors. It is primary to some
        weaknesses.::"
    - point: "CWE-ID: 188Reliance on Data/Memory Layout"
      priority: Essential
      details: "The product makes invalid assumptions about how protocol data or
        memory is organized at a lower level, resulting in unintended program
        behavior.Guidelines:"
    - point: "CWE-ID: 190Integer Overflow or Wraparound"
      priority: Essential
      details: "The product performs a calculation that can produce an integer
        overflow or wraparound, when the logic assumes that the resulting value
        will always be larger than the original value. This can introduce other
        weaknesses when the calculation is used for resource management or
        execution control.Guidelines:::TYPE:Relationship:NOTE:Integer overflows
        can be primary to buffer overflows.::TYPE:Terminology:NOTE:Integer
        overflow is sometimes used to cover several types of errors, including
        signedness errors, or buffer overflows that involve manipulation of
        integer data types instead of characters. Part of the confusion results
        from the fact that 0xffffffff is -1 in a signed context. Other confusion
        also arises because of the role that integer overflows have in
        chains.::"
    - point: "CWE-ID: 191Integer Underflow (Wrap or Wraparound)"
      priority: Essential
      details: "The product subtracts one value from another, such that the result is
        less than the minimum allowable integer value, which produces a value
        that is not equal to the correct result.Guidelines:"
    - point: "CWE-ID: 192Integer Coercion Error"
      priority: Essential
      details: "Integer coercion refers to a set of flaws pertaining to the type
        casting, extension, or truncation of primitive data
        types.Guidelines:::TYPE:Maintenance:NOTE:Within C, it might be that
        coercion is semantically different than casting, possibly depending on
        whether the programmer directly specifies the conversion, or if the
        compiler does it implicitly. This has implications for the presentation
        of this entry and others, such as CWE-681, and whether there is enough
        of a difference for these entries to be split.::"
    - point: "CWE-ID: 193Off-by-one Error"
      priority: Essential
      details: "A product calculates or uses an incorrect maximum or minimum value
        that is 1 more, or 1 less, than the correct
        value.Guidelines:::TYPE:Relationship:NOTE:This is not always a buffer
        overflow. For example, an off-by-one error could be a factor in a
        partial comparison, a read from the wrong memory location, an incorrect
        conditional, etc.::"
    - point: "CWE-ID: 194Unexpected Sign Extension"
      priority: Essential
      details: "The product performs an operation on a number that causes it to be
        sign extended when it is transformed into a larger data type. When the
        original number is negative, this can produce unexpected values that
        lead to resultant weaknesses.Guidelines:::TYPE:Relationship:NOTE:Sign
        extension errors can lead to buffer overflows and other memory-based
        problems. They are also likely to be factors in other weaknesses that
        are not based on memory operations, but rely on numeric
        calculation.::TYPE:Maintenance:NOTE:This entry is closely associated
        with signed-to-unsigned conversion errors (CWE-195) and other numeric
        errors. These relationships need to be more closely examined within
        CWE.::"
    - point: "CWE-ID: 195Signed to Unsigned Conversion Error"
      priority: Essential
      details: "The product uses a signed primitive and performs a cast to an unsigned
        primitive, which can produce an unexpected value if the value of the
        signed primitive can not be represented using an unsigned
        primitive.Guidelines:"
    - point: "CWE-ID: 196Unsigned to Signed Conversion Error"
      priority: Essential
      details: "The product uses an unsigned primitive and performs a cast to a signed
        primitive, which can produce an unexpected value if the value of the
        unsigned primitive can not be represented using a signed
        primitive.Guidelines:"
    - point: "CWE-ID: 197Numeric Truncation Error"
      priority: Essential
      details: "Truncation errors occur when a primitive is cast to a primitive of a
        smaller size and data is lost in the
        conversion.Guidelines:::TYPE:Research Gap:NOTE:This weakness has
        traditionally been under-studied and under-reported, although
        vulnerabilities in popular software have been published in 2008 and
        2009.::"
    - point: "CWE-ID: 198Use of Incorrect Byte Ordering"
      priority: Essential
      details: "The product receives input from an upstream component, but it does not
        account for byte ordering (e.g. big-endian and little-endian) when
        processing the input, causing an incorrect number or value to be
        used.Guidelines:::TYPE:Research Gap:NOTE:Under-reported.::"
    - point: "CWE-ID: 200Exposure of Sensitive Information to an Unauthorized Actor"
      priority: Essential
      details: "The product exposes sensitive information to an actor that is not
        explicitly authorized to have access to that
        information.Guidelines:::TYPE:Maintenance:NOTE:As a result of mapping
        analysis in the 2020 Top 25 and more recent versions, this weakness is
        under review, since it is frequently misused in mapping to cover many
        problems that lead to loss of confidentiality. See Mapping Notes,
        Extended Description, and Alternate Terms.::"
    - point: "CWE-ID: 201Insertion of Sensitive Information Into Sent Data"
      priority: Essential
      details: "The code transmits data to another actor, but a portion of the data
        includes sensitive information that should not be accessible to that
        actor.Guidelines:"
    - point: "CWE-ID: 202Exposure of Sensitive Information Through Data Queries"
      priority: Essential
      details: "When trying to keep information confidential, an attacker can often
        infer some of the information by using
        statistics.Guidelines:::TYPE:Maintenance:NOTE:The relationship between
        CWE-202 and CWE-612 needs to be investigated more closely, as they may
        be different descriptions of the same kind of problem. CWE-202 is also
        being considered for deprecation, as it is not clearly described and may
        have been misunderstood by CWE users. It could be argued that this issue
        is better covered by CAPEC; an attacker can utilize their data-query
        privileges to perform this kind of operation, and if the attacker should
        not be allowed to perform the operation - or if the sensitive data
        should not have been made accessible at all - then that is more
        appropriately classified as a separate CWE related to authorization (see
        the parent, CWE-1230).::"
    - point: "CWE-ID: 203Observable Discrepancy"
      priority: Essential
      details: "The product behaves differently or sends different responses under
        different circumstances in a way that is observable to an unauthorized
        actor, which exposes security-relevant information about the state of
        the product, such as whether a particular operation was successful or
        not.Guidelines:"
    - point: "CWE-ID: 204Observable Response Discrepancy"
      priority: Essential
      details: "The product provides different responses to incoming requests in a way
        that reveals internal state information to an unauthorized actor outside
        of the intended control sphere.Guidelines:::TYPE:Relationship:NOTE:can
        overlap errors related to escalated privileges::"
    - point: "CWE-ID: 205Observable Behavioral Discrepancy"
      priority: Essential
      details: "The product's behaviors indicate important differences that may be
        observed by unauthorized actors in a way that reveals (1) its internal
        state or decision process, or (2) differences from other products with
        equivalent functionality.Guidelines:"
    - point: "CWE-ID: 206Observable Internal Behavioral Discrepancy"
      priority: Essential
      details: "The product performs multiple behaviors that are combined to produce a
        single result, but the individual behaviors are observable separately in
        a way that allows attackers to reveal internal state or internal
        decision points.Guidelines:"
    - point: "CWE-ID: 207Observable Behavioral Discrepancy With Equivalent Products"
      priority: Essential
      details: "The product operates in an environment in which its existence or
        specific identity should not be known, but it behaves differently than
        other products with equivalent functionality, in a way that is
        observable to an attacker.Guidelines:"
    - point: "CWE-ID: 208Observable Timing Discrepancy"
      priority: Essential
      details: "Two separate operations in a product require different amounts of time
        to complete, in a way that is observable to an actor and reveals
        security-relevant information about the state of the product, such as
        whether a particular operation was successful or
        not.Guidelines:::TYPE:Relationship:NOTE:Often primary in cryptographic
        applications and algorithms.::"
    - point: "CWE-ID: 209Generation of Error Message Containing Sensitive Information"
      priority: Essential
      details: "The product generates an error message that includes sensitive
        information about its environment, users, or associated
        data.Guidelines:"
    - point: "CWE-ID: 210Self-generated Error Message Containing Sensitive
        Information"
      priority: Essential
      details: "The product identifies an error condition and creates its own
        diagnostic or error messages that contain sensitive
        information.Guidelines:"
    - point: "CWE-ID: 211Externally-Generated Error Message Containing Sensitive
        Information"
      priority: Essential
      details: "The product performs an operation that triggers an external diagnostic
        or error message that is not directly generated or controlled by the
        product, such as an error generated by the programming language
        interpreter that a software application uses. The error can contain
        sensitive system information.Guidelines:::TYPE:Relationship:NOTE:This is
        inherently a resultant vulnerability from a weakness within the product
        or an interaction error.::"
    - point: "CWE-ID: 212Improper Removal of Sensitive Information Before Storage or
        Transfer"
      priority: Essential
      details: "The product stores, transfers, or shares a resource that contains
        sensitive information, but it does not properly remove that information
        before the product makes the resource available to unauthorized
        actors.Guidelines:::TYPE:Relationship:NOTE:This entry is intended to be
        different from resultant information leaks, including those that occur
        from improper buffer initialization and reuse, improper encryption,
        interaction errors, and multiple interpretation errors. This entry could
        be regarded as a privacy leak, depending on the type of information that
        is leaked.::TYPE:Relationship:NOTE:There is a close association between
        CWE-226 and CWE-212. The difference is partially that of perspective.
        CWE-226 is geared towards the final stage of the resource lifecycle, in
        which the resource is deleted, eliminated, expired, or otherwise
        released for reuse. Technically, this involves a transfer to a different
        control sphere, in which the original contents of the resource are no
        longer relevant. CWE-212, however, is intended for sensitive data in
        resources that are intentionally shared with others, so they are still
        active. This distinction is useful from the perspective of the CWE
        research view (CWE-1000).::TYPE:Terminology:NOTE:The terms cleansing and
        scrubbing have multiple uses within computing. In information security,
        these are used for the removal of sensitive data, but they are also used
        for the modification of incoming/outgoing data so that it conforms to
        specifications.::"
    - point: "CWE-ID: 213Exposure of Sensitive Information Due to Incompatible
        Policies"
      priority: Essential
      details: "The product's intended functionality exposes information to certain
        actors in accordance with the developer's security policy, but this
        information is regarded as sensitive according to the intended security
        policies of other stakeholders such as the product's administrator,
        users, or others whose information is being
        processed.Guidelines:::TYPE:Maintenance:NOTE:This entry is being
        considered for deprecation. It overlaps many other entries related to
        information exposures. It might not be essential to preserve this entry,
        since other key stakeholder policies are covered elsewhere, e.g.
        personal privacy leaks (CWE-359) and system-level exposures that are
        important to system administrators (CWE-497).::TYPE:Theoretical:NOTE:In
        vulnerability theory terms, this covers cases in which the developer's
        Intended Policy allows the information to be made available, but the
        information might be in violation of a Universal Policy in which the
        product's administrator should have control over which information is
        considered sensitive and therefore should not be exposed.::"
    - point: "CWE-ID: 214Invocation of Process Using Visible Sensitive Information"
      priority: Essential
      details: "A process is invoked with sensitive command-line arguments,
        environment variables, or other elements that can be seen by other
        processes on the operating system.Guidelines:::TYPE:Research
        Gap:NOTE:Under-studied, especially environment variables.::"
    - point: "CWE-ID: 215Insertion of Sensitive Information Into Debugging Code"
      priority: Essential
      details: "The product inserts sensitive information into debugging code, which
        could expose this information if the debugging code is not disabled in
        production.Guidelines:::TYPE:Relationship:NOTE:This overlaps other
        categories.::"
    - point: "CWE-ID: 219Storage of File with Sensitive Data Under Web Root"
      priority: Essential
      details: "The product stores sensitive data under the web document root with
        insufficient access control, which might make it accessible to untrusted
        parties.Guidelines:"
    - point: "CWE-ID: 220Storage of File With Sensitive Data Under FTP Root"
      priority: Essential
      details: "The product stores sensitive data under the FTP server root with
        insufficient access control, which might make it accessible to untrusted
        parties.Guidelines:"
    - point: "CWE-ID: 221Information Loss or Omission"
      priority: Essential
      details: "The product does not record, or improperly records, security-relevant
        information that leads to an incorrect decision or hampers later
        analysis.Guidelines:"
    - point: "CWE-ID: 222Truncation of Security-relevant Information"
      priority: Essential
      details: "The product truncates the display, recording, or processing of
        security-relevant information in a way that can obscure the source or
        nature of an attack.Guidelines:"
    - point: "CWE-ID: 223Omission of Security-relevant Information"
      priority: Essential
      details: "The product does not record or display information that would be
        important for identifying the source or nature of an attack, or
        determining if an action is safe.Guidelines:"
    - point: "CWE-ID: 224Obscured Security-relevant Information by Alternate Name"
      priority: Essential
      details: "The product records security-relevant information according to an
        alternate name of the affected entity, instead of the canonical
        name.Guidelines:"
    - point: "CWE-ID: 226Sensitive Information in Resource Not Removed Before Reuse"
      priority: Essential
      details: "The product releases a resource such as memory or a file so that it
        can be made available for reuse, but it does not clear or zeroize the
        information contained in the resource before the product performs a
        critical state transition or makes the resource available for reuse by
        other entities.Guidelines:::TYPE:Relationship:NOTE:There is a close
        association between CWE-226 and CWE-212. The difference is partially
        that of perspective. CWE-226 is geared towards the final stage of the
        resource lifecycle, in which the resource is deleted, eliminated,
        expired, or otherwise released for reuse. Technically, this involves a
        transfer to a different control sphere, in which the original contents
        of the resource are no longer relevant. CWE-212, however, is intended
        for sensitive data in resources that are intentionally shared with
        others, so they are still active. This distinction is useful from the
        perspective of the CWE research view
        (CWE-1000).::TYPE:Maintenance:NOTE:This entry needs modification to
        clarify the differences with CWE-212. The description also combines two
        problems that are distinct from the CWE research perspective: the
        inadvertent transfer of information to another sphere, and improper
        initialization/shutdown. Some of the associated taxonomy mappings
        reflect these different uses.::TYPE:Research Gap:NOTE:This is frequently
        found for network packets, but it can also exist in local memory
        allocation, files, etc.::"
    - point: "CWE-ID: 228Improper Handling of Syntactically Invalid Structure"
      priority: Essential
      details: "The product does not handle or incorrectly handles input that is not
        syntactically well-formed with respect to the associated
        specification.Guidelines:::TYPE:Maintenance:NOTE:This entry needs more
        investigation. Public vulnerability research generally focuses on the
        manipulations that generate invalid structure, instead of the weaknesses
        that are exploited by those manipulations. For example, a common attack
        involves making a request that omits a required field, which can trigger
        a crash in some cases. The crash could be due to a named chain such as
        CWE-690 (Unchecked Return Value to NULL Pointer Dereference), but public
        reports rarely cover this aspect of a
        vulnerability.::TYPE:Theoretical:NOTE:The validity of input could be
        roughly classified along syntactic, semantic, and lexical dimensions. If
        the specification requires that an input value should be delimited with
        the [ and ] square brackets, then any input that does not follow this
        specification would be syntactically invalid. If the input between the
        brackets is expected to be a number, but the letters aaa are provided,
        then the input is syntactically invalid. If the input is a number and
        enclosed in brackets, but the number is outside of the allowable range,
        then it is semantically invalid. The inter-relationships between these
        properties - and their associated weaknesses- need further
        exploration.::"
    - point: "CWE-ID: 229Improper Handling of Values"
      priority: Essential
      details: "The product does not properly handle when the expected number of
        values for parameters, fields, or arguments is not provided in input, or
        if those values are undefined.Guidelines:"
    - point: "CWE-ID: 230Improper Handling of Missing Values"
      priority: Essential
      details: "The product does not handle or incorrectly handles when a parameter,
        field, or argument name is specified, but the associated value is
        missing, i.e. it is empty, blank, or null.Guidelines:::TYPE:Research
        Gap:NOTE:Some crash by port scan bugs are probably due to this, but lack
        of diagnosis makes it difficult to be certain.::"
    - point: "CWE-ID: 231Improper Handling of Extra Values"
      priority: Essential
      details: "The product does not handle or incorrectly handles when more values
        are provided than expected.Guidelines:::TYPE:Relationship:NOTE:This can
        overlap buffer overflows.::"
    - point: "CWE-ID: 232Improper Handling of Undefined Values"
      priority: Essential
      details: "The product does not handle or incorrectly handles when a value is not
        defined or supported for the associated parameter, field, or argument
        name.Guidelines:"
    - point: "CWE-ID: 233Improper Handling of Parameters"
      priority: Essential
      details: "The product does not properly handle when the expected number of
        parameters, fields, or arguments is not provided in input, or if those
        parameters are undefined.Guidelines:"
    - point: "CWE-ID: 234Failure to Handle Missing Parameter"
      priority: Essential
      details: "If too few arguments are sent to a function, the function will still
        pop the expected number of arguments from the stack. Potentially, a
        variable number of arguments could be exhausted in a function as
        well.Guidelines:::TYPE:Maintenance:NOTE:This entry will be deprecated in
        a future version of CWE. The term missing parameter was used in both
        PLOVER and CLASP, with completely different meanings. However, data from
        both taxonomies was merged into this entry. In PLOVER, it was meant to
        cover malformed inputs that do not contain required parameters, such as
        a missing parameter in a CGI request. This entry's observed examples and
        classification came from PLOVER. However, the description, demonstrative
        example, and other information are derived from CLASP. They are related
        to an incorrect number of function arguments, which is already covered
        by CWE-685.::"
    - point: "CWE-ID: 235Improper Handling of Extra Parameters"
      priority: Essential
      details: "The product does not handle or incorrectly handles when the number of
        parameters, fields, or arguments with the same name exceeds the expected
        amount.Guidelines:::TYPE:Relationship:NOTE:This type of problem has a
        big role in multiple interpretation vulnerabilities and various HTTP
        attacks.::"
    - point: "CWE-ID: 236Improper Handling of Undefined Parameters"
      priority: Essential
      details: "The product does not handle or incorrectly handles when a particular
        parameter, field, or argument name is not defined or supported by the
        product.Guidelines:"
    - point: "CWE-ID: 237Improper Handling of Structural Elements"
      priority: Essential
      details: "The product does not handle or incorrectly handles inputs that are
        related to complex structures.Guidelines:"
    - point: "CWE-ID: 238Improper Handling of Incomplete Structural Elements"
      priority: Essential
      details: "The product does not handle or incorrectly handles when a particular
        structural element is not completely
        specified.Guidelines:::TYPE:Relationship:NOTE:Can be primary to other
        problems.::"
    - point: "CWE-ID: 239Failure to Handle Incomplete Element"
      priority: Essential
      details: "The product does not properly handle when a particular element is not
        completely specified.Guidelines:"
    - point: "CWE-ID: 240Improper Handling of Inconsistent Structural Elements"
      priority: Essential
      details: "The product does not handle or incorrectly handles when two or more
        structural elements should be consistent, but are not.Guidelines:"
    - point: "CWE-ID: 241Improper Handling of Unexpected Data Type"
      priority: Essential
      details: "The product does not handle or incorrectly handles when a particular
        element is not the expected type, e.g. it expects a digit (0-9) but is
        provided with a letter (A-Z).Guidelines:::TYPE:Research
        Gap:NOTE:Probably under-studied.::"
    - point: "CWE-ID: 242Use of Inherently Dangerous Function"
      priority: Essential
      details: "The product calls a function that can never be guaranteed to work
        safely.Guidelines:"
    - point: "CWE-ID: 243Creation of chroot Jail Without Changing Working Directory"
      priority: Essential
      details: "The product uses the chroot() system call to create a jail, but does
        not change the working directory afterward. This does not prevent access
        to files outside of the jail.Guidelines:"
    - point: "CWE-ID: 244Improper Clearing of Heap Memory Before Release ('Heap
        Inspection')"
      priority: Essential
      details: "Using realloc() to resize buffers that store sensitive information can
        leave the sensitive information exposed to attack, because it is not
        removed from memory.Guidelines:"
    - point: "CWE-ID: 245J2EE Bad Practices: Direct Management of Connections"
      priority: Essential
      details: "The J2EE application directly manages connections, instead of using
        the container's connection management facilities.Guidelines:"
    - point: "CWE-ID: 246J2EE Bad Practices: Direct Use of Sockets"
      priority: Essential
      details: "The J2EE application directly uses sockets instead of using framework
        method calls.Guidelines:"
    - point: "CWE-ID: 248Uncaught Exception"
      priority: Essential
      details: "An exception is thrown from a function, but it is not
        caught.Guidelines:"
    - point: "CWE-ID: 250Execution with Unnecessary Privileges"
      priority: Essential
      details: "The product performs an operation at a privilege level that is higher
        than the minimum level required, which creates new weaknesses or
        amplifies the consequences of other
        weaknesses.Guidelines:::TYPE:Relationship:NOTE:There is a close
        association with CWE-653 (Insufficient Separation of Privileges).
        CWE-653 is about providing separate components for each privilege;
        CWE-250 is about ensuring that each component has the least amount of
        privileges possible.::TYPE:Maintenance:NOTE:CWE-271, CWE-272, and
        CWE-250 are all closely related and possibly overlapping. CWE-271 is
        probably better suited as a category. Both CWE-272 and CWE-250 are in
        active use by the community. The least privilege phrase has multiple
        interpretations.::TYPE:Maintenance:NOTE:The Taxonomy_Mappings to ISA/IEC
        62443 were added in CWE 4.10, but they are still under review and might
        change in future CWE versions. These draft mappings were performed by
        members of the Mapping CWE to 62443 subgroup of the CWE-CAPEC ICS/OT
        Special Interest Group (SIG), and their work is incomplete as of CWE
        4.10. The mappings are included to facilitate discussion and review by
        the broader ICS/OT community, and they are likely to change in future
        CWE versions.::"
    - point: "CWE-ID: 252Unchecked Return Value"
      priority: Essential
      details: "The product does not check the return value from a method or function,
        which can prevent it from detecting unexpected states and
        conditions.Guidelines:"
    - point: "CWE-ID: 253Incorrect Check of Function Return Value"
      priority: Essential
      details: "The product incorrectly checks a return value from a function, which
        prevents it from detecting errors or exceptional conditions.Guidelines:"
    - point: "CWE-ID: 256Plaintext Storage of a Password"
      priority: Essential
      details: "Storing a password in plaintext may result in a system
        compromise.Guidelines:"
    - point: "CWE-ID: 257Storing Passwords in a Recoverable Format"
      priority: Essential
      details: "The storage of passwords in a recoverable format makes them subject to
        password reuse attacks by malicious users. In fact, it should be noted
        that recoverable encrypted passwords provide no significant benefit over
        plaintext passwords since they are subject not only to reuse by
        malicious attackers but also by malicious insiders. If a system
        administrator can recover a password directly, or use a brute force
        search on the available information, the administrator can use the
        password on other accounts.Guidelines:::TYPE:Maintenance:NOTE:The
        meaning of this entry needs to be investigated more closely, especially
        with respect to what is meant by recoverable.::"
    - point: "CWE-ID: 258Empty Password in Configuration File"
      priority: Essential
      details: "Using an empty string as a password is insecure.Guidelines:"
    - point: "CWE-ID: 259Use of Hard-coded Password"
      priority: Essential
      details: "The product contains a hard-coded password, which it uses for its own
        inbound authentication or for outbound communication to external
        components.Guidelines:::TYPE:Maintenance:NOTE:This entry could be split
        into multiple variants: an inbound variant (as seen in the second
        demonstrative example) and an outbound variant (as seen in the first
        demonstrative example). These variants are likely to have different
        consequences, detectability, etc. More importantly, from a vulnerability
        theory perspective, they could be characterized as different
        behaviors.::"
    - point: "CWE-ID: 260Password in Configuration File"
      priority: Essential
      details: "The product stores a password in a configuration file that might be
        accessible to actors who do not know the password.Guidelines:"
    - point: "CWE-ID: 261Weak Encoding for Password"
      priority: Essential
      details: "Obscuring a password with a trivial encoding does not protect the
        password.Guidelines:::TYPE:Other:NOTE:The crypt family of functions uses
        weak cryptographic algorithms and should be avoided. It may be present
        in some projects for compatibility.::"
    - point: "CWE-ID: 262Not Using Password Aging"
      priority: Essential
      details: "The product does not have a mechanism in place for managing password
        aging.Guidelines:"
    - point: "CWE-ID: 263Password Aging with Long Expiration"
      priority: Essential
      details: "The product supports password aging, but the expiration period is too
        long.Guidelines:"
    - point: "CWE-ID: 266Incorrect Privilege Assignment"
      priority: Essential
      details: "A product incorrectly assigns a privilege to a particular actor,
        creating an unintended sphere of control for that actor.Guidelines:"
    - point: "CWE-ID: 267Privilege Defined With Unsafe Actions"
      priority: Essential
      details: "A particular privilege, role, capability, or right can be used to
        perform unsafe actions that were not intended, even when it is assigned
        to the correct entity.Guidelines:::TYPE:Maintenance:NOTE:Note: there are
        2 separate sub-categories here: - privilege incorrectly allows entities
        to perform certain actions - object is incorrectly accessible to
        entities with a given privilege::"
    - point: "CWE-ID: 268Privilege Chaining"
      priority: Essential
      details: "Two distinct privileges, roles, capabilities, or rights can be
        combined in a way that allows an entity to perform unsafe actions that
        would not be allowed without that
        combination.Guidelines:::TYPE:Relationship:NOTE:There is some conceptual
        overlap with Unsafe Privilege.::"
    - point: "CWE-ID: 269Improper Privilege Management"
      priority: Essential
      details: "The product does not properly assign, modify, track, or check
        privileges for an actor, creating an unintended sphere of control for
        that actor.Guidelines:::TYPE:Maintenance:NOTE:The relationships between
        privileges, permissions, and actors (e.g. users and groups) need further
        refinement within the Research view. One complication is that these
        concepts apply to two different pillars, related to control of resources
        (CWE-664) and protection mechanism failures (CWE-693).::"
    - point: "CWE-ID: 270Privilege Context Switching Error"
      priority: Essential
      details: "The product does not properly manage privileges while it is switching
        between different contexts that have different privileges or spheres of
        control.Guidelines:::TYPE:Research Gap:NOTE:This concept needs more
        study.::"
    - point: "CWE-ID: 271Privilege Dropping / Lowering Errors"
      priority: Essential
      details: "The product does not drop privileges before passing control of a
        resource to an actor that does not have those
        privileges.Guidelines:::TYPE:Maintenance:NOTE:CWE-271, CWE-272, and
        CWE-250 are all closely related and possibly overlapping. CWE-271 is
        probably better suited as a category.::"
    - point: "CWE-ID: 272Least Privilege Violation"
      priority: Essential
      details: "The elevated privilege level required to perform operations such as
        chroot() should be dropped immediately after the operation is
        performed.Guidelines:::TYPE:Maintenance:NOTE:CWE-271, CWE-272, and
        CWE-250 are all closely related and possibly overlapping. CWE-271 is
        probably better suited as a category.::TYPE:Other:NOTE:If system
        privileges are not dropped when it is reasonable to do so, this is not a
        vulnerability by itself. According to the principle of least privilege,
        access should be allowed only when it is absolutely necessary to the
        function of a given system, and only for the minimal necessary amount of
        time. Any further allowance of privilege widens the window of time
        during which a successful exploitation of the system will provide an
        attacker with that same privilege. If at all possible, limit the
        allowance of system privilege to small, simple sections of code that may
        be called atomically. When a program calls a privileged function, such
        as chroot(), it must first acquire root privilege. As soon as the
        privileged operation has completed, the program should drop root
        privilege and return to the privilege level of the invoking user.::"
    - point: "CWE-ID: 273Improper Check for Dropped Privileges"
      priority: Essential
      details: "The product attempts to drop privileges but does not check or
        incorrectly checks to see if the drop succeeded.Guidelines:"
    - point: "CWE-ID: 274Improper Handling of Insufficient Privileges"
      priority: Essential
      details: "The product does not handle or incorrectly handles when it has
        insufficient privileges to perform an operation, leading to resultant
        weaknesses.Guidelines:::TYPE:Maintenance:NOTE:CWE-280 and CWE-274 are
        too similar. It is likely that CWE-274 will be deprecated in the
        future.::TYPE:Relationship:NOTE:Overlaps dropped privileges,
        insufficient permissions.::TYPE:Theoretical:NOTE:This has a layering
        relationship with Unchecked Error Condition and Unchecked Return
        Value.::TYPE:Theoretical:NOTE:Within the context of vulnerability
        theory, privileges and permissions are two sides of the same coin.
        Privileges are associated with actors, and permissions are associated
        with resources. To perform access control, at some point the product
        makes a decision about whether the actor (and the privileges that have
        been assigned to that actor) is allowed to access the resource (based on
        the permissions that have been specified for that resource).::"
    - point: "CWE-ID: 276Incorrect Default Permissions"
      priority: Essential
      details: "During installation, installed file permissions are set to allow
        anyone to modify those files.Guidelines:"
    - point: "CWE-ID: 277Insecure Inherited Permissions"
      priority: Essential
      details: "A product defines a set of insecure permissions that are inherited by
        objects that are created by the program.Guidelines:"
    - point: "CWE-ID: 278Insecure Preserved Inherited Permissions"
      priority: Essential
      details: "A product inherits a set of insecure permissions for an object, e.g.
        when copying from an archive file, without user awareness or
        involvement.Guidelines:"
    - point: "CWE-ID: 279Incorrect Execution-Assigned Permissions"
      priority: Essential
      details: "While it is executing, the product sets the permissions of an object
        in a way that violates the intended permissions that have been specified
        by the user.Guidelines:"
    - point: "CWE-ID: 280Improper Handling of Insufficient Permissions or Privileges"
      priority: Essential
      details: "The product does not handle or incorrectly handles when it has
        insufficient privileges to access resources or functionality as
        specified by their permissions. This may cause it to follow unexpected
        code paths that may leave the product in an invalid
        state.Guidelines:::TYPE:Maintenance:NOTE:CWE-280 and CWE-274 are too
        similar. It is likely that CWE-274 will be deprecated in the
        future.::TYPE:Relationship:NOTE:This can be both primary and resultant.
        When primary, it can expose a variety of weaknesses because a resource
        might not have the expected state, and subsequent operations might fail.
        It is often resultant from Unchecked Error Condition
        (CWE-391).::TYPE:Theoretical:NOTE:Within the context of vulnerability
        theory, privileges and permissions are two sides of the same coin.
        Privileges are associated with actors, and permissions are associated
        with resources. To perform access control, at some point the software
        makes a decision about whether the actor (and the privileges that have
        been assigned to that actor) is allowed to access the resource (based on
        the permissions that have been specified for that
        resource).::TYPE:Research Gap:NOTE:This type of issue is under-studied,
        since researchers often concentrate on whether an object has too many
        permissions, instead of not enough. These weaknesses are likely to
        appear in environments with fine-grained models for permissions and
        privileges, which can include operating systems and other large-scale
        software packages. However, even highly simplistic permission/privilege
        models are likely to contain these issues if the developer has not
        considered the possibility of access failure.::"
    - point: "CWE-ID: 281Improper Preservation of Permissions"
      priority: Essential
      details: "The product does not preserve permissions or incorrectly preserves
        permissions when copying, restoring, or sharing objects, which can cause
        them to have less restrictive permissions than intended.Guidelines:"
    - point: "CWE-ID: 282Improper Ownership Management"
      priority: Essential
      details: "The product assigns the wrong ownership, or does not properly verify
        the ownership, of an object or
        resource.Guidelines:::TYPE:Maintenance:NOTE:The relationships between
        privileges, permissions, and actors (e.g. users and groups) need further
        refinement within the Research view. One complication is that these
        concepts apply to two different pillars, related to control of resources
        (CWE-664) and protection mechanism failures (CWE-693).::"
    - point: "CWE-ID: 283Unverified Ownership"
      priority: Essential
      details: "The product does not properly verify that a critical resource is owned
        by the proper entity.Guidelines:::TYPE:Relationship:NOTE:This overlaps
        insufficient comparison, verification errors, permissions, and
        privileges.::"
    - point: "CWE-ID: 284Improper Access Control"
      priority: Essential
      details: "The product does not restrict or incorrectly restricts access to a
        resource from an unauthorized
        actor.Guidelines:::TYPE:Maintenance:NOTE:This entry needs more work.
        Possible sub-categories include: Trusted group includes undesired
        entities (partially covered by CWE-286) Group can perform undesired
        actions ACL parse error does not fail closed::"
    - point: "CWE-ID: 285Improper Authorization"
      priority: Essential
      details: "The product does not perform or incorrectly performs an authorization
        check when an actor attempts to access a resource or perform an
        action.Guidelines:"
    - point: "CWE-ID: 286Incorrect User Management"
      priority: Essential
      details: "The product does not properly manage a user within its
        environment.Guidelines:::TYPE:Maintenance:NOTE:The relationships between
        privileges, permissions, and actors (e.g. users and groups) need further
        refinement within the Research view. One complication is that these
        concepts apply to two different pillars, related to control of resources
        (CWE-664) and protection mechanism failures
        (CWE-693).::TYPE:Maintenance:NOTE:This item needs more work. Possible
        sub-categories include: user in wrong group, and user with insecure
        profile or configuration. It also might be better expressed as a
        category than a weakness.::"
    - point: "CWE-ID: 287Improper Authentication"
      priority: Essential
      details: "When an actor claims to have a given identity, the product does not
        prove or insufficiently proves that the claim is
        correct.Guidelines:::TYPE:Relationship:NOTE:This can be resultant from
        SQL injection vulnerabilities and other
        issues.::TYPE:Maintenance:NOTE:The Taxonomy_Mappings to ISA/IEC 62443
        were added in CWE 4.10, but they are still under review and might change
        in future CWE versions. These draft mappings were performed by members
        of the Mapping CWE to 62443 subgroup of the CWE-CAPEC ICS/OT Special
        Interest Group (SIG), and their work is incomplete as of CWE 4.10. The
        mappings are included to facilitate discussion and review by the broader
        ICS/OT community, and they are likely to change in future CWE
        versions.::"
    - point: "CWE-ID: 288Authentication Bypass Using an Alternate Path or Channel"
      priority: Essential
      details: "A product requires authentication, but the product has an alternate
        path or channel that does not require
        authentication.Guidelines:::TYPE:Relationship:NOTE:overlaps Unprotected
        Alternate Channel::"
    - point: "CWE-ID: 289Authentication Bypass by Alternate Name"
      priority: Essential
      details: "The product performs authentication based on the name of a resource
        being accessed, or the name of the actor performing the access, but it
        does not properly check all possible names for that resource or
        actor.Guidelines:::TYPE:Relationship:NOTE:Overlaps equivalent encodings,
        canonicalization, authorization, multiple trailing slash, trailing
        space, mixed case, and other equivalence
        issues.::TYPE:Theoretical:NOTE:Alternate names are useful in data driven
        manipulation attacks, not just for authentication.::"
    - point: "CWE-ID: 290Authentication Bypass by Spoofing"
      priority: Essential
      details: "This attack-focused weakness is caused by incorrectly implemented
        authentication schemes that are subject to spoofing
        attacks.Guidelines:::TYPE:Relationship:NOTE:This can be resultant from
        insufficient verification.::"
    - point: "CWE-ID: 291Reliance on IP Address for Authentication"
      priority: Essential
      details: "The product uses an IP address for authentication.Guidelines:"
    - point: "CWE-ID: 293Using Referer Field for Authentication"
      priority: Essential
      details: "The referer field in HTTP requests can be easily modified and, as
        such, is not a valid means of message integrity checking.Guidelines:"
    - point: "CWE-ID: 294Authentication Bypass by Capture-replay"
      priority: Essential
      details: "A capture-replay flaw exists when the design of the product makes it
        possible for a malicious user to sniff network traffic and bypass
        authentication by replaying it to the server in question to the same
        effect as the original message (or with minor changes).Guidelines:"
    - point: "CWE-ID: 295Improper Certificate Validation"
      priority: Essential
      details: "The product does not validate, or incorrectly validates, a
        certificate.Guidelines:"
    - point: "CWE-ID: 296Improper Following of a Certificate's Chain of Trust"
      priority: Essential
      details: "The product does not follow, or incorrectly follows, the chain of
        trust for a certificate back to a trusted root certificate, resulting in
        incorrect trust of any resource that is associated with that
        certificate.Guidelines:"
    - point: "CWE-ID: 297Improper Validation of Certificate with Host Mismatch"
      priority: Essential
      details: "The product communicates with a host that provides a certificate, but
        the product does not properly ensure that the certificate is actually
        associated with that host.Guidelines:"
    - point: "CWE-ID: 298Improper Validation of Certificate Expiration"
      priority: Essential
      details: "A certificate expiration is not validated or is incorrectly validated,
        so trust may be assigned to certificates that have been abandoned due to
        age.Guidelines:"
    - point: "CWE-ID: 299Improper Check for Certificate Revocation"
      priority: Essential
      details: "The product does not check or incorrectly checks the revocation status
        of a certificate, which may cause it to use a certificate that has been
        compromised.Guidelines:"
    - point: "CWE-ID: 300Channel Accessible by Non-Endpoint"
      priority: Essential
      details: "The product does not adequately verify the identity of actors at both
        ends of a communication channel, or does not adequately ensure the
        integrity of the channel, in a way that allows the channel to be
        accessed or influenced by an actor that is not an
        endpoint.Guidelines:::TYPE:Maintenance:NOTE:The summary identifies
        multiple distinct possibilities, suggesting that this is a category that
        must be broken into more specific weaknesses.::"
    - point: "CWE-ID: 301Reflection Attack in an Authentication Protocol"
      priority: Essential
      details: "Simple authentication protocols are subject to reflection attacks if a
        malicious user can use the target machine to impersonate a trusted
        user.Guidelines:::TYPE:Maintenance:NOTE:The term reflection is used in
        multiple ways within CWE and the community, so its usage should be
        reviewed.::"
    - point: "CWE-ID: 302Authentication Bypass by Assumed-Immutable Data"
      priority: Essential
      details: "The authentication scheme or implementation uses key data elements
        that are assumed to be immutable, but can be controlled or modified by
        the attacker.Guidelines:"
    - point: "CWE-ID: 303Incorrect Implementation of Authentication Algorithm"
      priority: Essential
      details: "The requirements for the product dictate the use of an established
        authentication algorithm, but the implementation of the algorithm is
        incorrect.Guidelines:"
    - point: "CWE-ID: 304Missing Critical Step in Authentication"
      priority: Essential
      details: "The product implements an authentication technique, but it skips a
        step that weakens the technique.Guidelines:"
    - point: "CWE-ID: 305Authentication Bypass by Primary Weakness"
      priority: Essential
      details: "The authentication algorithm is sound, but the implemented mechanism
        can be bypassed as the result of a separate weakness that is primary to
        the authentication error.Guidelines:::TYPE:Relationship:NOTE:Most
        authentication bypass errors are resultant, not primary.::"
    - point: "CWE-ID: 306Missing Authentication for Critical Function"
      priority: Essential
      details: "The product does not perform any authentication for functionality that
        requires a provable user identity or consumes a significant amount of
        resources.Guidelines:"
    - point: "CWE-ID: 307Improper Restriction of Excessive Authentication Attempts"
      priority: Essential
      details: "The product does not implement sufficient measures to prevent multiple
        failed authentication attempts within a short time frame, making it more
        susceptible to brute force attacks.Guidelines:"
    - point: "CWE-ID: 308Use of Single-factor Authentication"
      priority: Essential
      details: "The use of single-factor authentication can lead to unnecessary risk
        of compromise when compared with the benefits of a dual-factor
        authentication scheme.Guidelines:"
    - point: "CWE-ID: 309Use of Password System for Primary Authentication"
      priority: Essential
      details: "The use of password systems as the primary means of authentication may
        be subject to several flaws or shortcomings, each reducing the
        effectiveness of the mechanism.Guidelines:"
    - point: "CWE-ID: 311Missing Encryption of Sensitive Data"
      priority: Essential
      details: "The product does not encrypt sensitive or critical information before
        storage or transmission.Guidelines:::TYPE:Relationship:NOTE:There is an
        overlapping relationship between insecure storage of sensitive
        information (CWE-922) and missing encryption of sensitive information
        (CWE-311). Encryption is often used to prevent an attacker from reading
        the sensitive data. However, encryption does not prevent the attacker
        from erasing or overwriting the data.::"
    - point: "CWE-ID: 312Cleartext Storage of Sensitive Information"
      priority: Essential
      details: "The product stores sensitive information in cleartext within a
        resource that might be accessible to another control
        sphere.Guidelines:::TYPE:Terminology:NOTE:Different people use cleartext
        and plaintext to mean the same thing: the lack of encryption. However,
        within cryptography, these have more precise meanings. Plaintext is the
        information just before it is fed into a cryptographic algorithm,
        including already-encrypted text. Cleartext is any information that is
        unencrypted, although it might be in an encoded form that is not easily
        human-readable (such as base64 encoding).::"
    - point: "CWE-ID: 313Cleartext Storage in a File or on Disk"
      priority: Essential
      details: "The product stores sensitive information in cleartext in a file, or on
        disk.Guidelines:::TYPE:Terminology:NOTE:Different people use cleartext
        and plaintext to mean the same thing: the lack of encryption. However,
        within cryptography, these have more precise meanings. Plaintext is the
        information just before it is fed into a cryptographic algorithm,
        including already-encrypted text. Cleartext is any information that is
        unencrypted, although it might be in an encoded form that is not easily
        human-readable (such as base64 encoding).::"
    - point: "CWE-ID: 314Cleartext Storage in the Registry"
      priority: Essential
      details: "The product stores sensitive information in cleartext in the
        registry.Guidelines:::TYPE:Terminology:NOTE:Different people use
        cleartext and plaintext to mean the same thing: the lack of encryption.
        However, within cryptography, these have more precise meanings.
        Plaintext is the information just before it is fed into a cryptographic
        algorithm, including already-encrypted text. Cleartext is any
        information that is unencrypted, although it might be in an encoded form
        that is not easily human-readable (such as base64 encoding).::"
    - point: "CWE-ID: 315Cleartext Storage of Sensitive Information in a Cookie"
      priority: Essential
      details: "The product stores sensitive information in cleartext in a
        cookie.Guidelines:::TYPE:Terminology:NOTE:Different people use cleartext
        and plaintext to mean the same thing: the lack of encryption. However,
        within cryptography, these have more precise meanings. Plaintext is the
        information just before it is fed into a cryptographic algorithm,
        including already-encrypted text. Cleartext is any information that is
        unencrypted, although it might be in an encoded form that is not easily
        human-readable (such as base64 encoding).::"
    - point: "CWE-ID: 316Cleartext Storage of Sensitive Information in Memory"
      priority: Essential
      details: "The product stores sensitive information in cleartext in
        memory.Guidelines:::TYPE:Relationship:NOTE:This could be a resultant
        weakness, e.g. if the compiler removes code that was intended to wipe
        memory.::TYPE:Terminology:NOTE:Different people use cleartext and
        plaintext to mean the same thing: the lack of encryption. However,
        within cryptography, these have more precise meanings. Plaintext is the
        information just before it is fed into a cryptographic algorithm,
        including already-encrypted text. Cleartext is any information that is
        unencrypted, although it might be in an encoded form that is not easily
        human-readable (such as base64 encoding).::"
    - point: "CWE-ID: 317Cleartext Storage of Sensitive Information in GUI"
      priority: Essential
      details: "The product stores sensitive information in cleartext within the
        GUI.Guidelines:::TYPE:Terminology:NOTE:Different people use cleartext
        and plaintext to mean the same thing: the lack of encryption. However,
        within cryptography, these have more precise meanings. Plaintext is the
        information just before it is fed into a cryptographic algorithm,
        including already-encrypted text. Cleartext is any information that is
        unencrypted, although it might be in an encoded form that is not easily
        human-readable (such as base64 encoding).::"
    - point: "CWE-ID: 318Cleartext Storage of Sensitive Information in Executable"
      priority: Essential
      details: "The product stores sensitive information in cleartext in an
        executable.Guidelines:::TYPE:Terminology:NOTE:Different people use
        cleartext and plaintext to mean the same thing: the lack of encryption.
        However, within cryptography, these have more precise meanings.
        Plaintext is the information just before it is fed into a cryptographic
        algorithm, including already-encrypted text. Cleartext is any
        information that is unencrypted, although it might be in an encoded form
        that is not easily human-readable (such as base64 encoding).::"
    - point: "CWE-ID: 319Cleartext Transmission of Sensitive Information"
      priority: Essential
      details: "The product transmits sensitive or security-critical data in cleartext
        in a communication channel that can be sniffed by unauthorized
        actors.Guidelines:::TYPE:Maintenance:NOTE:The Taxonomy_Mappings to
        ISA/IEC 62443 were added in CWE 4.10, but they are still under review
        and might change in future CWE versions. These draft mappings were
        performed by members of the Mapping CWE to 62443 subgroup of the
        CWE-CAPEC ICS/OT Special Interest Group (SIG), and their work is
        incomplete as of CWE 4.10. The mappings are included to facilitate
        discussion and review by the broader ICS/OT community, and they are
        likely to change in future CWE versions.::"
    - point: "CWE-ID: 321Use of Hard-coded Cryptographic Key"
      priority: Essential
      details: "The use of a hard-coded cryptographic key significantly increases the
        possibility that encrypted data may be
        recovered.Guidelines:::TYPE:Other:NOTE:The main difference between the
        use of hard-coded passwords and the use of hard-coded cryptographic keys
        is the false sense of security that the former conveys. Many people
        believe that simply hashing a hard-coded password before storage will
        protect the information from malicious users. However, many hashes are
        reversible (or at least vulnerable to brute force attacks) -- and
        further, many authentication protocols simply request the hash itself,
        making it no better than a password.::TYPE:Maintenance:NOTE:The
        Taxonomy_Mappings to ISA/IEC 62443 were added in CWE 4.10, but they are
        still under review and might change in future CWE versions. These draft
        mappings were performed by members of the Mapping CWE to 62443 subgroup
        of the CWE-CAPEC ICS/OT Special Interest Group (SIG), and their work is
        incomplete as of CWE 4.10. The mappings are included to facilitate
        discussion and review by the broader ICS/OT community, and they are
        likely to change in future CWE versions.::"
    - point: "CWE-ID: 322Key Exchange without Entity Authentication"
      priority: Essential
      details: "The product performs a key exchange with an actor without verifying
        the identity of that actor.Guidelines:"
    - point: "CWE-ID: 323Reusing a Nonce, Key Pair in Encryption"
      priority: Essential
      details: "Nonces should be used for the present occasion and only
        once.Guidelines:"
    - point: "CWE-ID: 324Use of a Key Past its Expiration Date"
      priority: Essential
      details: "The product uses a cryptographic key or password past its expiration
        date, which diminishes its safety significantly by increasing the timing
        window for cracking attacks against that key.Guidelines:"
    - point: "CWE-ID: 325Missing Cryptographic Step"
      priority: Essential
      details: "The product does not implement a required step in a cryptographic
        algorithm, resulting in weaker encryption than advertised by the
        algorithm.Guidelines:::TYPE:Relationship:NOTE:Overlaps
        incomplete/missing security check.::TYPE:Relationship:NOTE:Can be
        resultant.::"
    - point: "CWE-ID: 326Inadequate Encryption Strength"
      priority: Essential
      details: "The product stores or transmits sensitive data using an encryption
        scheme that is theoretically sound, but is not strong enough for the
        level of protection required.Guidelines:"
    - point: "CWE-ID: 327Use of a Broken or Risky Cryptographic Algorithm"
      priority: Essential
      details: "The product uses a broken or risky cryptographic algorithm or
        protocol.Guidelines:::TYPE:Maintenance:NOTE:Since CWE 4.4, various
        cryptography-related entries, including CWE-327 and CWE-1240, have been
        slated for extensive research, analysis, and community consultation to
        define consistent terminology, improve relationships, and reduce overlap
        or duplication. As of CWE 4.6, this work is still
        ongoing.::TYPE:Maintenance:NOTE:The Taxonomy_Mappings to ISA/IEC 62443
        were added in CWE 4.10, but they are still under review and might change
        in future CWE versions. These draft mappings were performed by members
        of the Mapping CWE to 62443 subgroup of the CWE-CAPEC ICS/OT Special
        Interest Group (SIG), and their work is incomplete as of CWE 4.10. The
        mappings are included to facilitate discussion and review by the broader
        ICS/OT community, and they are likely to change in future CWE
        versions.::"
    - point: "CWE-ID: 328Use of Weak Hash"
      priority: Essential
      details: "The product uses an algorithm that produces a digest (output value)
        that does not meet security expectations for a hash function that allows
        an adversary to reasonably determine the original input (preimage
        attack), find another input that can produce the same hash (2nd preimage
        attack), or find multiple inputs that evaluate to the same hash
        (birthday attack).Guidelines:::TYPE:Maintenance:NOTE:Since CWE 4.4,
        various cryptography-related entries including CWE-328 have been slated
        for extensive research, analysis, and community consultation to define
        consistent terminology, improve relationships, and reduce overlap or
        duplication. As of CWE 4.6, this work is still ongoing.::"
    - point: "CWE-ID: 329Generation of Predictable IV with CBC Mode"
      priority: Essential
      details: "The product generates and uses a predictable initialization Vector
        (IV) with Cipher Block Chaining (CBC) Mode, which causes algorithms to
        be susceptible to dictionary attacks when they are encrypted under the
        same key.Guidelines:::TYPE:Maintenance:NOTE:As of CWE 4.5, terminology
        related to randomness, entropy, and predictability can vary widely.
        Within the developer and other communities, randomness is used heavily.
        However, within cryptography, entropy is distinct, typically implied as
        a measurement. There are no commonly-used definitions, even within
        standards documents and cryptography papers. Future versions of CWE will
        attempt to define these terms and, if necessary, distinguish between
        them in ways that are appropriate for different communities but do not
        reduce the usability of CWE for mapping, understanding, or other
        scenarios.::"
    - point: "CWE-ID: 330Use of Insufficiently Random Values"
      priority: Essential
      details: "The product uses insufficiently random numbers or values in a security
        context that depends on unpredictable
        numbers.Guidelines:::TYPE:Relationship:NOTE:This can be primary to many
        other weaknesses such as cryptographic errors, authentication errors,
        symlink following, information leaks, and
        others.::TYPE:Maintenance:NOTE:As of CWE 4.3, CWE-330 and its
        descendants are being investigated by the CWE crypto team to identify
        gaps related to randomness and unpredictability, as well as the
        relationships between randomness and cryptographic primitives. This
        subtree analysis might result in the addition or deprecation of existing
        entries; the reorganization of relationships in some views, e.g. the
        research view (CWE-1000); more consistent use of terminology; and/or
        significant modifications to related entries.::TYPE:Maintenance:NOTE:As
        of CWE 4.5, terminology related to randomness, entropy, and
        predictability can vary widely. Within the developer and other
        communities, randomness is used heavily. However, within cryptography,
        entropy is distinct, typically implied as a measurement. There are no
        commonly-used definitions, even within standards documents and
        cryptography papers. Future versions of CWE will attempt to define these
        terms and, if necessary, distinguish between them in ways that are
        appropriate for different communities but do not reduce the usability of
        CWE for mapping, understanding, or other scenarios.::"
    - point: "CWE-ID: 331Insufficient Entropy"
      priority: Essential
      details: "The product uses an algorithm or scheme that produces insufficient
        entropy, leaving patterns or clusters of values that are more likely to
        occur than others.Guidelines:::TYPE:Maintenance:NOTE:As of CWE 4.5,
        terminology related to randomness, entropy, and predictability can vary
        widely. Within the developer and other communities, randomness is used
        heavily. However, within cryptography, entropy is distinct, typically
        implied as a measurement. There are no commonly-used definitions, even
        within standards documents and cryptography papers. Future versions of
        CWE will attempt to define these terms and, if necessary, distinguish
        between them in ways that are appropriate for different communities but
        do not reduce the usability of CWE for mapping, understanding, or other
        scenarios.::"
    - point: "CWE-ID: 332Insufficient Entropy in PRNG"
      priority: Essential
      details: "The lack of entropy available for, or used by, a Pseudo-Random Number
        Generator (PRNG) can be a stability and security
        threat.Guidelines:::TYPE:Maintenance:NOTE:As of CWE 4.5, terminology
        related to randomness, entropy, and predictability can vary widely.
        Within the developer and other communities, randomness is used heavily.
        However, within cryptography, entropy is distinct, typically implied as
        a measurement. There are no commonly-used definitions, even within
        standards documents and cryptography papers. Future versions of CWE will
        attempt to define these terms and, if necessary, distinguish between
        them in ways that are appropriate for different communities but do not
        reduce the usability of CWE for mapping, understanding, or other
        scenarios.::"
    - point: "CWE-ID: 333Improper Handling of Insufficient Entropy in TRNG"
      priority: Essential
      details: "True random number generators (TRNG) generally have a limited source
        of entropy and therefore can fail or
        block.Guidelines:::TYPE:Maintenance:NOTE:As of CWE 4.5, terminology
        related to randomness, entropy, and predictability can vary widely.
        Within the developer and other communities, randomness is used heavily.
        However, within cryptography, entropy is distinct, typically implied as
        a measurement. There are no commonly-used definitions, even within
        standards documents and cryptography papers. Future versions of CWE will
        attempt to define these terms and, if necessary, distinguish between
        them in ways that are appropriate for different communities but do not
        reduce the usability of CWE for mapping, understanding, or other
        scenarios.::"
    - point: "CWE-ID: 334Small Space of Random Values"
      priority: Essential
      details: "The number of possible random values is smaller than needed by the
        product, making it more susceptible to brute force
        attacks.Guidelines:::TYPE:Maintenance:NOTE:As of CWE 4.5, terminology
        related to randomness, entropy, and predictability can vary widely.
        Within the developer and other communities, randomness is used heavily.
        However, within cryptography, entropy is distinct, typically implied as
        a measurement. There are no commonly-used definitions, even within
        standards documents and cryptography papers. Future versions of CWE will
        attempt to define these terms and, if necessary, distinguish between
        them in ways that are appropriate for different communities but do not
        reduce the usability of CWE for mapping, understanding, or other
        scenarios.::"
    - point: "CWE-ID: 335Incorrect Usage of Seeds in Pseudo-Random Number Generator
        (PRNG)"
      priority: Essential
      details: "The product uses a Pseudo-Random Number Generator (PRNG) but does not
        correctly manage seeds.Guidelines:::TYPE:Maintenance:NOTE:As of CWE 4.5,
        terminology related to randomness, entropy, and predictability can vary
        widely. Within the developer and other communities, randomness is used
        heavily. However, within cryptography, entropy is distinct, typically
        implied as a measurement. There are no commonly-used definitions, even
        within standards documents and cryptography papers. Future versions of
        CWE will attempt to define these terms and, if necessary, distinguish
        between them in ways that are appropriate for different communities but
        do not reduce the usability of CWE for mapping, understanding, or other
        scenarios.::"
    - point: "CWE-ID: 336Same Seed in Pseudo-Random Number Generator (PRNG)"
      priority: Essential
      details: "A Pseudo-Random Number Generator (PRNG) uses the same seed each time
        the product is initialized.Guidelines:::TYPE:Maintenance:NOTE:As of CWE
        4.5, terminology related to randomness, entropy, and predictability can
        vary widely. Within the developer and other communities, randomness is
        used heavily. However, within cryptography, entropy is distinct,
        typically implied as a measurement. There are no commonly-used
        definitions, even within standards documents and cryptography papers.
        Future versions of CWE will attempt to define these terms and, if
        necessary, distinguish between them in ways that are appropriate for
        different communities but do not reduce the usability of CWE for
        mapping, understanding, or other scenarios.::"
    - point: "CWE-ID: 337Predictable Seed in Pseudo-Random Number Generator (PRNG)"
      priority: Essential
      details: "A Pseudo-Random Number Generator (PRNG) is initialized from a
        predictable seed, such as the process ID or system
        time.Guidelines:::TYPE:Maintenance:NOTE:As of CWE 4.5, terminology
        related to randomness, entropy, and predictability can vary widely.
        Within the developer and other communities, randomness is used heavily.
        However, within cryptography, entropy is distinct, typically implied as
        a measurement. There are no commonly-used definitions, even within
        standards documents and cryptography papers. Future versions of CWE will
        attempt to define these terms and, if necessary, distinguish between
        them in ways that are appropriate for different communities but do not
        reduce the usability of CWE for mapping, understanding, or other
        scenarios.::"
    - point: "CWE-ID: 338Use of Cryptographically Weak Pseudo-Random Number Generator
        (PRNG)"
      priority: Essential
      details: "The product uses a Pseudo-Random Number Generator (PRNG) in a security
        context, but the PRNG's algorithm is not cryptographically
        strong.Guidelines:::TYPE:Maintenance:NOTE:As of CWE 4.5, terminology
        related to randomness, entropy, and predictability can vary widely.
        Within the developer and other communities, randomness is used heavily.
        However, within cryptography, entropy is distinct, typically implied as
        a measurement. There are no commonly-used definitions, even within
        standards documents and cryptography papers. Future versions of CWE will
        attempt to define these terms and, if necessary, distinguish between
        them in ways that are appropriate for different communities but do not
        reduce the usability of CWE for mapping, understanding, or other
        scenarios.::"
    - point: "CWE-ID: 339Small Seed Space in PRNG"
      priority: Essential
      details: "A Pseudo-Random Number Generator (PRNG) uses a relatively small seed
        space, which makes it more susceptible to brute force
        attacks.Guidelines:::TYPE:Maintenance:NOTE:This entry may have a
        chaining relationship with predictable from observable state
        (CWE-341).::TYPE:Maintenance:NOTE:As of CWE 4.5, terminology related to
        randomness, entropy, and predictability can vary widely. Within the
        developer and other communities, randomness is used heavily. However,
        within cryptography, entropy is distinct, typically implied as a
        measurement. There are no commonly-used definitions, even within
        standards documents and cryptography papers. Future versions of CWE will
        attempt to define these terms and, if necessary, distinguish between
        them in ways that are appropriate for different communities but do not
        reduce the usability of CWE for mapping, understanding, or other
        scenarios.::"
    - point: "CWE-ID: 340Generation of Predictable Numbers or Identifiers"
      priority: Essential
      details: "The product uses a scheme that generates numbers or identifiers that
        are more predictable than required.Guidelines:::TYPE:Maintenance:NOTE:As
        of CWE 4.5, terminology related to randomness, entropy, and
        predictability can vary widely. Within the developer and other
        communities, randomness is used heavily. However, within cryptography,
        entropy is distinct, typically implied as a measurement. There are no
        commonly-used definitions, even within standards documents and
        cryptography papers. Future versions of CWE will attempt to define these
        terms and, if necessary, distinguish between them in ways that are
        appropriate for different communities but do not reduce the usability of
        CWE for mapping, understanding, or other scenarios.::"
    - point: "CWE-ID: 341Predictable from Observable State"
      priority: Essential
      details: "A number or object is predictable based on observations that the
        attacker can make about the state of the system or network, such as
        time, process ID, etc.Guidelines:::TYPE:Maintenance:NOTE:As of CWE 4.5,
        terminology related to randomness, entropy, and predictability can vary
        widely. Within the developer and other communities, randomness is used
        heavily. However, within cryptography, entropy is distinct, typically
        implied as a measurement. There are no commonly-used definitions, even
        within standards documents and cryptography papers. Future versions of
        CWE will attempt to define these terms and, if necessary, distinguish
        between them in ways that are appropriate for different communities but
        do not reduce the usability of CWE for mapping, understanding, or other
        scenarios.::"
    - point: "CWE-ID: 342Predictable Exact Value from Previous Values"
      priority: Essential
      details: "An exact value or random number can be precisely predicted by
        observing previous values.Guidelines:::TYPE:Maintenance:NOTE:As of CWE
        4.5, terminology related to randomness, entropy, and predictability can
        vary widely. Within the developer and other communities, randomness is
        used heavily. However, within cryptography, entropy is distinct,
        typically implied as a measurement. There are no commonly-used
        definitions, even within standards documents and cryptography papers.
        Future versions of CWE will attempt to define these terms and, if
        necessary, distinguish between them in ways that are appropriate for
        different communities but do not reduce the usability of CWE for
        mapping, understanding, or other scenarios.::"
    - point: "CWE-ID: 343Predictable Value Range from Previous Values"
      priority: Essential
      details: "The product's random number generator produces a series of values
        which, when observed, can be used to infer a relatively small range of
        possibilities for the next value that could be
        generated.Guidelines:::TYPE:Maintenance:NOTE:As of CWE 4.5, terminology
        related to randomness, entropy, and predictability can vary widely.
        Within the developer and other communities, randomness is used heavily.
        However, within cryptography, entropy is distinct, typically implied as
        a measurement. There are no commonly-used definitions, even within
        standards documents and cryptography papers. Future versions of CWE will
        attempt to define these terms and, if necessary, distinguish between
        them in ways that are appropriate for different communities but do not
        reduce the usability of CWE for mapping, understanding, or other
        scenarios.::"
    - point: "CWE-ID: 344Use of Invariant Value in Dynamically Changing Context"
      priority: Essential
      details: "The product uses a constant value, name, or reference, but this value
        can (or should) vary across different
        environments.Guidelines:::TYPE:Relationship:NOTE:overlaps default
        configuration.::"
    - point: "CWE-ID: 345Insufficient Verification of Data Authenticity"
      priority: Essential
      details: "The product does not sufficiently verify the origin or authenticity of
        data, in a way that causes it to accept invalid
        data.Guidelines:::TYPE:Relationship:NOTE:origin validation could fall
        under this.::TYPE:Maintenance:NOTE:The specific ways in which the origin
        is not properly identified should be laid out as separate weaknesses. In
        some sense, this is more like a category.::"
    - point: "CWE-ID: 346Origin Validation Error"
      priority: Essential
      details: "The product does not properly verify that the source of data or
        communication is valid.Guidelines:::TYPE:Maintenance:NOTE:This entry has
        some significant overlap with other CWE entries and may need some
        clarification. See terminology notes.::TYPE:Terminology:NOTE:The Origin
        Validation Error term was originally used in a 1995 thesis [REF-324].
        Although not formally defined, an issue is considered to be an origin
        validation error if either (1) an object [accepts] input from an
        unauthorized subject, or (2) the system [fails] to properly or
        completely authenticate a subject. A later section says that an origin
        validation error can occur when the system (1) does not properly
        authenticate a user or process or (2) does not properly authenticate the
        shared data or libraries. The only example provided in the thesis
        (covered by OSVDB:57615) involves a setuid program running command-line
        arguments without dropping privileges. So, this definition (and its
        examples in the thesis) effectively cover other weaknesses such as
        CWE-287 (Improper Authentication), CWE-285 (Improper Authorization), and
        CWE-250 (Execution with Unnecessary Privileges). There appears to be
        little usage of this term today, except in the SecurityFocus
        vulnerability database, where the term is used for a variety of issues,
        including web-browser problems that allow violation of the Same Origin
        Policy and improper validation of the source of an incoming message.::"
    - point: "CWE-ID: 347Improper Verification of Cryptographic Signature"
      priority: Essential
      details: "The product does not verify, or incorrectly verifies, the
        cryptographic signature for data.Guidelines:"
    - point: "CWE-ID: 348Use of Less Trusted Source"
      priority: Essential
      details: "The product has two different sources of the same data or information,
        but it uses the source that has less support for verification, is less
        trusted, or is less resistant to attack.Guidelines:"
    - point: "CWE-ID: 349Acceptance of Extraneous Untrusted Data With Trusted Data"
      priority: Essential
      details: "The product, when processing trusted data, accepts any untrusted data
        that is also included with the trusted data, treating the untrusted data
        as if it were trusted.Guidelines:"
    - point: "CWE-ID: 350Reliance on Reverse DNS Resolution for a Security-Critical
        Action"
      priority: Essential
      details: "The product performs reverse DNS resolution on an IP address to obtain
        the hostname and make a security decision, but it does not properly
        ensure that the IP address is truly associated with the
        hostname.Guidelines:::TYPE:Maintenance:NOTE:CWE-350, CWE-247, and
        CWE-292 were merged into CWE-350 in CWE 2.5. CWE-247 was originally
        derived from Seven Pernicious Kingdoms, CWE-350 from PLOVER, and CWE-292
        from CLASP. All taxonomies focused closely on the use of reverse DNS for
        authentication of incoming requests.::"
    - point: "CWE-ID: 351Insufficient Type Distinction"
      priority: Essential
      details: "The product does not properly distinguish between different types of
        elements in a way that leads to insecure
        behavior.Guidelines:::TYPE:Relationship:NOTE:Overlaps others, e.g.
        Multiple Interpretation Errors.::"
    - point: "CWE-ID: 352Cross-Site Request Forgery (CSRF)"
      priority: Essential
      details: "The web application does not, or can not, sufficiently verify whether
        a well-formed, valid, consistent request was intentionally provided by
        the user who submitted the
        request.Guidelines:::TYPE:Relationship:NOTE:There can be a close
        relationship between XSS and CSRF (CWE-352). An attacker might use CSRF
        in order to trick the victim into submitting requests to the server in
        which the requests contain an XSS payload. A well-known example of this
        was the Samy worm on MySpace [REF-956]. The worm used XSS to insert
        malicious HTML sequences into a user's profile and add the attacker as a
        MySpace friend. MySpace friends of that victim would then execute the
        payload to modify their own profiles, causing the worm to propagate
        exponentially. Since the victims did not intentionally insert the
        malicious script themselves, CSRF was a root
        cause.::TYPE:Theoretical:NOTE:The CSRF topology is multi-channel:
        Attacker (as outsider) to intermediary (as user). The interaction point
        is either an external or internal channel. Intermediary (as user) to
        server (as victim). The activation point is an internal channel.::"
    - point: "CWE-ID: 353Missing Support for Integrity Check"
      priority: Essential
      details: "The product uses a transmission protocol that does not include a
        mechanism for verifying the integrity of the data during transmission,
        such as a checksum.Guidelines:"
    - point: "CWE-ID: 354Improper Validation of Integrity Check Value"
      priority: Essential
      details: "The product does not validate or incorrectly validates the integrity
        check values or checksums of a message. This may prevent it from
        detecting if the data has been modified or corrupted in
        transmission.Guidelines:"
    - point: "CWE-ID: 356Product UI does not Warn User of Unsafe Actions"
      priority: Essential
      details: "The product's user interface does not warn the user before undertaking
        an unsafe action on behalf of that user. This makes it easier for
        attackers to trick users into inflicting damage to their
        system.Guidelines:::TYPE:Relationship:NOTE:Often resultant, e.g. in
        unhandled error conditions.::TYPE:Relationship:NOTE:Can overlap
        privilege errors, conceptually at least.::"
    - point: "CWE-ID: 357Insufficient UI Warning of Dangerous Operations"
      priority: Essential
      details: "The user interface provides a warning to a user regarding dangerous or
        sensitive operations, but the warning is not noticeable enough to
        warrant attention.Guidelines:"
    - point: "CWE-ID: 358Improperly Implemented Security Check for Standard"
      priority: Essential
      details: "The product does not implement or incorrectly implements one or more
        security-relevant checks as specified by the design of a standardized
        algorithm, protocol, or
        technique.Guidelines:::TYPE:Relationship:NOTE:This is a missing step
        error on the product side, which can overlap weaknesses such as
        insufficient verification and spoofing. It is frequently found in
        cryptographic and authentication errors. It is sometimes resultant.::"
    - point: "CWE-ID: 359Exposure of Private Personal Information to an Unauthorized
        Actor"
      priority: Essential
      details: "The product does not properly prevent a person's private, personal
        information from being accessed by actors who either (1) are not
        explicitly authorized to access the information or (2) do not have the
        implicit consent of the person about whom the information is
        collected.Guidelines:::TYPE:Maintenance:NOTE:This entry overlaps many
        other entries that are not organized around the kind of sensitive
        information that is exposed. However, because privacy is treated with
        such importance due to regulations and other factors, and it may be
        useful for weakness-finding tools to highlight capabilities that detect
        personal private information instead of system information, it is not
        clear whether - and how - this entry should be deprecated.::"
    - point: "CWE-ID: 360Trust of System Event Data"
      priority: Essential
      details: "Security based on event locations are insecure and can be
        spoofed.Guidelines:"
    - point: "CWE-ID: 362Concurrent Execution using Shared Resource with Improper
        Synchronization ('Race Condition')"
      priority: Essential
      details: "The product contains a code sequence that can run concurrently with
        other code, and the code sequence requires temporary, exclusive access
        to a shared resource, but a timing window exists in which the shared
        resource can be modified by another code sequence that is operating
        concurrently.Guidelines:::TYPE:Maintenance:NOTE:The relationship between
        race conditions and synchronization problems (CWE-662) needs to be
        further developed. They are not necessarily two perspectives of the same
        core concept, since synchronization is only one technique for avoiding
        race conditions, and synchronization can be used for other purposes
        besides race condition prevention.::TYPE:Research Gap:NOTE:Race
        conditions in web applications are under-studied and probably
        under-reported. However, in 2008 there has been growing interest in this
        area.::TYPE:Research Gap:NOTE:Much of the focus of race condition
        research has been in Time-of-check Time-of-use (TOCTOU) variants
        (CWE-367), but many race conditions are related to synchronization
        problems that do not necessarily require a time-of-check.::TYPE:Research
        Gap:NOTE:From a classification/taxonomy perspective, the relationships
        between concurrency and program state need closer investigation and may
        be useful in organizing related issues.::"
    - point: "CWE-ID: 363Race Condition Enabling Link Following"
      priority: Essential
      details: "The product checks the status of a file or directory before accessing
        it, which produces a race condition in which the file can be replaced
        with a link before the access is performed, causing the product to
        access the wrong file.Guidelines:::TYPE:Relationship:NOTE:This is
        already covered by the Link Following weakness (CWE-59). It is included
        here because so many people associate race conditions with link
        problems; however, not all link following issues involve race
        conditions.::"
    - point: "CWE-ID: 364Signal Handler Race Condition"
      priority: Essential
      details: "The product uses a signal handler that introduces a race
        condition.Guidelines:"
    - point: "CWE-ID: 366Race Condition within a Thread"
      priority: Essential
      details: "If two threads of execution use a resource simultaneously, there
        exists the possibility that resources may be used while invalid, in turn
        making the state of execution undefined.Guidelines:"
    - point: "CWE-ID: 367Time-of-check Time-of-use (TOCTOU) Race Condition"
      priority: Essential
      details: "The product checks the state of a resource before using that resource,
        but the resource's state can change between the check and the use in a
        way that invalidates the results of the check. This can cause the
        product to perform invalid actions when the resource is in an unexpected
        state.Guidelines:::TYPE:Relationship:NOTE:TOCTOU issues do not always
        involve symlinks, and not every symlink issue is a TOCTOU
        problem.::TYPE:Research Gap:NOTE:Non-symlink TOCTOU issues are not
        reported frequently, but they are likely to occur in code that attempts
        to be secure.::"
    - point: "CWE-ID: 368Context Switching Race Condition"
      priority: Essential
      details: "A product performs a series of non-atomic actions to switch between
        contexts that cross privilege or other security boundaries, but a race
        condition allows an attacker to modify or misrepresent the product's
        behavior during the switch.Guidelines:::TYPE:Relationship:NOTE:Can
        overlap signal handler race conditions.::TYPE:Research
        Gap:NOTE:Under-studied as a concept. Frequency unknown; few
        vulnerability reports give enough detail to know when a context
        switching race condition is a factor.::"
    - point: "CWE-ID: 369Divide By Zero"
      priority: Essential
      details: "The product divides a value by zero.Guidelines:"
    - point: "CWE-ID: 370Missing Check for Certificate Revocation after Initial Check"
      priority: Essential
      details: "The product does not check the revocation status of a certificate
        after its initial revocation check, which can cause the product to
        perform privileged actions even after the certificate is revoked at a
        later time.Guidelines:"
    - point: "CWE-ID: 372Incomplete Internal State Distinction"
      priority: Essential
      details: "The product does not properly determine which state it is in, causing
        it to assume it is in state X when in fact it is in state Y, causing it
        to perform incorrect operations in a security-relevant
        manner.Guidelines:::TYPE:Relationship:NOTE:This conceptually overlaps
        other categories such as insufficient verification, but this entry
        refers to the product's incorrect perception of its own
        state.::TYPE:Relationship:NOTE:This is probably resultant from other
        weaknesses such as unhandled error conditions, inability to handle
        out-of-order steps, multiple interpretation errors,
        etc.::TYPE:Maintenance:NOTE:This entry is being considered for
        deprecation. It was poorly-defined in PLOVER and is not easily described
        using the behavior/resource/property model of vulnerability theory.::"
    - point: "CWE-ID: 374Passing Mutable Objects to an Untrusted Method"
      priority: Essential
      details: "The product sends non-cloned mutable data as an argument to a method
        or function.Guidelines:"
    - point: "CWE-ID: 375Returning a Mutable Object to an Untrusted Caller"
      priority: Essential
      details: "Sending non-cloned mutable data as a return value may result in that
        data being altered or deleted by the calling function.Guidelines:"
    - point: "CWE-ID: 377Insecure Temporary File"
      priority: Essential
      details: "Creating and using insecure temporary files can leave application and
        system data vulnerable to
        attack.Guidelines:::TYPE:Other:NOTE:Applications require temporary files
        so frequently that many different mechanisms exist for creating them in
        the C Library and Windows(R) API. Most of these functions are vulnerable
        to various forms of attacks. The functions designed to aid in the
        creation of temporary files can be broken into two groups based whether
        they simply provide a filename or actually open a new file. - Group 1:
        Unique Filenames: The first group of C Library and WinAPI functions
        designed to help with the process of creating temporary files do so by
        generating a unique file name for a new temporary file, which the
        program is then supposed to open. This group includes C Library
        functions like tmpnam(), tempnam(), mktemp() and their C++ equivalents
        prefaced with an _ (underscore) as well as the GetTempFileName()
        function from the Windows API. This group of functions suffers from an
        underlying race condition on the filename chosen. Although the functions
        guarantee that the filename is unique at the time it is selected, there
        is no mechanism to prevent another process or an attacker from creating
        a file with the same name after it is selected but before the
        application attempts to open the file. Beyond the risk of a legitimate
        collision caused by another call to the same function, there is a high
        probability that an attacker will be able to create a malicious
        collision because the filenames generated by these functions are not
        sufficiently randomized to make them difficult to guess. If a file with
        the selected name is created, then depending on how the file is opened
        the existing contents or access permissions of the file may remain
        intact. If the existing contents of the file are malicious in nature, an
        attacker may be able to inject dangerous data into the application when
        it reads data back from the temporary file. If an attacker pre-creates
        the file with relaxed access permissions, then data stored in the
        temporary file by the application may be accessed, modified or corrupted
        by an attacker. On Unix based systems an even more insidious attack is
        possible if the attacker pre-creates the file as a link to another
        important file. Then, if the application truncates or writes data to the
        file, it may unwittingly perform damaging operations for the attacker.
        This is an especially serious threat if the program operates with
        elevated permissions. Finally, in the best case the file will be opened
        with the a call to open() using the O_CREAT and O_EXCL flags or to
        CreateFile() using the CREATE_NEW attribute, which will fail if the file
        already exists and therefore prevent the types of attacks described
        above. However, if an attacker is able to accurately predict a sequence
        of temporary file names, then the application may be prevented from
        opening necessary temporary storage causing a denial of service (DoS)
        attack. This type of attack would not be difficult to mount given the
        small amount of randomness used in the selection of the filenames
        generated by these functions. - Group 2: Unique Files: The second group
        of C Library functions attempts to resolve some of the security problems
        related to temporary files by not only generating a unique file name,
        but also opening the file. This group includes C Library functions like
        tmpfile() and its C++ equivalents prefaced with an _ (underscore), as
        well as the slightly better-behaved C Library function mkstemp(). The
        tmpfile() style functions construct a unique filename and open it in the
        same way that fopen() would if passed the flags wb+, that is, as a
        binary file in read/write mode. If the file already exists, tmpfile()
        will truncate it to size zero, possibly in an attempt to assuage the
        security concerns mentioned earlier regarding the race condition that
        exists between the selection of a supposedly unique filename and the
        subsequent opening of the selected file. However, this behavior clearly
        does not solve the function's security problems. First, an attacker can
        pre-create the file with relaxed access-permissions that will likely be
        retained by the file opened by tmpfile(). Furthermore, on Unix based
        systems if the attacker pre-creates the file as a link to another
        important file, the application may use its possibly elevated
        permissions to truncate that file, thereby doing damage on behalf of the
        attacker. Finally, if tmpfile() does create a new file, the access
        permissions applied to that file will vary from one operating system to
        another, which can leave application data vulnerable even if an attacker
        is unable to predict the filename to be used in advance. Finally,
        mkstemp() is a reasonably safe way create temporary files. It will
        attempt to create and open a unique file based on a filename template
        provided by the user combined with a series of randomly generated
        characters. If it is unable to create such a file, it will fail and
        return -1. On modern systems the file is opened using mode 0600, which
        means the file will be secure from tampering unless the user explicitly
        changes its access permissions. However, mkstemp() still suffers from
        the use of predictable file names and can leave an application
        vulnerable to denial of service attacks if an attacker causes mkstemp()
        to fail by predicting and pre-creating the filenames to be used.::"
    - point: "CWE-ID: 378Creation of Temporary File With Insecure Permissions"
      priority: Essential
      details: "Opening temporary files without appropriate measures or controls can
        leave the file, its contents and any function that it impacts vulnerable
        to attack.Guidelines:"
    - point: "CWE-ID: 379Creation of Temporary File in Directory with Insecure
        Permissions"
      priority: Essential
      details: "The product creates a temporary file in a directory whose permissions
        allow unintended actors to determine the file's existence or otherwise
        access that file.Guidelines:"
    - point: "CWE-ID: 382J2EE Bad Practices: Use of System.exit()"
      priority: Essential
      details: "A J2EE application uses System.exit(), which also shuts down its
        container.Guidelines:"
    - point: "CWE-ID: 383J2EE Bad Practices: Direct Use of Threads"
      priority: Essential
      details: "Thread management in a Web application is forbidden in some
        circumstances and is always highly error prone.Guidelines:"
    - point: "CWE-ID: 384Session Fixation"
      priority: Essential
      details: "Authenticating a user, or otherwise establishing a new user session,
        without invalidating any existing session identifier gives an attacker
        the opportunity to steal authenticated
        sessions.Guidelines:::TYPE:Other:NOTE:Other attack vectors include DNS
        poisoning and related network based attacks where an attacker causes the
        user to visit a malicious site by redirecting a request for a valid
        site. Network based attacks typically involve a physical presence on the
        victim's network or control of a compromised machine on the network,
        which makes them harder to exploit remotely, but their significance
        should not be overlooked. Less secure session management mechanisms,
        such as the default implementation in Apache Tomcat, allow session
        identifiers normally expected in a cookie to be specified on the URL as
        well, which enables an attacker to cause a victim to use a fixed session
        identifier simply by emailing a malicious URL.::"
    - point: "CWE-ID: 385Covert Timing Channel"
      priority: Essential
      details: "Covert timing channels convey information by modulating some aspect of
        system behavior over time, so that the program receiving the information
        can observe system behavior and infer protected
        information.Guidelines:::TYPE:Maintenance:NOTE:As of CWE 4.9, members of
        the CWE Hardware SIG are working to improve CWE's coverage of transient
        execution weaknesses, which include issues related to Spectre, Meltdown,
        and other attacks that create or exploit covert channels. As a result of
        that work, this entry might change in CWE 4.10.::"
    - point: "CWE-ID: 386Symbolic Name not Mapping to Correct Object"
      priority: Essential
      details: "A constant symbolic reference to an object is used, even though the
        reference can resolve to a different object over time.Guidelines:"
    - point: "CWE-ID: 390Detection of Error Condition Without Action"
      priority: Essential
      details: "The product detects a specific error, but takes no actions to handle
        the error.Guidelines:"
    - point: "CWE-ID: 391Unchecked Error Condition"
      priority: Essential
      details: "[PLANNED FOR DEPRECATION. SEE MAINTENANCE NOTES AND CONSIDER CWE-252,
        CWE-248, OR CWE-1069.] Ignoring exceptions and other error conditions
        may allow an attacker to induce unexpected behavior
        unnoticed.Guidelines:::TYPE:Maintenance:NOTE:This entry is slated for
        deprecation; it has multiple widespread interpretations by CWE analysts.
        It currently combines information from three different taxonomies, but
        each taxonomy is talking about a slightly different issue. CWE analysts
        might map to this entry based on any of these issues. 7PK has Empty
        Catch Block which has an association with empty exception block
        (CWE-1069); in this case, the exception has performed the check, but
        does not handle. In PLOVER there is Unchecked Return Value which is
        CWE-252, but unlike Empty Catch Block there isn't even a check of the
        issue - and Unchecked Error Condition implies lack of a check. For
        CLASP, Uncaught Exception (CWE-248) is associated with incorrect error
        propagation - uncovered in CWE 3.2 and earlier, at least. There are
        other issues related to error handling and checks.::TYPE:Other:NOTE:When
        a programmer ignores an exception, they implicitly state that they are
        operating under one of two assumptions: This method call can never fail.
        It doesn't matter if this call fails.::"
    - point: "CWE-ID: 392Missing Report of Error Condition"
      priority: Essential
      details: "The product encounters an error but does not provide a status code or
        return value to indicate that an error has occurred.Guidelines:"
    - point: "CWE-ID: 393Return of Wrong Status Code"
      priority: Essential
      details: "A function or operation returns an incorrect return value or status
        code that does not indicate an error, but causes the product to modify
        its behavior based on the incorrect
        result.Guidelines:::TYPE:Relationship:NOTE:This can be primary or
        resultant, but it is probably most often primary to other issues.::"
    - point: "CWE-ID: 394Unexpected Status Code or Return Value"
      priority: Essential
      details: "The product does not properly check when a function or operation
        returns a value that is legitimate for the function, but is not expected
        by the product.Guidelines:::TYPE:Relationship:NOTE:Usually primary, but
        can be resultant from issues such as behavioral change or API abuse.
        This can produce resultant vulnerabilities.::"
    - point: "CWE-ID: 395Use of NullPointerException Catch to Detect NULL Pointer
        Dereference"
      priority: Essential
      details: "Catching NullPointerException should not be used as an alternative to
        programmatic checks to prevent dereferencing a null pointer.Guidelines:"
    - point: "CWE-ID: 396Declaration of Catch for Generic Exception"
      priority: Essential
      details: "Catching overly broad exceptions promotes complex error handling code
        that is more likely to contain security vulnerabilities.Guidelines:"
    - point: "CWE-ID: 397Declaration of Throws for Generic Exception"
      priority: Essential
      details: "Throwing overly broad exceptions promotes complex error handling code
        that is more likely to contain security
        vulnerabilities.Guidelines:::TYPE:Applicable Platform:NOTE:For C++, this
        weakness only applies to C++98, C++03, and C++11. It relies on a feature
        known as Dynamic Exception Specification, which was part of early
        versions of C++ but was deprecated in C++11. It has been removed for
        C++17 and later.::"
    - point: "CWE-ID: 400Uncontrolled Resource Consumption"
      priority: Essential
      details: "The product does not properly control the allocation and maintenance
        of a limited resource, thereby enabling an actor to influence the amount
        of resources consumed, eventually leading to the exhaustion of available
        resources.Guidelines:::TYPE:Maintenance:NOTE:Resource consumption could
        be interpreted as a consequence instead of an insecure behavior, so this
        entry is being considered for modification. It appears to be referenced
        too frequently when more precise mappings are available. Some of its
        children, such as CWE-771, might be better considered as a
        chain.::TYPE:Theoretical:NOTE:Vulnerability theory is largely about how
        behaviors and resources interact. Resource exhaustion can be regarded as
        either a consequence or an attack, depending on the perspective. This
        entry is an attempt to reflect the underlying weaknesses that enable
        these attacks (or consequences) to take place.::TYPE:Other:NOTE:Database
        queries that take a long time to process are good DoS targets. An
        attacker would have to write a few lines of Perl code to generate enough
        traffic to exceed the site's ability to keep up. This would effectively
        prevent authorized users from using the site at all. Resources can be
        exploited simply by ensuring that the target machine must do much more
        work and consume more resources in order to service a request than the
        attacker must do to initiate a request. A prime example of this can be
        found in old switches that were vulnerable to macof attacks (so named
        for a tool developed by Dugsong). These attacks flooded a switch with
        random IP and MAC address combinations, therefore exhausting the
        switch's cache, which held the information of which port corresponded to
        which MAC addresses. Once this cache was exhausted, the switch would
        fail in an insecure way and would begin to act simply as a hub,
        broadcasting all traffic on all ports and allowing for basic sniffing
        attacks.::TYPE:Maintenance:NOTE:The Taxonomy_Mappings to ISA/IEC 62443
        were added in CWE 4.10, but they are still under review and might change
        in future CWE versions. These draft mappings were performed by members
        of the Mapping CWE to 62443 subgroup of the CWE-CAPEC ICS/OT Special
        Interest Group (SIG), and their work is incomplete as of CWE 4.10. The
        mappings are included to facilitate discussion and review by the broader
        ICS/OT community, and they are likely to change in future CWE
        versions.::"
    - point: "CWE-ID: 401Missing Release of Memory after Effective Lifetime"
      priority: Essential
      details: "The product does not sufficiently track and release allocated memory
        after it has been used, which slowly consumes remaining
        memory.Guidelines:::TYPE:Relationship:NOTE:This is often a resultant
        weakness due to improper handling of malformed data or early termination
        of sessions.::TYPE:Terminology:NOTE:memory leak has sometimes been used
        to describe other kinds of issues, e.g. for information leaks in which
        the contents of memory are inadvertently leaked (CVE-2003-0400 is one
        such example of this terminology conflict).::"
    - point: "CWE-ID: 402Transmission of Private Resources into a New Sphere
        ('Resource Leak')"
      priority: Essential
      details: "The product makes resources available to untrusted parties when those
        resources are only intended to be accessed by the product.Guidelines:"
    - point: "CWE-ID: 403Exposure of File Descriptor to Unintended Control Sphere
        ('File Descriptor Leak')"
      priority: Essential
      details: "A process does not close sensitive file descriptors before invoking a
        child process, which allows the child to perform unauthorized I/O
        operations using those descriptors.Guidelines:"
    - point: "CWE-ID: 404Improper Resource Shutdown or Release"
      priority: Essential
      details: "The product does not release or incorrectly releases a resource before
        it is made available for
        re-use.Guidelines:::TYPE:Relationship:NOTE:Overlaps memory leaks,
        asymmetric resource consumption, malformed input errors.::"
    - point: "CWE-ID: 405Asymmetric Resource Consumption (Amplification)"
      priority: Essential
      details: "The product does not properly control situations in which an adversary
        can cause the product to consume or produce excessive resources without
        requiring the adversary to invest equivalent work or otherwise prove
        authorization, i.e., the adversary's influence is
        asymmetric.Guidelines:"
    - point: "CWE-ID: 406Insufficient Control of Network Message Volume (Network
        Amplification)"
      priority: Essential
      details: "The product does not sufficiently monitor or control transmitted
        network traffic volume, so that an actor can cause the product to
        transmit more traffic than should be allowed for that
        actor.Guidelines:::TYPE:Relationship:NOTE:This can be resultant from
        weaknesses that simplify spoofing
        attacks.::TYPE:Theoretical:NOTE:Network amplification, when performed
        with spoofing, is normally a multi-channel attack from attacker (acting
        as user) to amplifier, and amplifier to victim.::"
    - point: "CWE-ID: 407Inefficient Algorithmic Complexity"
      priority: Essential
      details: "An algorithm in a product has an inefficient worst-case computational
        complexity that may be detrimental to system performance and can be
        triggered by an attacker, typically using crafted manipulations that
        ensure that the worst case is being reached.Guidelines:"
    - point: "CWE-ID: 408Incorrect Behavior Order: Early Amplification"
      priority: Essential
      details: "The product allows an entity to perform a legitimate but expensive
        operation before authentication or authorization has taken
        place.Guidelines:::TYPE:Relationship:NOTE:Overlaps authentication
        errors.::"
    - point: "CWE-ID: 409Improper Handling of Highly Compressed Data (Data
        Amplification)"
      priority: Essential
      details: "The product does not handle or incorrectly handles a compressed input
        with a very high compression ratio that produces a large
        output.Guidelines:"
    - point: "CWE-ID: 410Insufficient Resource Pool"
      priority: Essential
      details: "The product's resource pool is not large enough to handle peak demand,
        which allows an attacker to prevent others from accessing the resource
        by using a (relatively) large number of requests for
        resources.Guidelines:"
    - point: "CWE-ID: 412Unrestricted Externally Accessible Lock"
      priority: Essential
      details: "The product properly checks for the existence of a lock, but the lock
        can be externally controlled or influenced by an actor that is outside
        of the intended sphere of
        control.Guidelines:::TYPE:Relationship:NOTE:This overlaps Insufficient
        Resource Pool when the pool is of size 1. It can also be resultant from
        race conditions, although the timing window could be quite large in some
        cases.::"
    - point: "CWE-ID: 413Improper Resource Locking"
      priority: Essential
      details: "The product does not lock or does not correctly lock a resource when
        the product must have exclusive access to the resource.Guidelines:"
    - point: "CWE-ID: 414Missing Lock Check"
      priority: Essential
      details: "A product does not check to see if a lock is present before performing
        sensitive operations on a resource.Guidelines:"
    - point: "CWE-ID: 415Double Free"
      priority: Essential
      details: "The product calls free() twice on the same memory address, potentially
        leading to modification of unexpected memory
        locations.Guidelines:::TYPE:Relationship:NOTE:This is usually resultant
        from another weakness, such as an unhandled error or race condition
        between threads. It could also be primary to weaknesses such as buffer
        overflows.::TYPE:Theoretical:NOTE:It could be argued that Double Free
        would be most appropriately located as a child of Use after Free, but
        Use and Release are considered to be distinct operations within
        vulnerability theory, therefore this is more accurately Release of a
        Resource after Expiration or Release, which doesn't exist yet.::"
    - point: "CWE-ID: 416Use After Free"
      priority: Essential
      details: "Referencing memory after it has been freed can cause a program to
        crash, use unexpected values, or execute code.Guidelines:"
    - point: "CWE-ID: 419Unprotected Primary Channel"
      priority: Essential
      details: "The product uses a primary channel for administration or restricted
        functionality, but it does not properly protect the channel.Guidelines:"
    - point: "CWE-ID: 420Unprotected Alternate Channel"
      priority: Essential
      details: "The product protects a primary channel, but it does not use the same
        level of protection for an alternate
        channel.Guidelines:::TYPE:Relationship:NOTE:This can be primary to
        authentication errors, and resultant from unhandled error conditions.::"
    - point: "CWE-ID: 421Race Condition During Access to Alternate Channel"
      priority: Essential
      details: "The product opens an alternate channel to communicate with an
        authorized user, but the channel is accessible to other
        actors.Guidelines:"
    - point: "CWE-ID: 422Unprotected Windows Messaging Channel ('Shatter')"
      priority: Essential
      details: "The product does not properly verify the source of a message in the
        Windows Messaging System while running at elevated privileges, creating
        an alternate channel through which an attacker can directly send a
        message to the product.Guidelines:::TYPE:Relationship:NOTE:Overlaps
        privilege errors and UI errors.::TYPE:Research Gap:NOTE:Possibly
        under-reported, probably under-studied. It is suspected that a number of
        publicized vulnerabilities that involve local privilege escalation on
        Windows systems may be related to Shatter attacks, but they are not
        labeled as such. Alternate channel attacks likely exist in other
        operating systems and messaging models, e.g. in privileged X Windows
        applications, but examples are not readily available.::"
    - point: "CWE-ID: 424Improper Protection of Alternate Path"
      priority: Essential
      details: "The product does not sufficiently protect all possible paths that a
        user can take to access restricted functionality or
        resources.Guidelines:"
    - point: "CWE-ID: 425Direct Request ('Forced Browsing')"
      priority: Essential
      details: "The web application does not adequately enforce appropriate
        authorization on all restricted URLs, scripts, or
        files.Guidelines:::TYPE:Relationship:NOTE:Overlaps Modification of
        Assumed-Immutable Data (MAID), authorization errors, container errors;
        often primary to other weaknesses such as XSS and SQL
        injection.::TYPE:Theoretical:NOTE:Forced browsing is a step-based
        manipulation involving the omission of one or more steps, whose order is
        assumed to be immutable. The application does not verify that the first
        step was performed successfully before the second step. The consequence
        is typically authentication bypass or path disclosure, although it can
        be primary to all kinds of weaknesses, especially in languages such as
        PHP, which allow external modification of assumed-immutable
        variables.::"
    - point: "CWE-ID: 426Untrusted Search Path"
      priority: Essential
      details: "The product searches for critical resources using an
        externally-supplied search path that can point to resources that are not
        under the product's direct control.Guidelines:"
    - point: "CWE-ID: 427Uncontrolled Search Path Element"
      priority: Essential
      details: "The product uses a fixed or controlled search path to find resources,
        but one or more locations in that path can be under the control of
        unintended actors.Guidelines:::TYPE:Relationship:NOTE:Unlike untrusted
        search path (CWE-426), which inherently involves control over the
        definition of a control sphere (i.e., modification of a search path),
        this entry concerns a fixed control sphere in which some part of the
        sphere may be under attacker control (i.e., the search path cannot be
        modified by an attacker, but one element of the path can be under
        attacker control).::TYPE:Theoretical:NOTE:This weakness is not a clean
        fit under CWE-668 or CWE-610, which suggests that the control sphere
        model might need enhancement or clarification.::"
    - point: "CWE-ID: 428Unquoted Search Path or Element"
      priority: Essential
      details: "The product uses a search path that contains an unquoted element, in
        which the element contains whitespace or other separators. This can
        cause the product to access resources in a parent
        path.Guidelines:::TYPE:Applicable Platform:NOTE:This weakness could
        apply to any OS that supports spaces in filenames, especially any OS
        that make it easy for a user to insert spaces into filenames or folders,
        such as Windows. While spaces are technically supported in Unix, the
        practice is generally avoided. .::TYPE:Maintenance:NOTE:This weakness
        primarily involves the lack of quoting, which is not explicitly stated
        as a part of CWE-116. CWE-116 also describes output in light of
        structured messages, but the generation of a filename or search path (as
        in this weakness) might not be considered a structured message. An
        additional complication is the relationship to control spheres. Unlike
        untrusted search path (CWE-426), which inherently involves control over
        the definition of a control sphere, this entry concerns a fixed control
        sphere in which some part of the sphere may be under attacker control.
        This is not a clean fit under CWE-668 or CWE-610, which suggests that
        the control sphere model needs enhancement or clarification.::"
    - point: "CWE-ID: 430Deployment of Wrong Handler"
      priority: Essential
      details: "The wrong handler is assigned to process an object.Guidelines:"
    - point: "CWE-ID: 431Missing Handler"
      priority: Essential
      details: "A handler is not available or implemented.Guidelines:"
    - point: "CWE-ID: 432Dangerous Signal Handler not Disabled During Sensitive
        Operations"
      priority: Essential
      details: "The product uses a signal handler that shares state with other signal
        handlers, but it does not properly mask or prevent those signal handlers
        from being invoked while the original signal handler is still
        running.Guidelines:"
    - point: "CWE-ID: 433Unparsed Raw Web Content Delivery"
      priority: Essential
      details: "The product stores raw content or supporting code under the web
        document root with an extension that is not specifically handled by the
        server.Guidelines:::TYPE:Relationship:NOTE:This overlaps direct requests
        (CWE-425), alternate path (CWE-424), permissions (CWE-275), and
        sensitive file under web root (CWE-219).::"
    - point: "CWE-ID: 434Unrestricted Upload of File with Dangerous Type"
      priority: Essential
      details: "The product allows the attacker to upload or transfer files of
        dangerous types that can be automatically processed within the product's
        environment.Guidelines:::TYPE:Relationship:NOTE:This can have a chaining
        relationship with incomplete denylist / permissive allowlist errors when
        the product tries, but fails, to properly limit which types of files are
        allowed (CWE-183, CWE-184). This can also overlap multiple
        interpretation errors for intermediaries, e.g. anti-virus products that
        do not remove or quarantine attachments with certain file extensions
        that can be processed by client systems.::"
    - point: "CWE-ID: 435Improper Interaction Between Multiple Correctly-Behaving
        Entities"
      priority: Essential
      details: "An interaction error occurs when two entities have correct behavior
        when running independently of each other, but when they are integrated
        as components in a larger system or process, they introduce incorrect
        behaviors that may cause resultant weaknesses.Guidelines:::TYPE:Research
        Gap:NOTE:Weaknesses related to this Pillar appear to be under-studied,
        especially with respect to classification schemes. Input from academic
        and other communities could help identify and resolve gaps or
        organizational difficulties within CWE.::TYPE:Relationship:NOTE:The
        Interaction Error term, in CWE and elsewhere, is only intended to
        describe products that behave according to specification. When one or
        more of the products do not comply with specifications, then it is more
        likely to be API Abuse (CWE-227) or an interpretation conflict
        (CWE-436). This distinction can be blurred in real world scenarios,
        especially when de facto standards do not comply with specifications, or
        when there are no standards but there is widespread adoption. As a
        result, it can be difficult to distinguish these weaknesses during
        mapping and classification.::"
    - point: "CWE-ID: 436Interpretation Conflict"
      priority: Essential
      details: "Product A handles inputs or steps differently than Product B, which
        causes A to perform incorrect actions based on its perception of B's
        state.Guidelines:"
    - point: "CWE-ID: 437Incomplete Model of Endpoint Features"
      priority: Essential
      details: "A product acts as an intermediary or monitor between two or more
        endpoints, but it does not have a complete model of an endpoint's
        features, behaviors, or state, potentially causing the product to
        perform incorrect actions based on this incomplete
        model.Guidelines:::TYPE:Relationship:NOTE:This can be related to
        interaction errors, although in some cases, one of the endpoints is not
        performing correctly according to specification.::"
    - point: "CWE-ID: 439Behavioral Change in New Version or Environment"
      priority: Essential
      details: "A's behavior or functionality changes with a new version of A, or a
        new environment, which is not known (or manageable) by B.Guidelines:"
    - point: "CWE-ID: 440Expected Behavior Violation"
      priority: Essential
      details: "A feature, API, or function does not perform according to its
        specification.Guidelines:::TYPE:Theoretical:NOTE:The behavior of an
        application that is not consistent with the expectations of the
        developer may lead to incorrect use of the software.::"
    - point: "CWE-ID: 441Unintended Proxy or Intermediary ('Confused Deputy')"
      priority: Essential
      details: "The product receives a request, message, or directive from an upstream
        component, but the product does not sufficiently preserve the original
        source of the request before forwarding the request to an external actor
        that is outside of the product's control sphere. This causes the product
        to appear to be the source of the request, leading it to act as a proxy
        or other intermediary between the upstream component and the external
        actor.Guidelines:::TYPE:Relationship:NOTE:This weakness has a chaining
        relationship with CWE-668 (Exposure of Resource to Wrong Sphere) because
        the proxy effectively provides the attacker with access to the target's
        resources that the attacker cannot directly
        obtain.::TYPE:Maintenance:NOTE:This could possibly be considered as an
        emergent resource.::TYPE:Theoretical:NOTE:It could be argued that the
        confused deputy is a fundamental aspect of most vulnerabilities that
        require an active attacker. Even for common implementation issues such
        as buffer overflows, SQL injection, OS command injection, and path
        traversal, the vulnerable program already has the authorization to run
        code or access files. The vulnerability arises when the attacker causes
        the program to run unexpected code or access unexpected files.::"
    - point: "CWE-ID: 444Inconsistent Interpretation of HTTP Requests ('HTTP
        Request/Response Smuggling')"
      priority: Essential
      details: "The product acts as an intermediary HTTP agent (such as a proxy or
        firewall) in the data flow between two entities such as a client and
        server, but it does not interpret malformed HTTP requests or responses
        in ways that are consistent with how the messages will be processed by
        those entities that are at the ultimate
        destination.Guidelines:::TYPE:Theoretical:NOTE:Request smuggling can be
        performed due to a multiple interpretation error, where the target is an
        intermediary or monitor, via a consistency manipulation
        (Transfer-Encoding and Content-Length headers).::"
    - point: "CWE-ID: 446UI Discrepancy for Security Feature"
      priority: Essential
      details: "The user interface does not correctly enable or configure a security
        feature, but the interface provides feedback that causes the user to
        believe that the feature is in a secure
        state.Guidelines:::TYPE:Maintenance:NOTE:This entry is likely a loose
        composite that could be broken down into the different types of errors
        that cause the user interface to have incorrect interactions with the
        underlying security feature.::"
    - point: "CWE-ID: 447Unimplemented or Unsupported Feature in UI"
      priority: Essential
      details: "A UI function for a security feature appears to be supported and gives
        feedback to the user that suggests that it is supported, but the
        underlying functionality is not implemented.Guidelines:::TYPE:Research
        Gap:NOTE:This issue needs more study, as there are not many examples. It
        is not clear whether it is primary or resultant.::"
    - point: "CWE-ID: 448Obsolete Feature in UI"
      priority: Essential
      details: "A UI function is obsolete and the product does not warn the
        user.Guidelines:"
    - point: "CWE-ID: 449The UI Performs the Wrong Action"
      priority: Essential
      details: "The UI performs the wrong action with respect to the user's
        request.Guidelines:"
    - point: "CWE-ID: 450Multiple Interpretations of UI Input"
      priority: Essential
      details: "The UI has multiple interpretations of user input but does not prompt
        the user when it selects the less secure interpretation.Guidelines:"
    - point: "CWE-ID: 451User Interface (UI) Misrepresentation of Critical
        Information"
      priority: Essential
      details: "The user interface (UI) does not properly represent critical
        information to the user, allowing the information - or its source - to
        be obscured or spoofed. This is often a component in phishing
        attacks.Guidelines:::TYPE:Maintenance:NOTE:This entry should be broken
        down into more precise entries. See extended description.::TYPE:Research
        Gap:NOTE:Misrepresentation problems are frequently studied in web
        browsers, but there are no known efforts for classifying these kinds of
        problems in terms of the shortcomings of the interface. In addition,
        many misrepresentation issues are resultant.::"
    - point: "CWE-ID: 453Insecure Default Variable Initialization"
      priority: Essential
      details: "The product, by default, initializes an internal variable with an
        insecure or less secure value than is
        possible.Guidelines:::TYPE:Maintenance:NOTE:This overlaps other
        categories, probably should be split into separate items.::"
    - point: "CWE-ID: 454External Initialization of Trusted Variables or Data Stores"
      priority: Essential
      details: "The product initializes critical internal variables or data stores
        using inputs that can be modified by untrusted
        actors.Guidelines:::TYPE:Relationship:NOTE:Overlaps Missing variable
        initialization, especially in PHP.::TYPE:Applicable Platform:NOTE:This
        is often found in PHP due to register_globals and the common practice of
        storing library/include files under the web document root so that they
        are available using a direct request.::"
    - point: "CWE-ID: 455Non-exit on Failed Initialization"
      priority: Essential
      details: "The product does not exit or otherwise modify its operation when
        security-relevant errors occur during initialization, such as when a
        configuration file has a format error or a hardware security module
        (HSM) cannot be activated, which can cause the product to execute in a
        less secure fashion than intended by the
        administrator.Guidelines:::TYPE:Research Gap:NOTE:Under-studied. These
        issues are not frequently reported, and it is difficult to find
        published examples.::"
    - point: "CWE-ID: 456Missing Initialization of a Variable"
      priority: Essential
      details: "The product does not initialize critical variables, which causes the
        execution environment to use unexpected
        values.Guidelines:::TYPE:Relationship:NOTE:This weakness is a major
        factor in a number of resultant weaknesses, especially in web
        applications that allow global variable initialization (such as PHP)
        with libraries that can be directly requested.::TYPE:Research
        Gap:NOTE:It is highly likely that a large number of resultant weaknesses
        have missing initialization as a primary factor, but researcher reports
        generally do not provide this level of detail.::"
    - point: "CWE-ID: 457Use of Uninitialized Variable"
      priority: Essential
      details: "The code uses a variable that has not been initialized, leading to
        unpredictable or unintended results.Guidelines:"
    - point: "CWE-ID: 459Incomplete Cleanup"
      priority: Essential
      details: "The product does not properly clean up and remove temporary or
        supporting resources after they have been
        used.Guidelines:::TYPE:Relationship:NOTE:CWE-459 is a child of CWE-404
        because, while CWE-404 covers any type of improper shutdown or release
        of a resource, CWE-459 deals specifically with a multi-step shutdown
        process in which a crucial step for proper cleanup is omitted or
        impossible. That is, CWE-459 deals specifically with a cleanup or
        shutdown process that does not successfully remove all potentially
        sensitive data.::TYPE:Relationship:NOTE:Overlaps other categories such
        as permissions and containment. Concept needs further development. This
        could be primary (e.g. leading to infoleak) or resultant (e.g. resulting
        from unhandled error conditions or early termination).::"
    - point: "CWE-ID: 460Improper Cleanup on Thrown Exception"
      priority: Essential
      details: "The product does not clean up its state or incorrectly cleans up its
        state when an exception is thrown, leading to unexpected state or
        control flow.Guidelines:"
    - point: "CWE-ID: 462Duplicate Key in Associative List (Alist)"
      priority: Essential
      details: "Duplicate keys in associative lists can lead to non-unique keys being
        mistaken for an error.Guidelines:"
    - point: "CWE-ID: 463Deletion of Data Structure Sentinel"
      priority: Essential
      details: "The accidental deletion of a data-structure sentinel can cause serious
        programming logic problems.Guidelines:"
    - point: "CWE-ID: 464Addition of Data Structure Sentinel"
      priority: Essential
      details: "The accidental addition of a data-structure sentinel can cause serious
        programming logic problems.Guidelines:"
    - point: "CWE-ID: 466Return of Pointer Value Outside of Expected Range"
      priority: Essential
      details: "A function can return a pointer to memory that is outside of the
        buffer that the pointer is expected to
        reference.Guidelines:::TYPE:Maintenance:NOTE:This entry should have a
        chaining relationship with CWE-119 instead of a parent / child
        relationship, however the focus of this weakness does not map cleanly to
        any existing entries in CWE. A new parent is being considered which
        covers the more generic problem of incorrect return values. There is
        also an abstract relationship to weaknesses in which one component sends
        incorrect messages to another component; in this case, one routine is
        sending an incorrect value to another.::"
    - point: "CWE-ID: 467Use of sizeof() on a Pointer Type"
      priority: Essential
      details: "The code calls sizeof() on a malloced pointer type, which always
        returns the wordsize/8. This can produce an unexpected result if the
        programmer intended to determine how much memory has been
        allocated.Guidelines:"
    - point: "CWE-ID: 468Incorrect Pointer Scaling"
      priority: Essential
      details: "In C and C++, one may often accidentally refer to the wrong memory due
        to the semantics of when math operations are implicitly
        scaled.Guidelines:"
    - point: "CWE-ID: 469Use of Pointer Subtraction to Determine Size"
      priority: Essential
      details: "The product subtracts one pointer from another in order to determine
        size, but this calculation can be incorrect if the pointers do not exist
        in the same memory chunk.Guidelines:"
    - point: "CWE-ID: 470Use of Externally-Controlled Input to Select Classes or Code
        ('Unsafe Reflection')"
      priority: Essential
      details: "The product uses external input with reflection to select which
        classes or code to use, but it does not sufficiently prevent the input
        from selecting improper classes or code.Guidelines:"
    - point: "CWE-ID: 471Modification of Assumed-Immutable Data (MAID)"
      priority: Essential
      details: "The product does not properly protect an assumed-immutable element
        from being modified by an
        attacker.Guidelines:::TYPE:Relationship:NOTE:MAID issues can be primary
        to many other weaknesses, and they are a major factor in languages that
        provide easy access to internal program constructs, such as PHP's
        register_globals and similar features. However, MAID issues can also be
        resultant from weaknesses that modify internal state; for example, a
        program might validate some data and store it in memory, but a buffer
        overflow could overwrite that validated data, leading to a change in
        program logic.::TYPE:Theoretical:NOTE:There are many examples where the
        MUTABILITY property is a major factor in a vulnerability.::"
    - point: "CWE-ID: 472External Control of Assumed-Immutable Web Parameter"
      priority: Essential
      details: "The web application does not sufficiently verify inputs that are
        assumed to be immutable but are actually externally controllable, such
        as hidden form fields.Guidelines:::TYPE:Relationship:NOTE:This is a
        primary weakness for many other weaknesses and functional consequences,
        including XSS, SQL injection, path disclosure, and file
        inclusion.::TYPE:Theoretical:NOTE:This is a technology-specific MAID
        problem.::"
    - point: "CWE-ID: 473PHP External Variable Modification"
      priority: Essential
      details: "A PHP application does not properly protect against the modification
        of variables from external sources, such as query parameters or cookies.
        This can expose the application to numerous weaknesses that would not
        exist otherwise.Guidelines:::TYPE:Relationship:NOTE:This is a
        language-specific instance of Modification of Assumed-Immutable Data
        (MAID). This can be resultant from direct request (alternate path)
        issues. It can be primary to weaknesses such as PHP file inclusion, SQL
        injection, XSS, authentication bypass, and others.::"
    - point: "CWE-ID: 474Use of Function with Inconsistent Implementations"
      priority: Essential
      details: "The code uses a function that has inconsistent implementations across
        operating systems and versions.Guidelines:"
    - point: "CWE-ID: 475Undefined Behavior for Input to API"
      priority: Essential
      details: "The behavior of this function is undefined unless its control
        parameter is set to a specific value.Guidelines:::TYPE:Other:NOTE:The
        Linux Standard Base Specification 2.0.1 for libc places constraints on
        the arguments to some internal functions [21]. If the constraints are
        not met, the behavior of the functions is not defined. It is unusual for
        this function to be called directly. It is almost always invoked through
        a macro defined in a system header file, and the macro ensures that the
        following constraints are met: The value 1 must be passed to the third
        parameter (the version number) of the following file system function:
        __xmknod The value 2 must be passed to the third parameter (the group
        argument) of the following wide character string functions:
        __wcstod_internal __wcstof_internal __wcstol_internal __wcstold_internal
        __wcstoul_internal The value 3 must be passed as the first parameter
        (the version number) of the following file system functions: __xstat
        __lxstat __fxstat __xstat64 __lxstat64 __fxstat64::"
    - point: "CWE-ID: 476NULL Pointer Dereference"
      priority: Essential
      details: "A NULL pointer dereference occurs when the application dereferences a
        pointer that it expects to be valid, but is NULL, typically causing a
        crash or exit.Guidelines:"
    - point: "CWE-ID: 477Use of Obsolete Function"
      priority: Essential
      details: "The code uses deprecated or obsolete functions, which suggests that
        the code has not been actively reviewed or maintained.Guidelines:"
    - point: "CWE-ID: 478Missing Default Case in Multiple Condition Expression"
      priority: Essential
      details: "The code does not have a default case in an expression with multiple
        conditions, such as a switch statement.Guidelines:"
    - point: "CWE-ID: 479Signal Handler Use of a Non-reentrant Function"
      priority: Essential
      details: "The product defines a signal handler that calls a non-reentrant
        function.Guidelines:"
    - point: "CWE-ID: 480Use of Incorrect Operator"
      priority: Essential
      details: "The product accidentally uses the wrong operator, which changes the
        logic in security-relevant ways.Guidelines:"
    - point: "CWE-ID: 481Assigning instead of Comparing"
      priority: Essential
      details: "The code uses an operator for assignment when the intention was to
        perform a comparison.Guidelines:"
    - point: "CWE-ID: 482Comparing instead of Assigning"
      priority: Essential
      details: "The code uses an operator for comparison when the intention was to
        perform an assignment.Guidelines:"
    - point: "CWE-ID: 483Incorrect Block Delimitation"
      priority: Essential
      details: "The code does not explicitly delimit a block that is intended to
        contain 2 or more statements, creating a logic error.Guidelines:"
    - point: "CWE-ID: 484Omitted Break Statement in Switch"
      priority: Essential
      details: "The product omits a break statement within a switch or similar
        construct, causing code associated with multiple conditions to execute.
        This can cause problems when the programmer only intended to execute
        code associated with one condition.Guidelines:"
    - point: "CWE-ID: 486Comparison of Classes by Name"
      priority: Essential
      details: "The product compares classes by name, which can cause it to use the
        wrong class when multiple classes can have the same name.Guidelines:"
    - point: "CWE-ID: 487Reliance on Package-level Scope"
      priority: Essential
      details: "Java packages are not inherently closed; therefore, relying on them
        for code security is not a good practice.Guidelines:"
    - point: "CWE-ID: 488Exposure of Data Element to Wrong Session"
      priority: Essential
      details: "The product does not sufficiently enforce boundaries between the
        states of different sessions, causing data to be provided to, or used
        by, the wrong session.Guidelines:"
    - point: "CWE-ID: 489Active Debug Code"
      priority: Essential
      details: "The product is deployed to unauthorized actors with debugging code
        still enabled or active, which can create unintended entry points or
        expose sensitive information.Guidelines:::TYPE:Other:NOTE:In J2EE a main
        method may be a good indicator that debug code has been left in the
        application, although there may not be any direct security impact.::"
    - point: "CWE-ID: 491Public cloneable() Method Without Final ('Object Hijack')"
      priority: Essential
      details: "A class has a cloneable() method that is not declared final, which
        allows an object to be created without calling the constructor. This can
        cause the object to be in an unexpected state.Guidelines:"
    - point: "CWE-ID: 492Use of Inner Class Containing Sensitive Data"
      priority: Essential
      details: "Inner classes are translated into classes that are accessible at
        package scope and may expose code that the programmer intended to keep
        private to attackers.Guidelines:::TYPE:Other:NOTE:Mobile code, in this
        case a Java Applet, is code that is transmitted across a network and
        executed on a remote machine. Because mobile code developers have little
        if any control of the environment in which their code will execute,
        special security concerns become relevant. One of the biggest
        environmental threats results from the risk that the mobile code will
        run side-by-side with other, potentially malicious, mobile code. Because
        all of the popular web browsers execute code from multiple sources
        together in the same JVM, many of the security guidelines for mobile
        code are focused on preventing manipulation of your objects' state and
        behavior by adversaries who have access to the same virtual machine
        where your program is running.::"
    - point: "CWE-ID: 493Critical Public Variable Without Final Modifier"
      priority: Essential
      details: "The product has a critical public variable that is not final, which
        allows the variable to be modified to contain unexpected
        values.Guidelines:"
    - point: "CWE-ID: 494Download of Code Without Integrity Check"
      priority: Essential
      details: "The product downloads source code or an executable from a remote
        location and executes the code without sufficiently verifying the origin
        and integrity of the code.Guidelines:::TYPE:Research Gap:NOTE:This is
        critical for mobile code, but it is likely to become more and more
        common as developers continue to adopt automated, network-based product
        distributions and upgrades. Software-as-a-Service (SaaS) might introduce
        additional subtleties. Common exploitation scenarios may include ad
        server compromises and bad upgrades.::"
    - point: "CWE-ID: 495Private Data Structure Returned From A Public Method"
      priority: Essential
      details: "The product has a method that is declared public, but returns a
        reference to a private data structure, which could then be modified in
        unexpected ways.Guidelines:"
    - point: "CWE-ID: 496Public Data Assigned to Private Array-Typed Field"
      priority: Essential
      details: "Assigning public data to a private array is equivalent to giving
        public access to the array.Guidelines:"
    - point: "CWE-ID: 497Exposure of Sensitive System Information to an Unauthorized
        Control Sphere"
      priority: Essential
      details: "The product does not properly prevent sensitive system-level
        information from being accessed by unauthorized actors who do not have
        the same level of access to the underlying system as the product
        does.Guidelines:"
    - point: "CWE-ID: 498Cloneable Class Containing Sensitive Information"
      priority: Essential
      details: "The code contains a class with sensitive data, but the class is
        cloneable. The data can then be accessed by cloning the
        class.Guidelines:"
    - point: "CWE-ID: 499Serializable Class Containing Sensitive Data"
      priority: Essential
      details: "The code contains a class with sensitive data, but the class does not
        explicitly deny serialization. The data can be accessed by serializing
        the class through another class.Guidelines:"
    - point: "CWE-ID: 500Public Static Field Not Marked Final"
      priority: Essential
      details: "An object contains a public static field that is not marked final,
        which might allow it to be modified in unexpected ways.Guidelines:"
    - point: "CWE-ID: 501Trust Boundary Violation"
      priority: Essential
      details: "The product mixes trusted and untrusted data in the same data
        structure or structured message.Guidelines:"
    - point: "CWE-ID: 502Deserialization of Untrusted Data"
      priority: Essential
      details: "The product deserializes untrusted data without sufficiently verifying
        that the resulting data will be
        valid.Guidelines:::TYPE:Maintenance:NOTE:The relationships between
        CWE-502 and CWE-915 need further exploration. CWE-915 is more narrowly
        scoped to object modification, and is not necessarily used for
        deserialization.::"
    - point: "CWE-ID: 506Embedded Malicious Code"
      priority: Essential
      details: "The product contains code that appears to be malicious in
        nature.Guidelines:::TYPE:Terminology:NOTE:The term Trojan horse was
        introduced by Dan Edwards and recorded by James Anderson [18] to
        characterize a particular computer security threat; it has been
        redefined many times [4,18-20].::"
    - point: "CWE-ID: 507Trojan Horse"
      priority: Essential
      details: "The product appears to contain benign or useful functionality, but it
        also contains code that is hidden from normal operation that violates
        the intended security policy of the user or the system
        administrator.Guidelines:::TYPE:Other:NOTE:Potentially malicious dynamic
        code compiled at runtime can conceal any number of attacks that will not
        appear in the baseline. The use of dynamically compiled code could also
        allow the injection of attacks on post-deployed
        applications.::TYPE:Terminology:NOTE:Definitions of Trojan horse and
        related terms have varied widely over the years, but common usage in
        2008 generally refers to software that performs a legitimate function,
        but also contains malicious code. Almost any malicious code can be
        called a Trojan horse, since the author of malicious code needs to
        disguise it somehow so that it will be invoked by a nonmalicious user
        (unless the author means also to invoke the code, in which case they
        presumably already possess the authorization to perform the intended
        sabotage). A Trojan horse that replicates itself by copying its code
        into other program files (see case MA1) is commonly referred to as a
        virus. One that replicates itself by creating new processes or files to
        contain its code, instead of modifying existing storage entities, is
        often called a worm. Denning provides a general discussion of these
        terms; differences of opinion about the term applicable to a particular
        flaw or its exploitations sometimes occur.::"
    - point: "CWE-ID: 508Non-Replicating Malicious Code"
      priority: Essential
      details: "Non-replicating malicious code only resides on the target system or
        product that is attacked; it does not attempt to spread to other
        systems.Guidelines:"
    - point: "CWE-ID: 509Replicating Malicious Code (Virus or Worm)"
      priority: Essential
      details: "Replicating malicious code, including viruses and worms, will attempt
        to attack other systems once it has successfully compromised the target
        system or the product.Guidelines:"
    - point: "CWE-ID: 510Trapdoor"
      priority: Essential
      details: "A trapdoor is a hidden piece of code that responds to a special input,
        allowing its user access to resources without passing through the normal
        security enforcement mechanism.Guidelines:"
    - point: "CWE-ID: 511Logic/Time Bomb"
      priority: Essential
      details: "The product contains code that is designed to disrupt the legitimate
        operation of the product (or its environment) when a certain time
        passes, or when a certain logical condition is met.Guidelines:"
    - point: "CWE-ID: 512Spyware"
      priority: Essential
      details: "The product collects personally identifiable information about a human
        user or the user's activities, but the product accesses this information
        using other resources besides itself, and it does not require that
        user's explicit approval or direct input into the product.Guidelines:"
    - point: "CWE-ID: 514Covert Channel"
      priority: Essential
      details: "A covert channel is a path that can be used to transfer information in
        a way not intended by the system's
        designers.Guidelines:::TYPE:Theoretical:NOTE:A covert channel can be
        thought of as an emergent resource, meaning that it was not an
        originally intended resource, however it exists due the application's
        behaviors.::TYPE:Maintenance:NOTE:As of CWE 4.9, members of the CWE
        Hardware SIG are working to improve CWE's coverage of transient
        execution weaknesses, which include issues related to Spectre, Meltdown,
        and other attacks that create or exploit covert channels. As a result of
        that work, this entry might change in CWE 4.10.::"
    - point: "CWE-ID: 515Covert Storage Channel"
      priority: Essential
      details: "A covert storage channel transfers information through the setting of
        bits by one program and the reading of those bits by another. What
        distinguishes this case from that of ordinary operation is that the bits
        are used to convey encoded
        information.Guidelines:::TYPE:Maintenance:NOTE:As of CWE 4.9, members of
        the CWE Hardware SIG are working to improve CWE's coverage of transient
        execution weaknesses, which include issues related to Spectre, Meltdown,
        and other attacks that create or exploit covert channels. As a result of
        that work, this entry might change in CWE 4.10.::"
    - point: "CWE-ID: 520.NET Misconfiguration: Use of Impersonation"
      priority: Essential
      details: "Allowing a .NET application to run at potentially escalated levels of
        access to the underlying operating and file systems can be dangerous and
        result in various forms of attacks.Guidelines:"
    - point: "CWE-ID: 521Weak Password Requirements"
      priority: Essential
      details: "The product does not require that users should have strong passwords,
        which makes it easier for attackers to compromise user
        accounts.Guidelines:"
    - point: "CWE-ID: 522Insufficiently Protected Credentials"
      priority: Essential
      details: "The product transmits or stores authentication credentials, but it
        uses an insecure method that is susceptible to unauthorized interception
        and/or retrieval.Guidelines:"
    - point: "CWE-ID: 523Unprotected Transport of Credentials"
      priority: Essential
      details: "Login pages do not use adequate measures to protect the user name and
        password while they are in transit from the client to the
        server.Guidelines:"
    - point: "CWE-ID: 524Use of Cache Containing Sensitive Information"
      priority: Essential
      details: "The code uses a cache that contains sensitive information, but the
        cache can be read by an actor outside of the intended control
        sphere.Guidelines:"
    - point: "CWE-ID: 525Use of Web Browser Cache Containing Sensitive Information"
      priority: Essential
      details: "The web application does not use an appropriate caching policy that
        specifies the extent to which each web page and associated form fields
        should be cached.Guidelines:"
    - point: "CWE-ID: 526Cleartext Storage of Sensitive Information in an Environment
        Variable"
      priority: Essential
      details: "The product uses an environment variable to store unencrypted
        sensitive information.Guidelines:"
    - point: "CWE-ID: 527Exposure of Version-Control Repository to an Unauthorized
        Control Sphere"
      priority: Essential
      details: "The product stores a CVS, git, or other repository in a directory,
        archive, or other resource that is stored, transferred, or otherwise
        made accessible to unauthorized actors.Guidelines:"
    - point: "CWE-ID: 528Exposure of Core Dump File to an Unauthorized Control Sphere"
      priority: Essential
      details: "The product generates a core dump file in a directory, archive, or
        other resource that is stored, transferred, or otherwise made accessible
        to unauthorized actors.Guidelines:"
    - point: "CWE-ID: 529Exposure of Access Control List Files to an Unauthorized
        Control Sphere"
      priority: Essential
      details: "The product stores access control list files in a directory or other
        container that is accessible to actors outside of the intended control
        sphere.Guidelines:"
    - point: "CWE-ID: 530Exposure of Backup File to an Unauthorized Control Sphere"
      priority: Essential
      details: "A backup file is stored in a directory or archive that is made
        accessible to unauthorized actors.Guidelines:"
    - point: "CWE-ID: 531Inclusion of Sensitive Information in Test Code"
      priority: Essential
      details: "Accessible test applications can pose a variety of security risks.
        Since developers or administrators rarely consider that someone besides
        themselves would even know about the existence of these applications, it
        is common for them to contain sensitive information or
        functions.Guidelines:"
    - point: "CWE-ID: 532Insertion of Sensitive Information into Log File"
      priority: Essential
      details: "Information written to log files can be of a sensitive nature and give
        valuable guidance to an attacker or expose sensitive user
        information.Guidelines:"
    - point: "CWE-ID: 535Exposure of Information Through Shell Error Message"
      priority: Essential
      details: "A command shell error message indicates that there exists an unhandled
        exception in the web application code. In many cases, an attacker can
        leverage the conditions that cause these errors in order to gain
        unauthorized access to the system.Guidelines:"
    - point: "CWE-ID: 536Servlet Runtime Error Message Containing Sensitive
        Information"
      priority: Essential
      details: "A servlet error message indicates that there exists an unhandled
        exception in your web application code and may provide useful
        information to an attacker.Guidelines:"
    - point: "CWE-ID: 537Java Runtime Error Message Containing Sensitive Information"
      priority: Essential
      details: "In many cases, an attacker can leverage the conditions that cause
        unhandled exception errors in order to gain unauthorized access to the
        system.Guidelines:"
    - point: "CWE-ID: 538Insertion of Sensitive Information into Externally-Accessible
        File or Directory"
      priority: Essential
      details: "The product places sensitive information into files or directories
        that are accessible to actors who are allowed to have access to the
        files, but not to the sensitive
        information.Guidelines:::TYPE:Maintenance:NOTE:Depending on usage, this
        could be a weakness or a category. Further study of all its children is
        needed, and the entire sub-tree may need to be clarified. The current
        organization is based primarily on the exposure of sensitive information
        as a consequence, instead of as a primary
        weakness.::TYPE:Maintenance:NOTE:There is a close relationship with
        CWE-552, which is more focused on weaknesses. As a result, it may be
        more appropriate to convert CWE-538 to a category.::"
    - point: "CWE-ID: 539Use of Persistent Cookies Containing Sensitive Information"
      priority: Essential
      details: "The web application uses persistent cookies, but the cookies contain
        sensitive information.Guidelines:"
    - point: "CWE-ID: 540Inclusion of Sensitive Information in Source Code"
      priority: Essential
      details: "Source code on a web server or repository often contains sensitive
        information and should generally not be accessible to users.Guidelines:"
    - point: "CWE-ID: 541Inclusion of Sensitive Information in an Include File"
      priority: Essential
      details: "If an include file source is accessible, the file can contain
        usernames and passwords, as well as sensitive information pertaining to
        the application and system.Guidelines:"
    - point: "CWE-ID: 543Use of Singleton Pattern Without Synchronization in a
        Multithreaded Context"
      priority: Essential
      details: "The product uses the singleton pattern when creating a resource within
        a multithreaded environment.Guidelines:"
    - point: "CWE-ID: 544Missing Standardized Error Handling Mechanism"
      priority: Essential
      details: "The product does not use a standardized method for handling errors
        throughout the code, which might introduce inconsistent error handling
        and resultant weaknesses.Guidelines:"
    - point: "CWE-ID: 546Suspicious Comment"
      priority: Essential
      details: "The code contains comments that suggest the presence of bugs,
        incomplete functionality, or weaknesses.Guidelines:"
    - point: "CWE-ID: 547Use of Hard-coded, Security-relevant Constants"
      priority: Essential
      details: "The product uses hard-coded constants instead of symbolic names for
        security-critical values, which increases the likelihood of mistakes
        during code maintenance or security policy change.Guidelines:"
    - point: "CWE-ID: 548Exposure of Information Through Directory Listing"
      priority: Essential
      details: "A directory listing is inappropriately exposed, yielding potentially
        sensitive information to attackers.Guidelines:"
    - point: "CWE-ID: 549Missing Password Field Masking"
      priority: Essential
      details: "The product does not mask passwords during entry, increasing the
        potential for attackers to observe and capture passwords.Guidelines:"
    - point: "CWE-ID: 550Server-generated Error Message Containing Sensitive
        Information"
      priority: Essential
      details: "Certain conditions, such as network failure, will cause a server error
        message to be displayed.Guidelines:"
    - point: "CWE-ID: 551Incorrect Behavior Order: Authorization Before Parsing and
        Canonicalization"
      priority: Essential
      details: "If a web server does not fully parse requested URLs before it examines
        them for authorization, it may be possible for an attacker to bypass
        authorization protection.Guidelines:"
    - point: "CWE-ID: 552Files or Directories Accessible to External Parties"
      priority: Essential
      details: "The product makes files or directories accessible to unauthorized
        actors, even though they should not be.Guidelines:"
    - point: "CWE-ID: 553Command Shell in Externally Accessible Directory"
      priority: Essential
      details: "A possible shell file exists in /cgi-bin/ or other accessible
        directories. This is extremely dangerous and can be used by an attacker
        to execute commands on the web server.Guidelines:"
    - point: "CWE-ID: 554ASP.NET Misconfiguration: Not Using Input Validation
        Framework"
      priority: Essential
      details: "The ASP.NET application does not use an input validation
        framework.Guidelines:"
    - point: "CWE-ID: 555J2EE Misconfiguration: Plaintext Password in Configuration
        File"
      priority: Essential
      details: "The J2EE application stores a plaintext password in a configuration
        file.Guidelines:"
    - point: "CWE-ID: 556ASP.NET Misconfiguration: Use of Identity Impersonation"
      priority: Essential
      details: "Configuring an ASP.NET application to run with impersonated
        credentials may give the application unnecessary privileges.Guidelines:"
    - point: "CWE-ID: 558Use of getlogin() in Multithreaded Application"
      priority: Essential
      details: "The product uses the getlogin() function in a multithreaded context,
        potentially causing it to return incorrect values.Guidelines:"
    - point: "CWE-ID: 560Use of umask() with chmod-style Argument"
      priority: Essential
      details: "The product calls umask() with an incorrect argument that is specified
        as if it is an argument to chmod().Guidelines:::TYPE:Other:NOTE:Some
        umask() manual pages begin with the false statement: umask sets the
        umask to mask & 0777 Although this behavior would better align with the
        usage of chmod(), where the user provided argument specifies the bits to
        enable on the specified file, the behavior of umask() is in fact
        opposite: umask() sets the umask to ~mask & 0777. The documentation goes
        on to describe the correct usage of umask(): The umask is used by open()
        to set initial file permissions on a newly-created file. Specifically,
        permissions in the umask are turned off from the mode argument to
        open(2) (so, for example, the common umask default value of 022 results
        in new files being created with permissions 0666 & ~022 = 0644 =
        rw-r--r-- in the usual case where the mode is specified as 0666).::"
    - point: "CWE-ID: 561Dead Code"
      priority: Essential
      details: "The product contains dead code, which can never be executed.Guidelines:"
    - point: "CWE-ID: 562Return of Stack Variable Address"
      priority: Essential
      details: "A function returns the address of a stack variable, which will cause
        unintended program behavior, typically in the form of a
        crash.Guidelines:"
    - point: "CWE-ID: 563Assignment to Variable without Use"
      priority: Essential
      details: "The variable's value is assigned but never used, making it a dead
        store.Guidelines:"
    - point: "CWE-ID: 564SQL Injection: Hibernate"
      priority: Essential
      details: "Using Hibernate to execute a dynamic SQL statement built with
        user-controlled input can allow an attacker to modify the statement's
        meaning or to execute arbitrary SQL commands.Guidelines:"
    - point: "CWE-ID: 565Reliance on Cookies without Validation and Integrity
        Checking"
      priority: Essential
      details: "The product relies on the existence or values of cookies when
        performing security-critical operations, but it does not properly ensure
        that the setting is valid for the associated
        user.Guidelines:::TYPE:Relationship:NOTE:This problem can be primary to
        many types of weaknesses in web applications. A developer may perform
        proper validation against URL parameters while assuming that attackers
        cannot modify cookies. As a result, the program might skip basic input
        validation to enable cross-site scripting, SQL injection, price
        tampering, and other attacks..::"
    - point: "CWE-ID: 566Authorization Bypass Through User-Controlled SQL Primary Key"
      priority: Essential
      details: "The product uses a database table that includes records that should
        not be accessible to an actor, but it executes a SQL statement with a
        primary key that can be controlled by that actor.Guidelines:"
    - point: "CWE-ID: 567Unsynchronized Access to Shared Data in a Multithreaded
        Context"
      priority: Essential
      details: "The product does not properly synchronize shared data, such as static
        variables across threads, which can lead to undefined behavior and
        unpredictable data changes.Guidelines:"
    - point: "CWE-ID: 568finalize() Method Without super.finalize()"
      priority: Essential
      details: "The product contains a finalize() method that does not call
        super.finalize().Guidelines:"
    - point: "CWE-ID: 570Expression is Always False"
      priority: Essential
      details: "The product contains an expression that will always evaluate to
        false.Guidelines:"
    - point: "CWE-ID: 571Expression is Always True"
      priority: Essential
      details: "The product contains an expression that will always evaluate to
        true.Guidelines:"
    - point: "CWE-ID: 572Call to Thread run() instead of start()"
      priority: Essential
      details: "The product calls a thread's run() method instead of calling start(),
        which causes the code to run in the thread of the caller instead of the
        callee.Guidelines:"
    - point: "CWE-ID: 573Improper Following of Specification by Caller"
      priority: Essential
      details: "The product does not follow or incorrectly follows the specifications
        as required by the implementation language, environment, framework,
        protocol, or platform.Guidelines:"
    - point: "CWE-ID: 574EJB Bad Practices: Use of Synchronization Primitives"
      priority: Essential
      details: "The product violates the Enterprise JavaBeans (EJB) specification by
        using thread synchronization primitives.Guidelines:"
    - point: "CWE-ID: 575EJB Bad Practices: Use of AWT Swing"
      priority: Essential
      details: "The product violates the Enterprise JavaBeans (EJB) specification by
        using AWT/Swing.Guidelines:"
    - point: "CWE-ID: 576EJB Bad Practices: Use of Java I/O"
      priority: Essential
      details: "The product violates the Enterprise JavaBeans (EJB) specification by
        using the java.io package.Guidelines:"
    - point: "CWE-ID: 577EJB Bad Practices: Use of Sockets"
      priority: Essential
      details: "The product violates the Enterprise JavaBeans (EJB) specification by
        using sockets.Guidelines:"
    - point: "CWE-ID: 578EJB Bad Practices: Use of Class Loader"
      priority: Essential
      details: "The product violates the Enterprise JavaBeans (EJB) specification by
        using the class loader.Guidelines:"
    - point: "CWE-ID: 579J2EE Bad Practices: Non-serializable Object Stored in
        Session"
      priority: Essential
      details: "The product stores a non-serializable object as an HttpSession
        attribute, which can hurt reliability.Guidelines:"
    - point: "CWE-ID: 580clone() Method Without super.clone()"
      priority: Essential
      details: "The product contains a clone() method that does not call super.clone()
        to obtain the new object.Guidelines:"
    - point: "CWE-ID: 581Object Model Violation: Just One of Equals and Hashcode
        Defined"
      priority: Essential
      details: "The product does not maintain equal hashcodes for equal
        objects.Guidelines:"
    - point: "CWE-ID: 582Array Declared Public, Final, and Static"
      priority: Essential
      details: "The product declares an array public, final, and static, which is not
        sufficient to prevent the array's contents from being
        modified.Guidelines:"
    - point: "CWE-ID: 583finalize() Method Declared Public"
      priority: Essential
      details: "The product violates secure coding principles for mobile code by
        declaring a finalize() method public.Guidelines:"
    - point: "CWE-ID: 584Return Inside Finally Block"
      priority: Essential
      details: "The code has a return statement inside a finally block, which will
        cause any thrown exception in the try block to be discarded.Guidelines:"
    - point: "CWE-ID: 585Empty Synchronized Block"
      priority: Essential
      details: "The product contains an empty synchronized block.Guidelines:"
    - point: "CWE-ID: 586Explicit Call to Finalize()"
      priority: Essential
      details: "The product makes an explicit call to the finalize() method from
        outside the finalizer.Guidelines:"
    - point: "CWE-ID: 587Assignment of a Fixed Address to a Pointer"
      priority: Essential
      details: "The product sets a pointer to a specific address other than NULL or
        0.Guidelines:"
    - point: "CWE-ID: 588Attempt to Access Child of a Non-structure Pointer"
      priority: Essential
      details: "Casting a non-structure type to a structure type and accessing a field
        can lead to memory access errors or data corruption.Guidelines:"
    - point: "CWE-ID: 589Call to Non-ubiquitous API"
      priority: Essential
      details: "The product uses an API function that does not exist on all versions
        of the target platform. This could cause portability problems or
        inconsistencies that allow denial of service or other
        consequences.Guidelines:"
    - point: "CWE-ID: 590Free of Memory not on the Heap"
      priority: Essential
      details: "The product calls free() on a pointer to memory that was not allocated
        using associated heap allocation functions such as malloc(), calloc(),
        or realloc().Guidelines:::TYPE:Other:NOTE:In C++, if the new operator
        was used to allocate the memory, it may be allocated with the malloc(),
        calloc() or realloc() family of functions in the implementation. Someone
        aware of this behavior might choose to map this problem to CWE-590 or to
        its parent, CWE-762, depending on their perspective.::"
    - point: "CWE-ID: 591Sensitive Data Storage in Improperly Locked Memory"
      priority: Essential
      details: "The product stores sensitive data in memory that is not locked, or
        that has been incorrectly locked, which might cause the memory to be
        written to swap files on disk by the virtual memory manager. This can
        make the data more accessible to external actors.Guidelines:"
    - point: "CWE-ID: 593Authentication Bypass: OpenSSL CTX Object Modified after SSL
        Objects are Created"
      priority: Essential
      details: "The product modifies the SSL context after connection creation has
        begun.Guidelines:"
    - point: "CWE-ID: 594J2EE Framework: Saving Unserializable Objects to Disk"
      priority: Essential
      details: "When the J2EE container attempts to write unserializable objects to
        disk there is no guarantee that the process will complete
        successfully.Guidelines:"
    - point: "CWE-ID: 595Comparison of Object References Instead of Object Contents"
      priority: Essential
      details: "The product compares object references instead of the contents of the
        objects themselves, preventing it from detecting equivalent
        objects.Guidelines:"
    - point: "CWE-ID: 597Use of Wrong Operator in String Comparison"
      priority: Essential
      details: "The product uses the wrong operator when comparing a string, such as
        using == when the .equals() method should be used instead.Guidelines:"
    - point: "CWE-ID: 598Use of GET Request Method With Sensitive Query Strings"
      priority: Essential
      details: "The web application uses the HTTP GET method to process a request and
        includes sensitive information in the query string of that
        request.Guidelines:"
    - point: "CWE-ID: 599Missing Validation of OpenSSL Certificate"
      priority: Essential
      details: "The product uses OpenSSL and trusts or uses a certificate without
        using the SSL_get_verify_result() function to ensure that the
        certificate satisfies all necessary security
        requirements.Guidelines:::TYPE:Relationship:NOTE:CWE-295 and CWE-599 are
        very similar, although CWE-599 has a more narrow scope that is only
        applied to OpenSSL certificates. As a result, other children of CWE-295
        can be regarded as children of CWE-599 as well. CWE's use of
        one-dimensional hierarchical relationships is not well-suited to handle
        different kinds of abstraction relationships based on concepts like
        types of resources (OpenSSL certificate as a child of any certificate)
        and types of behaviors (not validating expiration as a child of improper
        validation).::"
    - point: "CWE-ID: 600Uncaught Exception in Servlet"
      priority: Essential
      details: "The Servlet does not catch all exceptions, which may reveal sensitive
        debugging information.Guidelines:::TYPE:Maintenance:NOTE:The Missing
        Catch Block concept is probably broader than just Servlets, but the
        broader concept is not sufficiently covered in CWE.::"
    - point: "CWE-ID: 601URL Redirection to Untrusted Site ('Open Redirect')"
      priority: Essential
      details: "A web application accepts a user-controlled input that specifies a
        link to an external site, and uses that link in a Redirect. This
        simplifies phishing attacks.Guidelines:"
    - point: "CWE-ID: 602Client-Side Enforcement of Server-Side Security"
      priority: Essential
      details: "The product is composed of a server that relies on the client to
        implement a mechanism that is intended to protect the
        server.Guidelines:"
    - point: "CWE-ID: 603Use of Client-Side Authentication"
      priority: Essential
      details: "A client/server product performs authentication within client code but
        not in server code, allowing server-side authentication to be bypassed
        via a modified client that omits the authentication check.Guidelines:"
    - point: "CWE-ID: 605Multiple Binds to the Same Port"
      priority: Essential
      details: "When multiple sockets are allowed to bind to the same port, other
        services on that port may be stolen or spoofed.Guidelines:"
    - point: "CWE-ID: 606Unchecked Input for Loop Condition"
      priority: Essential
      details: "The product does not properly check inputs that are used for loop
        conditions, potentially leading to a denial of service or other
        consequences because of excessive looping.Guidelines:"
    - point: "CWE-ID: 607Public Static Final Field References Mutable Object"
      priority: Essential
      details: "A public or protected static final field references a mutable object,
        which allows the object to be changed by malicious code, or accidentally
        from another package.Guidelines:"
    - point: "CWE-ID: 608Struts: Non-private Field in ActionForm Class"
      priority: Essential
      details: "An ActionForm class contains a field that has not been declared
        private, which can be accessed without using a setter or
        getter.Guidelines:"
    - point: "CWE-ID: 609Double-Checked Locking"
      priority: Essential
      details: "The product uses double-checked locking to access a resource without
        the overhead of explicit synchronization, but the locking is
        insufficient.Guidelines:"
    - point: "CWE-ID: 610Externally Controlled Reference to a Resource in Another
        Sphere"
      priority: Essential
      details: "The product uses an externally controlled name or reference that
        resolves to a resource that is outside of the intended control
        sphere.Guidelines:::TYPE:Relationship:NOTE:This is a general class of
        weakness, but most research is focused on more specialized cases, such
        as path traversal (CWE-22) and symlink following (CWE-61). A symbolic
        link has a name; in general, it appears like any other file in the file
        system. However, the link includes a reference to another file, often in
        another directory - perhaps in another sphere of control. Many common
        library functions that accept filenames will follow a symbolic link and
        use the link's target instead.::TYPE:Maintenance:NOTE:The relationship
        between CWE-99 and CWE-610 needs further investigation and
        clarification. They might be duplicates. CWE-99 Resource Injection, as
        originally defined in Seven Pernicious Kingdoms taxonomy, emphasizes the
        identifier used to access a system resource such as a file name or port
        number, yet it explicitly states that the resource injection term does
        not apply to path manipulation, which effectively identifies the path at
        which a resource can be found and could be considered to be one aspect
        of a resource identifier. Also, CWE-610 effectively covers any type of
        resource, whether that resource is at the system layer, the application
        layer, or the code layer.::"
    - point: "CWE-ID: 611Improper Restriction of XML External Entity Reference"
      priority: Essential
      details: "The product processes an XML document that can contain XML entities
        with URIs that resolve to documents outside of the intended sphere of
        control, causing the product to embed incorrect documents into its
        output.Guidelines:::TYPE:Relationship:NOTE:CWE-918 (SSRF) and CWE-611
        (XXE) are closely related, because they both involve web-related
        technologies and can launch outbound requests to unexpected
        destinations. However, XXE can be performed client-side, or in other
        contexts in which the software is not acting directly as a server, so
        the Server portion of the SSRF acronym does not necessarily apply.::"
    - point: "CWE-ID: 612Improper Authorization of Index Containing Sensitive
        Information"
      priority: Essential
      details: "The product creates a search index of private or sensitive documents,
        but it does not properly limit index access to actors who are authorized
        to see the original information.Guidelines:::TYPE:Research Gap:NOTE:This
        weakness is probably under-studied and under-reported.::"
    - point: "CWE-ID: 613Insufficient Session Expiration"
      priority: Essential
      details: "According to WASC, Insufficient Session Expiration is when a web site
        permits an attacker to reuse old session credentials or session IDs for
        authorization.Guidelines:::TYPE:Other:NOTE:The lack of proper session
        expiration may improve the likely success of certain attacks. For
        example, an attacker may intercept a session ID, possibly via a network
        sniffer or Cross-site Scripting attack. Although short session
        expiration times do not help if a stolen token is immediately used, they
        will protect against ongoing replaying of the session ID. In another
        scenario, a user might access a web site from a shared computer (such as
        at a library, Internet cafe, or open work environment). Insufficient
        Session Expiration could allow an attacker to use the browser's back
        button to access web pages previously accessed by the victim.::"
    - point: "CWE-ID: 614Sensitive Cookie in HTTPS Session Without 'Secure' Attribute"
      priority: Essential
      details: "The Secure attribute for sensitive cookies in HTTPS sessions is not
        set, which could cause the user agent to send those cookies in plaintext
        over an HTTP session.Guidelines:"
    - point: "CWE-ID: 615Inclusion of Sensitive Information in Source Code Comments"
      priority: Essential
      details: "While adding general comments is very useful, some programmers tend to
        leave important data, such as: filenames related to the web application,
        old links or links which were not meant to be browsed by users, old code
        fragments, etc.Guidelines:"
    - point: "CWE-ID: 616Incomplete Identification of Uploaded File Variables (PHP)"
      priority: Essential
      details: "The PHP application uses an old method for processing uploaded files
        by referencing the four global variables that are set for each file
        (e.g. $varname, $varname_size, $varname_name, $varname_type). These
        variables could be overwritten by attackers, causing the application to
        process unauthorized files.Guidelines:"
    - point: "CWE-ID: 617Reachable Assertion"
      priority: Essential
      details: "The product contains an assert() or similar statement that can be
        triggered by an attacker, which leads to an application exit or other
        behavior that is more severe than necessary.Guidelines:"
    - point: "CWE-ID: 618Exposed Unsafe ActiveX Method"
      priority: Essential
      details: "An ActiveX control is intended for use in a web browser, but it
        exposes dangerous methods that perform actions that are outside of the
        browser's security model (e.g. the zone or domain).Guidelines:"
    - point: "CWE-ID: 619Dangling Database Cursor ('Cursor Injection')"
      priority: Essential
      details: "If a database cursor is not closed properly, then it could become
        accessible to other users while retaining the same privileges that were
        originally assigned, leaving the cursor dangling.Guidelines:"
    - point: "CWE-ID: 620Unverified Password Change"
      priority: Essential
      details: "When setting a new password for a user, the product does not require
        knowledge of the original password, or using another form of
        authentication.Guidelines:"
    - point: "CWE-ID: 621Variable Extraction Error"
      priority: Essential
      details: "The product uses external input to determine the names of variables
        into which information is extracted, without verifying that the names of
        the specified variables are valid. This could cause the program to
        overwrite unintended variables.Guidelines:::TYPE:Research
        Gap:NOTE:Probably under-reported for PHP. Seems under-studied for other
        interpreted languages.::"
    - point: "CWE-ID: 622Improper Validation of Function Hook Arguments"
      priority: Essential
      details: "The product adds hooks to user-accessible API functions, but it does
        not properly validate the arguments. This could lead to resultant
        vulnerabilities.Guidelines:"
    - point: "CWE-ID: 623Unsafe ActiveX Control Marked Safe For Scripting"
      priority: Essential
      details: "An ActiveX control is intended for restricted use, but it has been
        marked as safe-for-scripting.Guidelines:"
    - point: "CWE-ID: 624Executable Regular Expression Error"
      priority: Essential
      details: "The product uses a regular expression that either (1) contains an
        executable component with user-controlled inputs, or (2) allows a user
        to enable execution by inserting pattern
        modifiers.Guidelines:::TYPE:Research Gap:NOTE:Under-studied. The
        existing PHP reports are limited to highly skilled researchers, but
        there are few examples for other languages. It is suspected that this is
        under-reported for all languages. Usability factors might make it more
        prevalent in PHP, but this theory has not been investigated.::"
    - point: "CWE-ID: 625Permissive Regular Expression"
      priority: Essential
      details: "The product uses a regular expression that does not sufficiently
        restrict the set of allowed values.Guidelines:"
    - point: "CWE-ID: 626Null Byte Interaction Error (Poison Null Byte)"
      priority: Essential
      details: "The product does not properly handle null bytes or NUL characters when
        passing data between different representations or
        components.Guidelines:::TYPE:Terminology:NOTE:Current usage of poison
        null byte is typically related to this C/Perl/PHP interaction error, but
        the original term in 1998 was applied to an off-by-one buffer overflow
        involving a null byte.::TYPE:Research Gap:NOTE:There are not many CVE
        examples, because the poison NULL byte is a design limitation, which
        typically is not included in CVE by itself. It is typically used as a
        facilitator manipulation to widen the scope of potential attacks against
        other vulnerabilities.::"
    - point: "CWE-ID: 627Dynamic Variable Evaluation"
      priority: Essential
      details: "In a language where the user can influence the name of a variable at
        runtime, if the variable names are not controlled, an attacker can read
        or write to arbitrary variables, or access arbitrary
        functions.Guidelines:::TYPE:Research Gap:NOTE:Under-studied, probably
        under-reported. Few researchers look for this issue; most public reports
        are for PHP, although other languages are affected. This issue is likely
        to grow in PHP as developers begin to implement functionality in place
        of register_globals.::"
    - point: "CWE-ID: 628Function Call with Incorrectly Specified Arguments"
      priority: Essential
      details: "The product calls a function, procedure, or routine with arguments
        that are not correctly specified, leading to always-incorrect behavior
        and resultant weaknesses.Guidelines:"
    - point: "CWE-ID: 636Not Failing Securely ('Failing Open')"
      priority: Essential
      details: "When the product encounters an error condition or failure, its design
        requires it to fall back to a state that is less secure than other
        options that are available, such as selecting the weakest encryption
        algorithm or using the most permissive access control
        restrictions.Guidelines:::TYPE:Research Gap:NOTE:Since design issues are
        hard to fix, they are rarely publicly reported, so there are few CVE
        examples of this problem as of January 2008. Most publicly reported
        issues occur as the result of an implementation error instead of design,
        such as CVE-2005-3177 (Improper handling of large numbers of resources)
        or CVE-2005-2969 (inadvertently disabling a verification step, leading
        to selection of a weaker protocol).::"
    - point: "CWE-ID: 637Unnecessary Complexity in Protection Mechanism (Not Using
        'Economy of Mechanism')"
      priority: Essential
      details: "The product uses a more complex mechanism than necessary, which could
        lead to resultant weaknesses when the mechanism is not correctly
        understood, modeled, configured, implemented, or used.Guidelines:"
    - point: "CWE-ID: 638Not Using Complete Mediation"
      priority: Essential
      details: "The product does not perform access checks on a resource every time
        the resource is accessed by an entity, which can create resultant
        weaknesses if that entity's rights or privileges change over
        time.Guidelines:"
    - point: "CWE-ID: 639Authorization Bypass Through User-Controlled Key"
      priority: Essential
      details: "The system's authorization functionality does not prevent one user
        from gaining access to another user's data or record by modifying the
        key value identifying the data.Guidelines:"
    - point: "CWE-ID: 640Weak Password Recovery Mechanism for Forgotten Password"
      priority: Essential
      details: "The product contains a mechanism for users to recover or change their
        passwords without knowing the original password, but the mechanism is
        weak.Guidelines:::TYPE:Maintenance:NOTE:This entry might be reclassified
        as a category or loose composite, since it lists multiple specific
        errors that can make the mechanism weak. However, under view 1000, it
        could be a weakness under protection mechanism failure, although it is
        different from most PMF issues since it is related to a feature that is
        designed to bypass a protection mechanism (specifically, the lack of
        knowledge of a password).::TYPE:Maintenance:NOTE:This entry probably
        needs to be split; see extended description.::"
    - point: "CWE-ID: 641Improper Restriction of Names for Files and Other Resources"
      priority: Essential
      details: "The product constructs the name of a file or other resource using
        input from an upstream component, but it does not restrict or
        incorrectly restricts the resulting name.Guidelines:"
    - point: "CWE-ID: 642External Control of Critical State Data"
      priority: Essential
      details: "The product stores security-critical state information about its
        users, or the product itself, in a location that is accessible to
        unauthorized actors.Guidelines:"
    - point: "CWE-ID: 643Improper Neutralization of Data within XPath Expressions
        ('XPath Injection')"
      priority: Essential
      details: "The product uses external input to dynamically construct an XPath
        expression used to retrieve data from an XML database, but it does not
        neutralize or incorrectly neutralizes that input. This allows an
        attacker to control the structure of the
        query.Guidelines:::TYPE:Relationship:NOTE:This weakness is similar to
        other weaknesses that enable injection style attacks, such as SQL
        injection, command injection and LDAP injection. The main difference is
        that the target of attack here is the XML database.::"
    - point: "CWE-ID: 644Improper Neutralization of HTTP Headers for Scripting Syntax"
      priority: Essential
      details: "The product does not neutralize or incorrectly neutralizes web
        scripting syntax in HTTP headers that can be used by web browser
        components that can process raw headers, such as Flash.Guidelines:"
    - point: "CWE-ID: 645Overly Restrictive Account Lockout Mechanism"
      priority: Essential
      details: "The product contains an account lockout protection mechanism, but the
        mechanism is too restrictive and can be triggered too easily, which
        allows attackers to deny service to legitimate users by causing their
        accounts to be locked out.Guidelines:"
    - point: "CWE-ID: 646Reliance on File Name or Extension of Externally-Supplied
        File"
      priority: Essential
      details: "The product allows a file to be uploaded, but it relies on the file
        name or extension of the file to determine the appropriate behaviors.
        This could be used by attackers to cause the file to be misclassified
        and processed in a dangerous fashion.Guidelines:"
    - point: "CWE-ID: 647Use of Non-Canonical URL Paths for Authorization Decisions"
      priority: Essential
      details: "The product defines policy namespaces and makes authorization
        decisions based on the assumption that a URL is canonical. This can
        allow a non-canonical URL to bypass the authorization.Guidelines:"
    - point: "CWE-ID: 648Incorrect Use of Privileged APIs"
      priority: Essential
      details: "The product does not conform to the API requirements for a function
        call that requires extra privileges. This could allow attackers to gain
        privileges by causing the function to be called incorrectly.Guidelines:"
    - point: "CWE-ID: 649Reliance on Obfuscation or Encryption of Security-Relevant
        Inputs without Integrity Checking"
      priority: Essential
      details: "The product uses obfuscation or encryption of inputs that should not
        be mutable by an external actor, but the product does not use integrity
        checks to detect if those inputs have been modified.Guidelines:"
    - point: "CWE-ID: 650Trusting HTTP Permission Methods on the Server Side"
      priority: Essential
      details: "The server contains a protection mechanism that assumes that any URI
        that is accessed using HTTP GET will not cause a state change to the
        associated resource. This might allow attackers to bypass intended
        access restrictions and conduct resource modification and deletion
        attacks, since some applications allow GET to modify state.Guidelines:"
    - point: "CWE-ID: 651Exposure of WSDL File Containing Sensitive Information"
      priority: Essential
      details: "The Web services architecture may require exposing a Web Service
        Definition Language (WSDL) file that contains information on the
        publicly accessible services and how callers of these services should
        interact with them (e.g. what parameters they expect and what types they
        return).Guidelines:"
    - point: "CWE-ID: 652Improper Neutralization of Data within XQuery Expressions
        ('XQuery Injection')"
      priority: Essential
      details: "The product uses external input to dynamically construct an XQuery
        expression used to retrieve data from an XML database, but it does not
        neutralize or incorrectly neutralizes that input. This allows an
        attacker to control the structure of the
        query.Guidelines:::TYPE:Relationship:NOTE:This weakness is similar to
        other weaknesses that enable injection style attacks, such as SQL
        injection, command injection and LDAP injection. The main difference is
        that the target of attack here is the XML database.::"
    - point: "CWE-ID: 653Improper Isolation or Compartmentalization"
      priority: Essential
      details: "The product does not properly compartmentalize or isolate
        functionality, processes, or resources that require different privilege
        levels, rights, or permissions.Guidelines:::TYPE:Relationship:NOTE:There
        is a close association with CWE-250 (Execution with Unnecessary
        Privileges). CWE-653 is about providing separate components for each
        privilege; CWE-250 is about ensuring that each component has the least
        amount of privileges possible. In this fashion, compartmentalization
        becomes one mechanism for reducing
        privileges.::TYPE:Terminology:NOTE:The term Separation of Privilege is
        used in several different ways in the industry, but they generally
        combine two closely related principles: compartmentalization (this node)
        and using only one factor in a security decision (CWE-654). Proper
        compartmentalization implicitly introduces multiple factors into a
        security decision, but there can be cases in which multiple factors are
        required for authentication or other mechanisms that do not involve
        compartmentalization, such as performing all required checks on a
        submitted certificate. It is likely that CWE-653 and CWE-654 will
        provoke further discussion.::"
    - point: "CWE-ID: 654Reliance on a Single Factor in a Security Decision"
      priority: Essential
      details: "A protection mechanism relies exclusively, or to a large extent, on
        the evaluation of a single condition or the integrity of a single object
        or entity in order to make a decision about granting access to
        restricted resources or
        functionality.Guidelines:::TYPE:Maintenance:NOTE:This entry is closely
        associated with the term Separation of Privilege. This term is used in
        several different ways in the industry, but they generally combine two
        closely related principles: compartmentalization (CWE-653) and using
        only one factor in a security decision (this entry). Proper
        compartmentalization implicitly introduces multiple factors into a
        security decision, but there can be cases in which multiple factors are
        required for authentication or other mechanisms that do not involve
        compartmentalization, such as performing all required checks on a
        submitted certificate. It is likely that CWE-653 and CWE-654 will
        provoke further discussion.::"
    - point: "CWE-ID: 655Insufficient Psychological Acceptability"
      priority: Essential
      details: "The product has a protection mechanism that is too difficult or
        inconvenient to use, encouraging non-malicious users to disable or
        bypass the mechanism, whether by accident or on
        purpose.Guidelines:::TYPE:Other:NOTE:This weakness covers many security
        measures causing user inconvenience, requiring effort or causing
        frustration, that are disproportionate to the risks or value of the
        protected assets, or that are perceived to be
        ineffective.::TYPE:Maintenance:NOTE:The Taxonomy_Mappings to ISA/IEC
        62443 were added in CWE 4.10, but they are still under review and might
        change in future CWE versions. These draft mappings were performed by
        members of the Mapping CWE to 62443 subgroup of the CWE-CAPEC ICS/OT
        Special Interest Group (SIG), and their work is incomplete as of CWE
        4.10. The mappings are included to facilitate discussion and review by
        the broader ICS/OT community, and they are likely to change in future
        CWE versions.::"
    - point: "CWE-ID: 656Reliance on Security Through Obscurity"
      priority: Essential
      details: "The product uses a protection mechanism whose strength depends heavily
        on its obscurity, such that knowledge of its algorithms or key data is
        sufficient to defeat the
        mechanism.Guidelines:::TYPE:Relationship:NOTE:Note that there is a close
        relationship between this weakness and CWE-603 (Use of Client-Side
        Authentication). If developers do not believe that a user can reverse
        engineer a client, then they are more likely to choose client-side
        authentication in the belief that it is safe.::"
    - point: "CWE-ID: 657Violation of Secure Design Principles"
      priority: Essential
      details: "The product violates well-established principles for secure
        design.Guidelines:::TYPE:Maintenance:NOTE:The Taxonomy_Mappings to
        ISA/IEC 62443 were added in CWE 4.10, but they are still under review
        and might change in future CWE versions. These draft mappings were
        performed by members of the Mapping CWE to 62443 subgroup of the
        CWE-CAPEC ICS/OT Special Interest Group (SIG), and their work is
        incomplete as of CWE 4.10. The mappings are included to facilitate
        discussion and review by the broader ICS/OT community, and they are
        likely to change in future CWE versions.::"
    - point: "CWE-ID: 662Improper Synchronization"
      priority: Essential
      details: "The product utilizes multiple threads or processes to allow temporary
        access to a shared resource that can only be exclusive to one process at
        a time, but it does not properly synchronize these actions, which might
        cause simultaneous accesses of this resource by multiple threads or
        processes.Guidelines:::TYPE:Maintenance:NOTE:Deeper research is
        necessary for synchronization and related mechanisms, including locks,
        mutexes, semaphores, and other mechanisms. Multiple entries are
        dependent on this research, which includes relationships to concurrency,
        race conditions, reentrant functions, etc. CWE-662 and its children -
        including CWE-667, CWE-820, CWE-821, and others - may need to be
        modified significantly, along with their relationships.::"
    - point: "CWE-ID: 663Use of a Non-reentrant Function in a Concurrent Context"
      priority: Essential
      details: "The product calls a non-reentrant function in a concurrent context in
        which a competing code sequence (e.g. thread or signal handler) may have
        an opportunity to call the same function or otherwise influence its
        state.Guidelines:"
    - point: "CWE-ID: 664Improper Control of a Resource Through its Lifetime"
      priority: Essential
      details: "The product does not maintain or incorrectly maintains control over a
        resource throughout its lifetime of creation, use, and
        release.Guidelines:::TYPE:Maintenance:NOTE:More work is needed on this
        entry and its children. There are perspective/layering issues; for
        example, one breakdown is based on lifecycle phase (CWE-404, CWE-665),
        while other children are independent of lifecycle, such as CWE-400.
        Others do not specify as many bases or variants, such as CWE-704, which
        primarily covers numbers at this stage.::"
    - point: "CWE-ID: 665Improper Initialization"
      priority: Essential
      details: "The product does not initialize or incorrectly initializes a resource,
        which might leave the resource in an unexpected state when it is
        accessed or used.Guidelines:"
    - point: "CWE-ID: 666Operation on Resource in Wrong Phase of Lifetime"
      priority: Essential
      details: "The product performs an operation on a resource at the wrong phase of
        the resource's lifecycle, which can lead to unexpected
        behaviors.Guidelines:"
    - point: "CWE-ID: 667Improper Locking"
      priority: Essential
      details: "The product does not properly acquire or release a lock on a resource,
        leading to unexpected resource state changes and
        behaviors.Guidelines:::TYPE:Maintenance:NOTE:Deeper research is
        necessary for synchronization and related mechanisms, including locks,
        mutexes, semaphores, and other mechanisms. Multiple entries are
        dependent on this research, which includes relationships to concurrency,
        race conditions, reentrant functions, etc. CWE-662 and its children -
        including CWE-667, CWE-820, CWE-821, and others - may need to be
        modified significantly, along with their relationships.::"
    - point: "CWE-ID: 668Exposure of Resource to Wrong Sphere"
      priority: Essential
      details: "The product exposes a resource to the wrong control sphere, providing
        unintended actors with inappropriate access to the
        resource.Guidelines:::TYPE:Theoretical:NOTE:A control sphere is a set of
        resources and behaviors that are accessible to a single actor, or a
        group of actors. A product's security model will typically define
        multiple spheres, possibly implicitly. For example, a server might
        define one sphere for administrators who can create new user accounts
        with subdirectories under /home/server/, and a second sphere might cover
        the set of users who can create or delete files within their own
        subdirectories. A third sphere might be users who are authenticated to
        the operating system on which the product is installed. Each sphere has
        different sets of actors and allowable behaviors.::"
    - point: "CWE-ID: 669Incorrect Resource Transfer Between Spheres"
      priority: Essential
      details: "The product does not properly transfer a resource/behavior to another
        sphere, or improperly imports a resource/behavior from another sphere,
        in a manner that provides unintended control over that
        resource.Guidelines:"
    - point: "CWE-ID: 670Always-Incorrect Control Flow Implementation"
      priority: Essential
      details: "The code contains a control flow path that does not reflect the
        algorithm that the path is intended to implement, leading to incorrect
        behavior any time this path is
        navigated.Guidelines:::TYPE:Maintenance:NOTE:This node could possibly be
        split into lower-level nodes. Early Return is for returning control to
        the caller too soon (e.g., CWE-584). Excess Return is when control is
        returned too far up the call stack (CWE-600, CWE-395). Improper control
        limitation occurs when the product maintains control at a lower level of
        execution, when control should be returned further up the call stack
        (CWE-455). Incorrect syntax covers code that's just plain wrong such as
        CWE-484 and CWE-483.::"
    - point: "CWE-ID: 671Lack of Administrator Control over Security"
      priority: Essential
      details: "The product uses security features in a way that prevents the
        product's administrator from tailoring security settings to reflect the
        environment in which the product is being used. This introduces
        resultant weaknesses or prevents it from operating at a level of
        security that is desired by the administrator.Guidelines:"
    - point: "CWE-ID: 672Operation on a Resource after Expiration or Release"
      priority: Essential
      details: "The product uses, accesses, or otherwise operates on a resource after
        that resource has been expired, released, or revoked.Guidelines:"
    - point: "CWE-ID: 673External Influence of Sphere Definition"
      priority: Essential
      details: "The product does not prevent the definition of control spheres from
        external actors.Guidelines:::TYPE:Theoretical:NOTE:A control sphere is a
        set of resources and behaviors that are accessible to a single actor, or
        a group of actors. A product's security model will typically define
        multiple spheres, possibly implicitly. For example, a server might
        define one sphere for administrators who can create new user accounts
        with subdirectories under /home/server/, and a second sphere might cover
        the set of users who can create or delete files within their own
        subdirectories. A third sphere might be users who are authenticated to
        the operating system on which the product is installed. Each sphere has
        different sets of actors and allowable behaviors.::"
    - point: "CWE-ID: 674Uncontrolled Recursion"
      priority: Essential
      details: "The product does not properly control the amount of recursion that
        takes place, consuming excessive resources, such as allocated memory or
        the program stack.Guidelines:"
    - point: "CWE-ID: 675Multiple Operations on Resource in Single-Operation Context"
      priority: Essential
      details: "The product performs the same operation on a resource two or more
        times, when the operation should only be applied
        once.Guidelines:::TYPE:Relationship:NOTE:This weakness is probably
        closely associated with other issues related to doubling, such as
        CWE-462 (duplicate key in alist) or CWE-102 (Struts duplicate validation
        forms). It's usually a case of an API contract violation (CWE-227).::"
    - point: "CWE-ID: 676Use of Potentially Dangerous Function"
      priority: Essential
      details: "The product invokes a potentially dangerous function that could
        introduce a vulnerability if it is used incorrectly, but the function
        can also be used safely.Guidelines:::TYPE:Relationship:NOTE:This
        weakness is different than CWE-242 (Use of Inherently Dangerous
        Function). CWE-242 covers functions with such significant security
        problems that they can never be guaranteed to be safe. Some functions,
        if used properly, do not directly pose a security risk, but can
        introduce a weakness if not called correctly. These are regarded as
        potentially dangerous. A well-known example is the strcpy() function.
        When provided with a destination buffer that is larger than its source,
        strcpy() will not overflow. However, it is so often misused that some
        developers prohibit strcpy() entirely.::"
    - point: "CWE-ID: 680Integer Overflow to Buffer Overflow"
      priority: Essential
      details: "The product performs a calculation to determine how much memory to
        allocate, but an integer overflow can occur that causes less memory to
        be allocated than expected, leading to a buffer overflow.Guidelines:"
    - point: "CWE-ID: 681Incorrect Conversion between Numeric Types"
      priority: Essential
      details: "When converting from one data type to another, such as long to
        integer, data can be omitted or translated in a way that produces
        unexpected values. If the resulting values are used in a sensitive
        context, then dangerous behaviors may occur.Guidelines:"
    - point: "CWE-ID: 682Incorrect Calculation"
      priority: Essential
      details: "The product performs a calculation that generates incorrect or
        unintended results that are later used in security-critical decisions or
        resource management.Guidelines:::TYPE:Research Gap:NOTE:Weaknesses
        related to this Pillar appear to be under-studied, especially with
        respect to classification schemes. Input from academic and other
        communities could help identify and resolve gaps or organizational
        difficulties within CWE.::"
    - point: "CWE-ID: 683Function Call With Incorrect Order of Arguments"
      priority: Essential
      details: "The product calls a function, procedure, or routine, but the caller
        specifies the arguments in an incorrect order, leading to resultant
        weaknesses.Guidelines:"
    - point: "CWE-ID: 684Incorrect Provision of Specified Functionality"
      priority: Essential
      details: "The code does not function according to its published specifications,
        potentially leading to incorrect usage.Guidelines:"
    - point: "CWE-ID: 685Function Call With Incorrect Number of Arguments"
      priority: Essential
      details: "The product calls a function, procedure, or routine, but the caller
        specifies too many arguments, or too few arguments, which may lead to
        undefined behavior and resultant weaknesses.Guidelines:"
    - point: "CWE-ID: 686Function Call With Incorrect Argument Type"
      priority: Essential
      details: "The product calls a function, procedure, or routine, but the caller
        specifies an argument that is the wrong data type, which may lead to
        resultant weaknesses.Guidelines:"
    - point: "CWE-ID: 687Function Call With Incorrectly Specified Argument Value"
      priority: Essential
      details: "The product calls a function, procedure, or routine, but the caller
        specifies an argument that contains the wrong value, which may lead to
        resultant weaknesses.Guidelines:::TYPE:Relationship:NOTE:When primary,
        this weakness is most likely to occur in rarely-tested code, since the
        wrong value can change the semantic meaning of the program's execution
        and lead to obviously-incorrect behavior. It can also be resultant from
        issues in which the program assigns the wrong value to a variable, and
        that variable is later used in a function call. In that sense, this
        issue could be argued as having chaining relationships with many
        implementation errors in CWE.::"
    - point: "CWE-ID: 688Function Call With Incorrect Variable or Reference as
        Argument"
      priority: Essential
      details: "The product calls a function, procedure, or routine, but the caller
        specifies the wrong variable or reference as one of the arguments, which
        may lead to undefined behavior and resultant weaknesses.Guidelines:"
    - point: "CWE-ID: 689Permission Race Condition During Resource Copy"
      priority: Essential
      details: "The product, while copying or cloning a resource, does not set the
        resource's permissions or access control until the copy is complete,
        leaving the resource exposed to other spheres while the copy is taking
        place.Guidelines:::TYPE:Research Gap:NOTE:Under-studied. It seems likely
        that this weakness could occur in any situation in which a complex or
        large copy operation occurs, when the resource can be made available to
        other spheres as soon as it is created, but before its initialization is
        complete.::"
    - point: "CWE-ID: 690Unchecked Return Value to NULL Pointer Dereference"
      priority: Essential
      details: "The product does not check for an error after calling a function that
        can return with a NULL pointer if the function fails, which leads to a
        resultant NULL pointer dereference.Guidelines:"
    - point: "CWE-ID: 691Insufficient Control Flow Management"
      priority: Essential
      details: "The code does not sufficiently manage its control flow during
        execution, creating conditions in which the control flow can be modified
        in unexpected ways.Guidelines:"
    - point: "CWE-ID: 692Incomplete Denylist to Cross-Site Scripting"
      priority: Essential
      details: "The product uses a denylist-based protection mechanism to defend
        against XSS attacks, but the denylist is incomplete, allowing XSS
        variants to succeed.Guidelines:"
    - point: "CWE-ID: 693Protection Mechanism Failure"
      priority: Essential
      details: "The product does not use or incorrectly uses a protection mechanism
        that provides sufficient defense against directed attacks against the
        product.Guidelines:::TYPE:Research Gap:NOTE:The concept of protection
        mechanisms is well established, but protection mechanism failures have
        not been studied comprehensively. It is suspected that protection
        mechanisms can have significantly different types of weaknesses than the
        weaknesses that they are intended to prevent.::"
    - point: "CWE-ID: 694Use of Multiple Resources with Duplicate Identifier"
      priority: Essential
      details: "The product uses multiple resources that can have the same identifier,
        in a context in which unique identifiers are
        required.Guidelines:::TYPE:Relationship:NOTE:This weakness is probably
        closely associated with other issues related to doubling, such as
        CWE-675 (Duplicate Operations on Resource). It's often a case of an API
        contract violation (CWE-227).::"
    - point: "CWE-ID: 695Use of Low-Level Functionality"
      priority: Essential
      details: "The product uses low-level functionality that is explicitly prohibited
        by the framework or specification under which the product is supposed to
        operate.Guidelines:"
    - point: "CWE-ID: 696Incorrect Behavior Order"
      priority: Essential
      details: "The product performs multiple related behaviors, but the behaviors are
        performed in the wrong order in ways which may produce resultant
        weaknesses.Guidelines:"
    - point: "CWE-ID: 697Incorrect Comparison"
      priority: Essential
      details: "The product compares two entities in a security-relevant context, but
        the comparison is incorrect, which may lead to resultant
        weaknesses.Guidelines:::TYPE:Research Gap:NOTE:Weaknesses related to
        this Pillar appear to be under-studied, especially with respect to
        classification schemes. Input from academic and other communities could
        help identify and resolve gaps or organizational difficulties within
        CWE.::TYPE:Maintenance:NOTE:This entry likely has some relationships
        with case sensitivity (CWE-178), but case sensitivity is a factor in
        other types of weaknesses besides comparison. Also, in cryptography,
        certain attacks are possible when certain comparison operations do not
        take place in constant time, causing a timing-related information leak
        (CWE-208).::"
    - point: "CWE-ID: 698Execution After Redirect (EAR)"
      priority: Essential
      details: "The web application sends a redirect to another location, but instead
        of exiting, it executes additional code.Guidelines:"
    - point: "CWE-ID: 703Improper Check or Handling of Exceptional Conditions"
      priority: Essential
      details: "The product does not properly anticipate or handle exceptional
        conditions that rarely occur during normal operation of the
        product.Guidelines:::TYPE:Relationship:NOTE:This is a high-level class
        that might have some overlap with other classes. It could be argued that
        even normal weaknesses such as buffer overflows involve unusual or
        exceptional conditions. In that sense, this might be an inherent aspect
        of most other weaknesses within CWE, similar to API Abuse (CWE-227) and
        Indicator of Poor Code Quality (CWE-398). However, this entry is
        currently intended to unify disparate concepts that do not have other
        places within the Research Concepts view (CWE-1000).::"
    - point: "CWE-ID: 704Incorrect Type Conversion or Cast"
      priority: Essential
      details: "The product does not correctly convert an object, resource, or
        structure from one type to a different type.Guidelines:"
    - point: "CWE-ID: 705Incorrect Control Flow Scoping"
      priority: Essential
      details: "The product does not properly return control flow to the proper
        location after it has completed a task or detected an unusual
        condition.Guidelines:"
    - point: "CWE-ID: 706Use of Incorrectly-Resolved Name or Reference"
      priority: Essential
      details: "The product uses a name or reference to access a resource, but the
        name/reference resolves to a resource that is outside of the intended
        control sphere.Guidelines:"
    - point: "CWE-ID: 707Improper Neutralization"
      priority: Essential
      details: "The product does not ensure or incorrectly ensures that structured
        messages or data are well-formed and that certain security properties
        are met before being read from an upstream component or sent to a
        downstream component.Guidelines:::TYPE:Maintenance:NOTE:Concepts such as
        validation, data transformation, and neutralization are being refined,
        so relationships between CWE-20 and other entries such as CWE-707 may
        change in future versions, along with an update to the Vulnerability
        Theory document.::"
    - point: "CWE-ID: 708Incorrect Ownership Assignment"
      priority: Essential
      details: "The product assigns an owner to a resource, but the owner is outside
        of the intended control sphere.Guidelines:::TYPE:Maintenance:NOTE:This
        overlaps verification errors, permissions, and privileges. A closely
        related weakness is the incorrect assignment of groups to a resource. It
        is not clear whether it would fall under this entry or require a
        different entry.::"
    - point: "CWE-ID: 710Improper Adherence to Coding Standards"
      priority: Essential
      details: "The product does not follow certain coding rules for development,
        which can lead to resultant weaknesses or increase the severity of the
        associated vulnerabilities.Guidelines:"
    - point: "CWE-ID: 732Incorrect Permission Assignment for Critical Resource"
      priority: Essential
      details: "The product specifies permissions for a security-critical resource in
        a way that allows that resource to be read or modified by unintended
        actors.Guidelines:::TYPE:Maintenance:NOTE:The relationships between
        privileges, permissions, and actors (e.g. users and groups) need further
        refinement within the Research view. One complication is that these
        concepts apply to two different pillars, related to control of resources
        (CWE-664) and protection mechanism failures (CWE-693).::"
    - point: "CWE-ID: 733Compiler Optimization Removal or Modification of
        Security-critical Code"
      priority: Essential
      details: "The developer builds a security-critical protection mechanism into the
        software, but the compiler optimizes the program such that the mechanism
        is removed or modified.Guidelines:"
    - point: "CWE-ID: 749Exposed Dangerous Method or Function"
      priority: Essential
      details: "The product provides an Applications Programming Interface (API) or
        similar interface for interaction with external actors, but the
        interface includes a dangerous method or function that is not properly
        restricted.Guidelines:::TYPE:Research Gap:NOTE:Under-reported and
        under-studied. This weakness could appear in any technology, language,
        or framework that allows the programmer to provide a functional
        interface to external parties, but it is not heavily reported. In 2007,
        CVE began showing a notable increase in reports of exposed method
        vulnerabilities in ActiveX applications, as well as IOCTL access to
        OS-level resources. These weaknesses have been documented for Java
        applications in various secure programming sources, but there are few
        reports in CVE, which suggests limited awareness in most parts of the
        vulnerability research community.::"
    - point: "CWE-ID: 754Improper Check for Unusual or Exceptional Conditions"
      priority: Essential
      details: "The product does not check or incorrectly checks for unusual or
        exceptional conditions that are not expected to occur frequently during
        day to day operation of the
        product.Guidelines:::TYPE:Relationship:NOTE:Sometimes, when a return
        value can be used to indicate an error, an unchecked return value is a
        code-layer instance of a missing application-layer check for exceptional
        conditions. However, return values are not always needed to communicate
        exceptional conditions. For example, expiration of resources, values
        passed by reference, asynchronously modified data, sockets, etc. may
        indicate exceptional conditions without the use of a return value.::"
    - point: "CWE-ID: 755Improper Handling of Exceptional Conditions"
      priority: Essential
      details: "The product does not handle or incorrectly handles an exceptional
        condition.Guidelines:"
    - point: "CWE-ID: 756Missing Custom Error Page"
      priority: Essential
      details: "The product does not return custom error pages to the user, possibly
        exposing sensitive information.Guidelines:"
    - point: "CWE-ID: 757Selection of Less-Secure Algorithm During Negotiation
        ('Algorithm Downgrade')"
      priority: Essential
      details: "A protocol or its implementation supports interaction between multiple
        actors and allows those actors to negotiate which algorithm should be
        used as a protection mechanism such as encryption or authentication, but
        it does not select the strongest algorithm that is available to both
        parties.Guidelines:::TYPE:Relationship:NOTE:This is related to CWE-300,
        although not all downgrade attacks necessarily require an entity that
        redirects or interferes with the network. See examples.::"
    - point: "CWE-ID: 758Reliance on Undefined, Unspecified, or Implementation-Defined
        Behavior"
      priority: Essential
      details: "The product uses an API function, data structure, or other entity in a
        way that relies on properties that are not always guaranteed to hold for
        that entity.Guidelines:"
    - point: "CWE-ID: 759Use of a One-Way Hash without a Salt"
      priority: Essential
      details: "The product uses a one-way cryptographic hash against an input that
        should not be reversible, such as a password, but the product does not
        also use a salt as part of the input.Guidelines:"
    - point: "CWE-ID: 760Use of a One-Way Hash with a Predictable Salt"
      priority: Essential
      details: "The product uses a one-way cryptographic hash against an input that
        should not be reversible, such as a password, but the product uses a
        predictable salt as part of the
        input.Guidelines:::TYPE:Maintenance:NOTE:As of CWE 4.5, terminology
        related to randomness, entropy, and predictability can vary widely.
        Within the developer and other communities, randomness is used heavily.
        However, within cryptography, entropy is distinct, typically implied as
        a measurement. There are no commonly-used definitions, even within
        standards documents and cryptography papers. Future versions of CWE will
        attempt to define these terms and, if necessary, distinguish between
        them in ways that are appropriate for different communities but do not
        reduce the usability of CWE for mapping, understanding, or other
        scenarios.::"
    - point: "CWE-ID: 761Free of Pointer not at Start of Buffer"
      priority: Essential
      details: "The product calls free() on a pointer to a memory resource that was
        allocated on the heap, but the pointer is not at the start of the
        buffer.Guidelines:::TYPE:Maintenance:NOTE:Currently, CWE-763 is the
        parent, however it may be desirable to have an intermediate parent which
        is not function-specific, similar to how CWE-762 is an intermediate
        parent between CWE-763 and CWE-590.::"
    - point: "CWE-ID: 762Mismatched Memory Management Routines"
      priority: Essential
      details: "The product attempts to return a memory resource to the system, but it
        calls a release function that is not compatible with the function that
        was originally used to allocate that
        resource.Guidelines:::TYPE:Applicable Platform:NOTE:This weakness is
        possible in any programming language that allows manual management of
        memory.::"
    - point: "CWE-ID: 763Release of Invalid Pointer or Reference"
      priority: Essential
      details: "The product attempts to return a memory resource to the system, but it
        calls the wrong release function or calls the appropriate release
        function incorrectly.Guidelines:::TYPE:Maintenance:NOTE:The view-1000
        subtree that is associated with this weakness needs additional work.
        Several entries will likely be created in this branch. Currently the
        focus is on free() of memory, but delete and other related release
        routines may require the creation of intermediate entries that are not
        specific to a particular function. In addition, the role of other types
        of invalid pointers, such as an expired pointer, i.e. CWE-415 Double
        Free and release of uninitialized pointers, related to CWE-457.::"
    - point: "CWE-ID: 764Multiple Locks of a Critical Resource"
      priority: Essential
      details: "The product locks a critical resource more times than intended,
        leading to an unexpected state in the
        system.Guidelines:::TYPE:Maintenance:NOTE:An alternate way to think
        about this weakness is as an imbalance between the number of locks /
        unlocks in the control flow. Over the course of execution, if each lock
        call is not followed by a subsequent call to unlock in a reasonable
        amount of time, then system performance may be degraded or at least
        operating at less than peak levels if there is competition for the
        locks. This entry may need to be modified to reflect these concepts in
        the future.::"
    - point: "CWE-ID: 765Multiple Unlocks of a Critical Resource"
      priority: Essential
      details: "The product unlocks a critical resource more times than intended,
        leading to an unexpected state in the
        system.Guidelines:::TYPE:Maintenance:NOTE:An alternate way to think
        about this weakness is as an imbalance between the number of locks /
        unlocks in the control flow. Over the course of execution, if each lock
        call is not followed by a subsequent call to unlock in a reasonable
        amount of time, then system performance may be degraded or at least
        operating at less than peak levels if there is competition for the
        locks. This entry may need to be modified to reflect these concepts in
        the future.::"
    - point: "CWE-ID: 766Critical Data Element Declared Public"
      priority: Essential
      details: "The product declares a critical variable, field, or member to be
        public when intended security policy requires it to be
        private.Guidelines:"
    - point: "CWE-ID: 767Access to Critical Private Variable via Public Method"
      priority: Essential
      details: "The product defines a public method that reads or modifies a private
        variable.Guidelines:::TYPE:Maintenance:NOTE:This entry is closely
        associated with access control for public methods. If the public methods
        are restricted with proper access controls, then the information in the
        private variable will not be exposed to unexpected parties. There may be
        chaining or composite relationships between improper access controls and
        this weakness.::"
    - point: "CWE-ID: 768Incorrect Short Circuit Evaluation"
      priority: Essential
      details: "The product contains a conditional statement with multiple logical
        expressions in which one of the non-leading expressions may produce side
        effects. This may lead to an unexpected state in the program after the
        execution of the conditional, because short-circuiting logic may prevent
        the side effects from occurring.Guidelines:"
    - point: "CWE-ID: 770Allocation of Resources Without Limits or Throttling"
      priority: Essential
      details: "The product allocates a reusable resource or group of resources on
        behalf of an actor without imposing any restrictions on the size or
        number of resources that can be allocated, in violation of the intended
        security policy for that actor.Guidelines:::TYPE:Relationship:NOTE:This
        entry is different from uncontrolled resource consumption (CWE-400) in
        that there are other weaknesses that are related to inability to control
        resource consumption, such as holding on to a resource too long after
        use, or not correctly keeping track of active resources so that they can
        be managed and released when they are finished
        (CWE-771).::TYPE:Theoretical:NOTE:Vulnerability theory is largely about
        how behaviors and resources interact. Resource exhaustion can be
        regarded as either a consequence or an attack, depending on the
        perspective. This entry is an attempt to reflect one of the underlying
        weaknesses that enable these attacks (or consequences) to take place.::"
    - point: "CWE-ID: 771Missing Reference to Active Allocated Resource"
      priority: Essential
      details: "The product does not properly maintain a reference to a resource that
        has been allocated, which prevents the resource from being
        reclaimed.Guidelines:"
    - point: "CWE-ID: 772Missing Release of Resource after Effective Lifetime"
      priority: Essential
      details: "The product does not release a resource after its effective lifetime
        has ended, i.e., after the resource is no longer
        needed.Guidelines:::TYPE:Maintenance:NOTE:Resource exhaustion (CWE-400)
        is currently treated as a weakness, although it is more like a category
        of weaknesses that all have the same type of consequence. While this
        entry treats CWE-400 as a parent in view 1000, the relationship is
        probably more appropriately described as a
        chain.::TYPE:Theoretical:NOTE:Vulnerability theory is largely about how
        behaviors and resources interact. Resource exhaustion can be regarded as
        either a consequence or an attack, depending on the perspective. This
        entry is an attempt to reflect one of the underlying weaknesses that
        enable these attacks (or consequences) to take place.::"
    - point: "CWE-ID: 773Missing Reference to Active File Descriptor or Handle"
      priority: Essential
      details: "The product does not properly maintain references to a file descriptor
        or handle, which prevents that file descriptor/handle from being
        reclaimed.Guidelines:"
    - point: "CWE-ID: 774Allocation of File Descriptors or Handles Without Limits or
        Throttling"
      priority: Essential
      details: "The product allocates file descriptors or handles on behalf of an
        actor without imposing any restrictions on how many descriptors can be
        allocated, in violation of the intended security policy for that
        actor.Guidelines:"
    - point: "CWE-ID: 775Missing Release of File Descriptor or Handle after Effective
        Lifetime"
      priority: Essential
      details: "The product does not release a file descriptor or handle after its
        effective lifetime has ended, i.e., after the file descriptor/handle is
        no longer needed.Guidelines:"
    - point: "CWE-ID: 776Improper Restriction of Recursive Entity References in DTDs
        ('XML Entity Expansion')"
      priority: Essential
      details: "The product uses XML documents and allows their structure to be
        defined with a Document Type Definition (DTD), but it does not properly
        control the number of recursive definitions of entities.Guidelines:"
    - point: "CWE-ID: 777Regular Expression without Anchors"
      priority: Essential
      details: "The product uses a regular expression to perform neutralization, but
        the regular expression is not anchored and may allow malicious or
        malformed data to slip through.Guidelines:"
    - point: "CWE-ID: 778Insufficient Logging"
      priority: Essential
      details: "When a security-critical event occurs, the product either does not
        record the event or omits important details about the event when logging
        it.Guidelines:"
    - point: "CWE-ID: 779Logging of Excessive Data"
      priority: Essential
      details: "The product logs too much information, making log files hard to
        process and possibly hindering recovery efforts or forensic analysis
        after an attack.Guidelines:"
    - point: "CWE-ID: 780Use of RSA Algorithm without OAEP"
      priority: Essential
      details: "The product uses the RSA algorithm but does not incorporate Optimal
        Asymmetric Encryption Padding (OAEP), which might weaken the
        encryption.Guidelines:::TYPE:Maintenance:NOTE:This entry could probably
        have a new parent related to improper padding, however the role of
        padding in cryptographic algorithms can vary, such as hiding the length
        of the plaintext and providing additional random bits for the cipher. In
        general, cryptographic problems in CWE are not well organized and
        further research is needed.::"
    - point: "CWE-ID: 781Improper Address Validation in IOCTL with METHOD_NEITHER I/O
        Control Code"
      priority: Essential
      details: "The product defines an IOCTL that uses METHOD_NEITHER for I/O, but it
        does not validate or incorrectly validates the addresses that are
        provided.Guidelines:::TYPE:Applicable Platform:NOTE:Because IOCTL
        functionality is typically performing low-level actions and closely
        interacts with the operating system, this weakness may only appear in
        code that is written in low-level languages.::TYPE:Research
        Gap:NOTE:While this type of issue has been known since 2006, it is
        probably still under-studied and under-reported. Most of the focus has
        been on high-profile software and security products, but other kinds of
        system software also use drivers. Since exploitation requires the
        development of custom code, it requires some skill to find this
        weakness. Because exploitation typically requires local privileges, it
        might not be a priority for active attackers. However, remote
        exploitation may be possible for software such as device drivers. Even
        when remote vectors are not available, it may be useful as the final
        privilege-escalation step in multi-stage remote attacks against
        application-layer software, or as the primary attack by a local user on
        a multi-user system.::"
    - point: "CWE-ID: 782Exposed IOCTL with Insufficient Access Control"
      priority: Essential
      details: "The product implements an IOCTL with functionality that should be
        restricted, but it does not properly enforce access control for the
        IOCTL.Guidelines:::TYPE:Relationship:NOTE:This can be primary to many
        other weaknesses when the programmer assumes that the IOCTL can only be
        accessed by trusted parties. For example, a program or driver might not
        validate incoming addresses in METHOD_NEITHER IOCTLs in Windows
        environments (CWE-781), which could allow buffer overflow and similar
        attacks to take place, even when the attacker never should have been
        able to access the IOCTL at all.::TYPE:Applicable Platform:NOTE:Because
        IOCTL functionality is typically performing low-level actions and
        closely interacts with the operating system, this weakness may only
        appear in code that is written in low-level languages.::"
    - point: "CWE-ID: 783Operator Precedence Logic Error"
      priority: Essential
      details: "The product uses an expression in which operator precedence causes
        incorrect logic to be used.Guidelines:"
    - point: "CWE-ID: 784Reliance on Cookies without Validation and Integrity Checking
        in a Security Decision"
      priority: Essential
      details: "The product uses a protection mechanism that relies on the existence
        or values of a cookie, but it does not properly ensure that the cookie
        is valid for the associated user.Guidelines:::TYPE:Maintenance:NOTE:A
        new parent might need to be defined for this entry. This entry is
        specific to cookies, which reflects the significant number of
        vulnerabilities being reported for cookie-based authentication in CVE
        during 2008 and 2009. However, other types of inputs - such as
        parameters or headers - could also be used for similar authentication or
        authorization. Similar issues (under the Research view) include CWE-247
        and CWE-472.::"
    - point: "CWE-ID: 785Use of Path Manipulation Function without Maximum-sized
        Buffer"
      priority: Essential
      details: "The product invokes a function for normalizing paths or file names,
        but it provides an output buffer that is smaller than the maximum
        possible size, such as PATH_MAX.Guidelines:::TYPE:Maintenance:NOTE:This
        entry is at a much lower level of abstraction than most entries because
        it is function-specific. It also has significant overlap with other
        entries that can vary depending on the perspective. For example,
        incorrect usage could trigger either a stack-based overflow (CWE-121) or
        a heap-based overflow (CWE-122). The CWE team has not decided how to
        handle such entries.::"
    - point: "CWE-ID: 786Access of Memory Location Before Start of Buffer"
      priority: Essential
      details: "The product reads or writes to a buffer using an index or pointer that
        references a memory location prior to the beginning of the
        buffer.Guidelines:"
    - point: "CWE-ID: 787Out-of-bounds Write"
      priority: Essential
      details: "The product writes data past the end, or before the beginning, of the
        intended buffer.Guidelines:"
    - point: "CWE-ID: 788Access of Memory Location After End of Buffer"
      priority: Essential
      details: "The product reads or writes to a buffer using an index or pointer that
        references a memory location after the end of the buffer.Guidelines:"
    - point: "CWE-ID: 789Memory Allocation with Excessive Size Value"
      priority: Essential
      details: "The product allocates memory based on an untrusted, large size value,
        but it does not ensure that the size is within expected limits, allowing
        arbitrary amounts of memory to be
        allocated.Guidelines:::TYPE:Relationship:NOTE:This weakness can be
        closely associated with integer overflows (CWE-190). Integer overflow
        attacks would concentrate on providing an extremely large number that
        triggers an overflow that causes less memory to be allocated than
        expected. By providing a large value that does not trigger an integer
        overflow, the attacker could still cause excessive amounts of memory to
        be allocated.::TYPE:Applicable Platform:NOTE:Uncontrolled memory
        allocation is possible in many languages, such as dynamic array
        allocation in perl or initial size parameters in Collections in Java.
        However, languages like C and C++ where programmers have the power to
        more directly control memory management will be more susceptible.::"
    - point: "CWE-ID: 790Improper Filtering of Special Elements"
      priority: Essential
      details: "The product receives data from an upstream component, but does not
        filter or incorrectly filters special elements before sending it to a
        downstream component.Guidelines:"
    - point: "CWE-ID: 791Incomplete Filtering of Special Elements"
      priority: Essential
      details: "The product receives data from an upstream component, but does not
        completely filter special elements before sending it to a downstream
        component.Guidelines:"
    - point: "CWE-ID: 792Incomplete Filtering of One or More Instances of Special
        Elements"
      priority: Essential
      details: "The product receives data from an upstream component, but does not
        completely filter one or more instances of special elements before
        sending it to a downstream component.Guidelines:"
    - point: "CWE-ID: 793Only Filtering One Instance of a Special Element"
      priority: Essential
      details: "The product receives data from an upstream component, but only filters
        a single instance of a special element before sending it to a downstream
        component.Guidelines:"
    - point: "CWE-ID: 794Incomplete Filtering of Multiple Instances of Special
        Elements"
      priority: Essential
      details: "The product receives data from an upstream component, but does not
        filter all instances of a special element before sending it to a
        downstream component.Guidelines:"
    - point: "CWE-ID: 795Only Filtering Special Elements at a Specified Location"
      priority: Essential
      details: "The product receives data from an upstream component, but only
        accounts for special elements at a specified location, thereby missing
        remaining special elements that may exist before sending it to a
        downstream component.Guidelines:"
    - point: "CWE-ID: 796Only Filtering Special Elements Relative to a Marker"
      priority: Essential
      details: "The product receives data from an upstream component, but only
        accounts for special elements positioned relative to a marker (e.g. at
        the beginning/end of a string; the second argument), thereby missing
        remaining special elements that may exist before sending it to a
        downstream component.Guidelines:"
    - point: "CWE-ID: 797Only Filtering Special Elements at an Absolute Position"
      priority: Essential
      details: "The product receives data from an upstream component, but only
        accounts for special elements at an absolute position (e.g. byte number
        10), thereby missing remaining special elements that may exist before
        sending it to a downstream component.Guidelines:"
    - point: "CWE-ID: 798Use of Hard-coded Credentials"
      priority: Essential
      details: "The product contains hard-coded credentials, such as a password or
        cryptographic key, which it uses for its own inbound authentication,
        outbound communication to external components, or encryption of internal
        data.Guidelines:::TYPE:Maintenance:NOTE:The Taxonomy_Mappings to ISA/IEC
        62443 were added in CWE 4.10, but they are still under review and might
        change in future CWE versions. These draft mappings were performed by
        members of the Mapping CWE to 62443 subgroup of the CWE-CAPEC ICS/OT
        Special Interest Group (SIG), and their work is incomplete as of CWE
        4.10. The mappings are included to facilitate discussion and review by
        the broader ICS/OT community, and they are likely to change in future
        CWE versions.::"
    - point: "CWE-ID: 799Improper Control of Interaction Frequency"
      priority: Essential
      details: "The product does not properly limit the number or frequency of
        interactions that it has with an actor, such as the number of incoming
        requests.Guidelines:"
    - point: "CWE-ID: 804Guessable CAPTCHA"
      priority: Essential
      details: "The product uses a CAPTCHA challenge, but the challenge can be guessed
        or automatically recognized by a non-human actor.Guidelines:"
    - point: "CWE-ID: 805Buffer Access with Incorrect Length Value"
      priority: Essential
      details: "The product uses a sequential operation to read or write a buffer, but
        it uses an incorrect length value that causes it to access memory that
        is outside of the bounds of the buffer.Guidelines:"
    - point: "CWE-ID: 806Buffer Access Using Size of Source Buffer"
      priority: Essential
      details: "The product uses the size of a source buffer when reading from or
        writing to a destination buffer, which may cause it to access memory
        that is outside of the bounds of the buffer.Guidelines:"
    - point: "CWE-ID: 807Reliance on Untrusted Inputs in a Security Decision"
      priority: Essential
      details: "The product uses a protection mechanism that relies on the existence
        or values of an input, but the input can be modified by an untrusted
        actor in a way that bypasses the protection mechanism.Guidelines:"
    - point: "CWE-ID: 820Missing Synchronization"
      priority: Essential
      details: "The product utilizes a shared resource in a concurrent manner but does
        not attempt to synchronize access to the
        resource.Guidelines:::TYPE:Maintenance:NOTE:Deeper research is necessary
        for synchronization and related mechanisms, including locks, mutexes,
        semaphores, and other mechanisms. Multiple entries are dependent on this
        research, which includes relationships to concurrency, race conditions,
        reentrant functions, etc. CWE-662 and its children - including CWE-667,
        CWE-820, CWE-821, and others - may need to be modified significantly,
        along with their relationships.::"
    - point: "CWE-ID: 821Incorrect Synchronization"
      priority: Essential
      details: "The product utilizes a shared resource in a concurrent manner, but it
        does not correctly synchronize access to the
        resource.Guidelines:::TYPE:Maintenance:NOTE:Deeper research is necessary
        for synchronization and related mechanisms, including locks, mutexes,
        semaphores, and other mechanisms. Multiple entries are dependent on this
        research, which includes relationships to concurrency, race conditions,
        reentrant functions, etc. CWE-662 and its children - including CWE-667,
        CWE-820, CWE-821, and others - may need to be modified significantly,
        along with their relationships.::"
    - point: "CWE-ID: 822Untrusted Pointer Dereference"
      priority: Essential
      details: "The product obtains a value from an untrusted source, converts this
        value to a pointer, and dereferences the resulting
        pointer.Guidelines:::TYPE:Maintenance:NOTE:There are close relationships
        between incorrect pointer dereferences and other weaknesses related to
        buffer operations. There may not be sufficient community agreement
        regarding these relationships. Further study is needed to determine when
        these relationships are chains, composites, perspective/layering, or
        other types of relationships. As of September 2010, most of the
        relationships are being captured as chains.::TYPE:Terminology:NOTE:Many
        weaknesses related to pointer dereferences fall under the general term
        of memory corruption or memory safety. As of September 2010, there is no
        commonly-used terminology that covers the lower-level variants.::"
    - point: "CWE-ID: 823Use of Out-of-range Pointer Offset"
      priority: Essential
      details: "The product performs pointer arithmetic on a valid pointer, but it
        uses an offset that can point outside of the intended range of valid
        memory locations for the resulting
        pointer.Guidelines:::TYPE:Maintenance:NOTE:There are close relationships
        between incorrect pointer dereferences and other weaknesses related to
        buffer operations. There may not be sufficient community agreement
        regarding these relationships. Further study is needed to determine when
        these relationships are chains, composites, perspective/layering, or
        other types of relationships. As of September 2010, most of the
        relationships are being captured as chains.::TYPE:Terminology:NOTE:Many
        weaknesses related to pointer dereferences fall under the general term
        of memory corruption or memory safety. As of September 2010, there is no
        commonly-used terminology that covers the lower-level variants.::"
    - point: "CWE-ID: 824Access of Uninitialized Pointer"
      priority: Essential
      details: "The product accesses or uses a pointer that has not been
        initialized.Guidelines:::TYPE:Maintenance:NOTE:There are close
        relationships between incorrect pointer dereferences and other
        weaknesses related to buffer operations. There may not be sufficient
        community agreement regarding these relationships. Further study is
        needed to determine when these relationships are chains, composites,
        perspective/layering, or other types of relationships. As of September
        2010, most of the relationships are being captured as
        chains.::TYPE:Terminology:NOTE:Many weaknesses related to pointer
        dereferences fall under the general term of memory corruption or memory
        safety. As of September 2010, there is no commonly-used terminology that
        covers the lower-level variants.::"
    - point: "CWE-ID: 825Expired Pointer Dereference"
      priority: Essential
      details: "The product dereferences a pointer that contains a location for memory
        that was previously valid, but is no longer
        valid.Guidelines:::TYPE:Maintenance:NOTE:There are close relationships
        between incorrect pointer dereferences and other weaknesses related to
        buffer operations. There may not be sufficient community agreement
        regarding these relationships. Further study is needed to determine when
        these relationships are chains, composites, perspective/layering, or
        other types of relationships. As of September 2010, most of the
        relationships are being captured as chains.::TYPE:Terminology:NOTE:Many
        weaknesses related to pointer dereferences fall under the general term
        of memory corruption or memory safety. As of September 2010, there is no
        commonly-used terminology that covers the lower-level variants.::"
    - point: "CWE-ID: 826Premature Release of Resource During Expected Lifetime"
      priority: Essential
      details: "The product releases a resource that is still intended to be used by
        itself or another actor.Guidelines:::TYPE:Research
        Gap:NOTE:Under-studied and under-reported as of September 2010. This
        weakness has been reported in high-visibility software, although the
        focus has been primarily on memory allocation and de-allocation. There
        are very few examples of this weakness that are not directly related to
        memory management, although such weaknesses are likely to occur in
        real-world software for other types of resources.::"
    - point: "CWE-ID: 827Improper Control of Document Type Definition"
      priority: Essential
      details: "The product does not restrict a reference to a Document Type
        Definition (DTD) to the intended control sphere. This might allow
        attackers to reference arbitrary DTDs, possibly causing the product to
        expose files, consume excessive system resources, or execute arbitrary
        http requests on behalf of the attacker.Guidelines:"
    - point: "CWE-ID: 828Signal Handler with Functionality that is not
        Asynchronous-Safe"
      priority: Essential
      details: "The product defines a signal handler that contains code sequences that
        are not asynchronous-safe, i.e., the functionality is not reentrant, or
        it can be interrupted.Guidelines:"
    - point: "CWE-ID: 829Inclusion of Functionality from Untrusted Control Sphere"
      priority: Essential
      details: "The product imports, requires, or includes executable functionality
        (such as a library) from a source that is outside of the intended
        control sphere.Guidelines:"
    - point: "CWE-ID: 830Inclusion of Web Functionality from an Untrusted Source"
      priority: Essential
      details: "The product includes web functionality (such as a web widget) from
        another domain, which causes it to operate within the domain of the
        product, potentially granting total access and control of the product to
        the untrusted source.Guidelines:"
    - point: "CWE-ID: 831Signal Handler Function Associated with Multiple Signals"
      priority: Essential
      details: "The product defines a function that is used as a handler for more than
        one signal.Guidelines:"
    - point: "CWE-ID: 832Unlock of a Resource that is not Locked"
      priority: Essential
      details: "The product attempts to unlock a resource that is not
        locked.Guidelines:"
    - point: "CWE-ID: 833Deadlock"
      priority: Essential
      details: "The product contains multiple threads or executable segments that are
        waiting for each other to release a necessary lock, resulting in
        deadlock.Guidelines:"
    - point: "CWE-ID: 834Excessive Iteration"
      priority: Essential
      details: "The product performs an iteration or loop without sufficiently
        limiting the number of times that the loop is executed.Guidelines:"
    - point: "CWE-ID: 835Loop with Unreachable Exit Condition ('Infinite Loop')"
      priority: Essential
      details: "The product contains an iteration or loop with an exit condition that
        cannot be reached, i.e., an infinite loop.Guidelines:"
    - point: "CWE-ID: 836Use of Password Hash Instead of Password for Authentication"
      priority: Essential
      details: "The product records password hashes in a data store, receives a hash
        of a password from a client, and compares the supplied hash to the hash
        obtained from the data store.Guidelines:"
    - point: "CWE-ID: 837Improper Enforcement of a Single, Unique Action"
      priority: Essential
      details: "The product requires that an actor should only be able to perform an
        action once, or to have only one unique action, but the product does not
        enforce or improperly enforces this restriction.Guidelines:"
    - point: "CWE-ID: 838Inappropriate Encoding for Output Context"
      priority: Essential
      details: "The product uses or specifies an encoding when generating output to a
        downstream component, but the specified encoding is not the same as the
        encoding that is expected by the downstream component.Guidelines:"
    - point: "CWE-ID: 839Numeric Range Comparison Without Minimum Check"
      priority: Essential
      details: "The product checks a value to ensure that it is less than or equal to
        a maximum, but it does not also verify that the value is greater than or
        equal to the minimum.Guidelines:"
    - point: "CWE-ID: 841Improper Enforcement of Behavioral Workflow"
      priority: Essential
      details: "The product supports a session in which more than one behavior must be
        performed by an actor, but it does not properly ensure that the actor
        performs the behaviors in the required
        sequence.Guidelines:::TYPE:Research Gap:NOTE:This weakness is typically
        associated with business logic flaws, except when it produces resultant
        weaknesses. The classification of business logic flaws has been
        under-studied, although exploitation of business flaws frequently
        happens in real-world systems, and many applied vulnerability
        researchers investigate them. The greatest focus is in web applications.
        There is debate within the community about whether these problems
        represent particularly new concepts, or if they are variations of
        well-known principles. Many business logic flaws appear to be oriented
        toward business processes, application flows, and sequences of
        behaviors, which are not as well-represented in CWE as weaknesses
        related to input validation, memory management, etc.::"
    - point: "CWE-ID: 842Placement of User into Incorrect Group"
      priority: Essential
      details: "The product or the administrator places a user into an incorrect
        group.Guidelines:"
    - point: "CWE-ID: 843Access of Resource Using Incompatible Type ('Type
        Confusion')"
      priority: Essential
      details: "The product allocates or initializes a resource such as a pointer,
        object, or variable using one type, but it later accesses that resource
        using a type that is incompatible with the original
        type.Guidelines:::TYPE:Applicable Platform:NOTE:This weakness is
        possible in any type-unsafe programming language.::TYPE:Research
        Gap:NOTE:Type confusion weaknesses have received some attention by
        applied researchers and major software vendors for C and C++ code. Some
        publicly-reported vulnerabilities probably have type confusion as a
        root-cause weakness, but these may be described as memory corruption
        instead. For other languages, there are very few public reports of type
        confusion weaknesses. These are probably under-studied. Since many
        programs rely directly or indirectly on loose typing, a potential type
        confusion behavior might be intentional, possibly requiring more manual
        analysis.::"
    - point: "CWE-ID: 862Missing Authorization"
      priority: Essential
      details: "The product does not perform an authorization check when an actor
        attempts to access a resource or perform an action.Guidelines:"
    - point: "CWE-ID: 863Incorrect Authorization"
      priority: Essential
      details: "The product performs an authorization check when an actor attempts to
        access a resource or perform an action, but it does not correctly
        perform the check. This allows attackers to bypass intended access
        restrictions.Guidelines:"
    - point: "CWE-ID: 908Use of Uninitialized Resource"
      priority: Essential
      details: "The product uses or accesses a resource that has not been
        initialized.Guidelines:"
    - point: "CWE-ID: 909Missing Initialization of Resource"
      priority: Essential
      details: "The product does not initialize a critical resource.Guidelines:"
    - point: "CWE-ID: 910Use of Expired File Descriptor"
      priority: Essential
      details: "The product uses or accesses a file descriptor after it has been
        closed.Guidelines:"
    - point: "CWE-ID: 911Improper Update of Reference Count"
      priority: Essential
      details: "The product uses a reference count to manage a resource, but it does
        not update or incorrectly updates the reference count.Guidelines:"
    - point: "CWE-ID: 912Hidden Functionality"
      priority: Essential
      details: "The product contains functionality that is not documented, not part of
        the specification, and not accessible through an interface or command
        sequence that is obvious to the product's users or
        administrators.Guidelines:"
    - point: "CWE-ID: 913Improper Control of Dynamically-Managed Code Resources"
      priority: Essential
      details: "The product does not properly restrict reading from or writing to
        dynamically-managed code resources such as variables, objects, classes,
        attributes, functions, or executable instructions or
        statements.Guidelines:"
    - point: "CWE-ID: 914Improper Control of Dynamically-Identified Variables"
      priority: Essential
      details: "The product does not properly restrict reading from or writing to
        dynamically-identified variables.Guidelines:"
    - point: "CWE-ID: 915Improperly Controlled Modification of Dynamically-Determined
        Object Attributes"
      priority: Essential
      details: "The product receives input from an upstream component that specifies
        multiple attributes, properties, or fields that are to be initialized or
        updated in an object, but it does not properly control which attributes
        can be modified.Guidelines:::TYPE:Maintenance:NOTE:The relationships
        between CWE-502 and CWE-915 need further exploration. CWE-915 is more
        narrowly scoped to object modification, and is not necessarily used for
        deserialization.::"
    - point: "CWE-ID: 916Use of Password Hash With Insufficient Computational Effort"
      priority: Essential
      details: "The product generates a hash for a password, but it uses a scheme that
        does not provide a sufficient level of computational effort that would
        make password cracking attacks infeasible or expensive.Guidelines:"
    - point: "CWE-ID: 917Improper Neutralization of Special Elements used in an
        Expression Language Statement ('Expression Language Injection')"
      priority: Essential
      details: "The product constructs all or part of an expression language (EL)
        statement in a framework such as a Java Server Page (JSP) using
        externally-influenced input from an upstream component, but it does not
        neutralize or incorrectly neutralizes special elements that could modify
        the intended EL statement before it is
        executed.Guidelines:::TYPE:Maintenance:NOTE:The interrelationships and
        differences between CWE-917 and CWE-1336 need to be further
        clarified.::TYPE:Relationship:NOTE:In certain versions of Spring 3.0.5
        and earlier, there was a vulnerability (CVE-2011-2730) in which
        Expression Language tags would be evaluated twice, which effectively
        exposed any application to EL injection. However, even for later
        versions, this weakness is still possible depending on configuration.::"
    - point: "CWE-ID: 918Server-Side Request Forgery (SSRF)"
      priority: Essential
      details: "The web server receives a URL or similar request from an upstream
        component and retrieves the contents of this URL, but it does not
        sufficiently ensure that the request is being sent to the expected
        destination.Guidelines:::TYPE:Relationship:NOTE:CWE-918 (SSRF) and
        CWE-611 (XXE) are closely related, because they both involve web-related
        technologies and can launch outbound requests to unexpected
        destinations. However, XXE can be performed client-side, or in other
        contexts in which the software is not acting directly as a server, so
        the Server portion of the SSRF acronym does not necessarily apply.::"
    - point: "CWE-ID: 920Improper Restriction of Power Consumption"
      priority: Essential
      details: "The product operates in an environment in which power is a limited
        resource that cannot be automatically replenished, but the product does
        not properly restrict the amount of power that its operation
        consumes.Guidelines:"
    - point: "CWE-ID: 921Storage of Sensitive Data in a Mechanism without Access
        Control"
      priority: Essential
      details: "The product stores sensitive information in a file system or device
        that does not have built-in access control.Guidelines:"
    - point: "CWE-ID: 922Insecure Storage of Sensitive Information"
      priority: Essential
      details: "The product stores sensitive information without properly limiting
        read or write access by unauthorized
        actors.Guidelines:::TYPE:Relationship:NOTE:There is an overlapping
        relationship between insecure storage of sensitive information (CWE-922)
        and missing encryption of sensitive information (CWE-311). Encryption is
        often used to prevent an attacker from reading the sensitive data.
        However, encryption does not prevent the attacker from erasing or
        overwriting the data. While data tampering would be visible upon
        inspection, the integrity and availability of the data is compromised
        prior to the audit.::TYPE:Maintenance:NOTE:This is a high-level entry
        that includes children from various parts of the CWE research view
        (CWE-1000). Currently, most of the information is in these child
        entries. This entry will be made more comprehensive in later CWE
        versions.::"
    - point: "CWE-ID: 923Improper Restriction of Communication Channel to Intended
        Endpoints"
      priority: Essential
      details: "The product establishes a communication channel to (or from) an
        endpoint for privileged or protected operations, but it does not
        properly ensure that it is communicating with the correct
        endpoint.Guidelines:"
    - point: "CWE-ID: 924Improper Enforcement of Message Integrity During Transmission
        in a Communication Channel"
      priority: Essential
      details: "The product establishes a communication channel with an endpoint and
        receives a message from that endpoint, but it does not sufficiently
        ensure that the message was not modified during
        transmission.Guidelines:::TYPE:Maintenance:NOTE:This entry should be
        made more comprehensive in later CWE versions, as it is likely an
        important design flaw that underlies (or chains to) other weaknesses.::"
    - point: "CWE-ID: 925Improper Verification of Intent by Broadcast Receiver"
      priority: Essential
      details: "The Android application uses a Broadcast Receiver that receives an
        Intent but does not properly verify that the Intent came from an
        authorized source.Guidelines:::TYPE:Maintenance:NOTE:This entry will be
        made more comprehensive in later CWE versions.::"
    - point: "CWE-ID: 926Improper Export of Android Application Components"
      priority: Essential
      details: "The Android application exports a component for use by other
        applications, but does not properly restrict which applications can
        launch the component or access the data it contains.Guidelines:"
    - point: "CWE-ID: 927Use of Implicit Intent for Sensitive Communication"
      priority: Essential
      details: "The Android application uses an implicit intent for transmitting
        sensitive data to other applications.Guidelines:"
    - point: "CWE-ID: 939Improper Authorization in Handler for Custom URL Scheme"
      priority: Essential
      details: "The product uses a handler for a custom URL scheme, but it does not
        properly restrict which actors can invoke the handler using the
        scheme.Guidelines:"
    - point: "CWE-ID: 940Improper Verification of Source of a Communication Channel"
      priority: Essential
      details: "The product establishes a communication channel to handle an incoming
        request that has been initiated by an actor, but it does not properly
        verify that the request is coming from the expected
        origin.Guidelines:::TYPE:Relationship:NOTE:While many access control
        issues involve authenticating the user, this weakness is more about
        authenticating the actual source of the communication channel itself;
        there might not be any user in such cases.::"
    - point: "CWE-ID: 941Incorrectly Specified Destination in a Communication Channel"
      priority: Essential
      details: "The product creates a communication channel to initiate an outgoing
        request to an actor, but it does not correctly specify the intended
        destination for that actor.Guidelines:"
    - point: "CWE-ID: 942Permissive Cross-domain Policy with Untrusted Domains"
      priority: Essential
      details: "The product uses a cross-domain policy file that includes domains that
        should not be trusted.Guidelines:"
    - point: "CWE-ID: 943Improper Neutralization of Special Elements in Data Query
        Logic"
      priority: Essential
      details: "The product generates a query intended to access or manipulate data in
        a data store such as a database, but it does not neutralize or
        incorrectly neutralizes special elements that can modify the intended
        logic of the query.Guidelines:::TYPE:Relationship:NOTE:It could be
        argued that data query languages are effectively a command language -
        albeit with a limited set of commands - and thus any query-language
        injection issue could be treated as a child of CWE-74. However, CWE-943
        is intended to better organize query-oriented issues to separate them
        from fully-functioning programming languages, and also to provide a more
        precise identifier for the many query languages that do not have their
        own CWE identifier.::"
    - point: "CWE-ID: 1004Sensitive Cookie Without 'HttpOnly' Flag"
      priority: Essential
      details: "The product uses a cookie to store sensitive information, but the
        cookie is not marked with the HttpOnly flag.Guidelines:"
    - point: "CWE-ID: 1007Insufficient Visual Distinction of Homoglyphs Presented to
        User"
      priority: Essential
      details: "The product displays information or identifiers to a user, but the
        display mechanism does not make it easy for the user to distinguish
        between visually similar or identical glyphs (homoglyphs), which may
        cause the user to misinterpret a glyph and perform an unintended,
        insecure action.Guidelines:"
    - point: "CWE-ID: 1021Improper Restriction of Rendered UI Layers or Frames"
      priority: Essential
      details: "The web application does not restrict or incorrectly restricts frame
        objects or UI layers that belong to another application or domain, which
        can lead to user confusion about which interface the user is interacting
        with.Guidelines:"
    - point: "CWE-ID: 1022Use of Web Link to Untrusted Target with window.opener
        Access"
      priority: Essential
      details: "The web application produces links to untrusted external sites outside
        of its sphere of control, but it does not properly prevent the external
        site from modifying security-critical properties of the window.opener
        object, such as the location property.Guidelines:"
    - point: "CWE-ID: 1023Incomplete Comparison with Missing Factors"
      priority: Essential
      details: "The product performs a comparison between entities that must consider
        multiple factors or characteristics of each entity, but the comparison
        does not include one or more of these factors.Guidelines:"
    - point: "CWE-ID: 1024Comparison of Incompatible Types"
      priority: Essential
      details: "The product performs a comparison between two entities, but the
        entities are of different, incompatible types that cannot be guaranteed
        to provide correct results when they are directly compared.Guidelines:"
    - point: "CWE-ID: 1025Comparison Using Wrong Factors"
      priority: Essential
      details: "The code performs a comparison between two entities, but the
        comparison examines the wrong factors or characteristics of the
        entities, which can lead to incorrect results and resultant
        weaknesses.Guidelines:"
    - point: "CWE-ID: 1037Processor Optimization Removal or Modification of
        Security-critical Code"
      priority: Essential
      details: "The developer builds a security-critical protection mechanism into the
        software, but the processor optimizes the execution of the program such
        that the mechanism is removed or
        modified.Guidelines:::TYPE:Maintenance:NOTE:As of CWE 4.9, members of
        the CWE Hardware SIG are closely analyzing this entry and others to
        improve CWE's coverage of transient execution weaknesses, which include
        issues related to Spectre, Meltdown, and other attacks. Additional
        investigation may include other weaknesses related to microarchitectural
        state. As a result, this entry might change significantly in CWE
        4.10.::"
    - point: "CWE-ID: 1038Insecure Automated Optimizations"
      priority: Essential
      details: "The product uses a mechanism that automatically optimizes code, e.g.
        to improve a characteristic such as performance, but the optimizations
        can have an unintended side effect that might violate an intended
        security assumption.Guidelines:"
    - point: "CWE-ID: 1039Automated Recognition Mechanism with Inadequate Detection or
        Handling of Adversarial Input Perturbations"
      priority: Essential
      details: "The product uses an automated mechanism such as machine learning to
        recognize complex data inputs (e.g. image or audio) as a particular
        concept or category, but it does not properly detect or handle inputs
        that have been modified or constructed in a way that causes the
        mechanism to detect a different, incorrect
        concept.Guidelines:::TYPE:Relationship:NOTE:Further investigation is
        needed to determine if better relationships exist or if additional
        organizational entries need to be created. For example, this issue might
        be better related to recognition of input as an incorrect type, which
        might place it as a sibling of CWE-704 (incorrect type conversion).::"
    - point: "CWE-ID: 1041Use of Redundant Code"
      priority: Essential
      details: "The product has multiple functions, methods, procedures, macros, etc.
        that contain the same code.Guidelines:"
    - point: "CWE-ID: 1042Static Member Data Element outside of a Singleton Class
        Element"
      priority: Essential
      details: "The code contains a member element that is declared as static (but not
        final), in which its parent class element is not a singleton class -
        that is, a class element that can be used only once in the 'to'
        association of a Create action.Guidelines:"
    - point: "CWE-ID: 1043Data Element Aggregating an Excessively Large Number of
        Non-Primitive Elements"
      priority: Essential
      details: "The product uses a data element that has an excessively large number
        of sub-elements with non-primitive data types such as structures or
        aggregated objects.Guidelines:"
    - point: "CWE-ID: 1044Architecture with Number of Horizontal Layers Outside of
        Expected Range"
      priority: Essential
      details: "The product's architecture contains too many - or too few - horizontal
        layers.Guidelines:"
    - point: "CWE-ID: 1045Parent Class with a Virtual Destructor and a Child Class
        without a Virtual Destructor"
      priority: Essential
      details: "A parent class has a virtual destructor method, but the parent has a
        child class that does not have a virtual destructor.Guidelines:"
    - point: "CWE-ID: 1046Creation of Immutable Text Using String Concatenation"
      priority: Essential
      details: "The product creates an immutable text string using string
        concatenation operations.Guidelines:"
    - point: "CWE-ID: 1047Modules with Circular Dependencies"
      priority: Essential
      details: "The product contains modules in which one module has references that
        cycle back to itself, i.e., there are circular dependencies.Guidelines:"
    - point: "CWE-ID: 1048Invokable Control Element with Large Number of Outward
        Calls"
      priority: Essential
      details: "The code contains callable control elements that contain an
        excessively large number of references to other application objects
        external to the context of the callable, i.e. a Fan-Out value that is
        excessively large.Guidelines:"
    - point: "CWE-ID: 1049Excessive Data Query Operations in a Large Data Table"
      priority: Essential
      details: "The product performs a data query with a large number of joins and
        sub-queries on a large data table.Guidelines:"
    - point: "CWE-ID: 1050Excessive Platform Resource Consumption within a Loop"
      priority: Essential
      details: "The product has a loop body or loop condition that contains a control
        element that directly or indirectly consumes platform resources, e.g.
        messaging, sessions, locks, or file descriptors.Guidelines:"
    - point: "CWE-ID: 1051Initialization with Hard-Coded Network Resource
        Configuration Data"
      priority: Essential
      details: "The product initializes data using hard-coded values that act as
        network resource identifiers.Guidelines:"
    - point: "CWE-ID: 1052Excessive Use of Hard-Coded Literals in Initialization"
      priority: Essential
      details: "The product initializes a data element using a hard-coded literal that
        is not a simple integer or static constant element.Guidelines:"
    - point: "CWE-ID: 1053Missing Documentation for Design"
      priority: Essential
      details: "The product does not have documentation that represents how it is
        designed.Guidelines:"
    - point: "CWE-ID: 1054Invocation of a Control Element at an Unnecessarily Deep
        Horizontal Layer"
      priority: Essential
      details: "The code at one architectural layer invokes code that resides at a
        deeper layer than the adjacent layer, i.e., the invocation skips at
        least one layer, and the invoked code is not part of a vertical utility
        layer that can be referenced from any horizontal layer.Guidelines:"
    - point: "CWE-ID: 1055Multiple Inheritance from Concrete Classes"
      priority: Essential
      details: "The product contains a class with inheritance from more than one
        concrete class.Guidelines:"
    - point: "CWE-ID: 1056Invokable Control Element with Variadic Parameters"
      priority: Essential
      details: "A named-callable or method control element has a signature that
        supports a variable (variadic) number of parameters or
        arguments.Guidelines:"
    - point: "CWE-ID: 1057Data Access Operations Outside of Expected Data Manager
        Component"
      priority: Essential
      details: "The product uses a dedicated, central data manager component as
        required by design, but it contains code that performs data-access
        operations that do not use this data manager.Guidelines:"
    - point: "CWE-ID: 1058Invokable Control Element in Multi-Thread Context with
        non-Final Static Storable or Member Element"
      priority: Essential
      details: "The code contains a function or method that operates in a
        multi-threaded environment but owns an unsafe non-final static storable
        or member data element.Guidelines:"
    - point: "CWE-ID: 1059Insufficient Technical Documentation"
      priority: Essential
      details: "The product does not contain sufficient technical or engineering
        documentation (whether on paper or in electronic form) that contains
        descriptions of all the relevant software/hardware elements of the
        product, such as its usage, structure, architectural components,
        interfaces, design, implementation, configuration, operation,
        etc.Guidelines:"
    - point: "CWE-ID: 1060Excessive Number of Inefficient Server-Side Data Accesses"
      priority: Essential
      details: "The product performs too many data queries without using efficient
        data processing functionality such as stored procedures.Guidelines:"
    - point: "CWE-ID: 1061Insufficient Encapsulation"
      priority: Essential
      details: "The product does not sufficiently hide the internal representation and
        implementation details of data or methods, which might allow external
        components or modules to modify data unexpectedly, invoke unexpected
        functionality, or introduce dependencies that the programmer did not
        intend.Guidelines:"
    - point: "CWE-ID: 1062Parent Class with References to Child Class"
      priority: Essential
      details: "The code has a parent class that contains references to a child class,
        its methods, or its members.Guidelines:"
    - point: "CWE-ID: 1063Creation of Class Instance within a Static Code Block"
      priority: Essential
      details: "A static code block creates an instance of a class.Guidelines:"
    - point: "CWE-ID: 1064Invokable Control Element with Signature Containing an
        Excessive Number of Parameters"
      priority: Essential
      details: "The product contains a function, subroutine, or method whose signature
        has an unnecessarily large number of parameters/arguments.Guidelines:"
    - point: "CWE-ID: 1065Runtime Resource Management Control Element in a Component
        Built to Run on Application Servers"
      priority: Essential
      details: "The product uses deployed components from application servers, but it
        also uses low-level functions/methods for management of resources,
        instead of the API provided by the application server.Guidelines:"
    - point: "CWE-ID: 1066Missing Serialization Control Element"
      priority: Essential
      details: "The product contains a serializable data element that does not have an
        associated serialization method.Guidelines:"
    - point: "CWE-ID: 1067Excessive Execution of Sequential Searches of Data Resource"
      priority: Essential
      details: "The product contains a data query against an SQL table or view that is
        configured in a way that does not utilize an index and may cause
        sequential searches to be performed.Guidelines:"
    - point: "CWE-ID: 1068Inconsistency Between Implementation and Documented Design"
      priority: Essential
      details: "The implementation of the product is not consistent with the design as
        described within the relevant documentation.Guidelines:"
    - point: "CWE-ID: 1069Empty Exception Block"
      priority: Essential
      details: "An invokable code block contains an exception handling block that does
        not contain any code, i.e. is empty.Guidelines:"
    - point: "CWE-ID: 1070Serializable Data Element Containing non-Serializable Item
        Elements"
      priority: Essential
      details: "The product contains a serializable, storable data element such as a
        field or member, but the data element contains member elements that are
        not serializable.Guidelines:"
    - point: "CWE-ID: 1071Empty Code Block"
      priority: Essential
      details: "The source code contains a block that does not contain any code, i.e.,
        the block is empty.Guidelines:"
    - point: "CWE-ID: 1072Data Resource Access without Use of Connection Pooling"
      priority: Essential
      details: "The product accesses a data resource through a database without using
        a connection pooling capability.Guidelines:"
    - point: "CWE-ID: 1073Non-SQL Invokable Control Element with Excessive Number of
        Data Resource Accesses"
      priority: Essential
      details: "The product contains a client with a function or method that contains
        a large number of data accesses/queries that are sent through a data
        manager, i.e., does not use efficient database capabilities.Guidelines:"
    - point: "CWE-ID: 1074Class with Excessively Deep Inheritance"
      priority: Essential
      details: "A class has an inheritance level that is too high, i.e., it has a
        large number of parent classes.Guidelines:"
    - point: "CWE-ID: 1075Unconditional Control Flow Transfer outside of Switch Block"
      priority: Essential
      details: "The product performs unconditional control transfer (such as a goto)
        in code outside of a branching structure such as a switch
        block.Guidelines:"
    - point: "CWE-ID: 1076Insufficient Adherence to Expected Conventions"
      priority: Essential
      details: "The product's architecture, source code, design, documentation, or
        other artifact does not follow required conventions.Guidelines:"
    - point: "CWE-ID: 1077Floating Point Comparison with Incorrect Operator"
      priority: Essential
      details: "The code performs a comparison such as an equality test between two
        float (floating point) values, but it uses comparison operators that do
        not account for the possibility of loss of precision.Guidelines:"
    - point: "CWE-ID: 1078Inappropriate Source Code Style or Formatting"
      priority: Essential
      details: "The source code does not follow desired style or formatting for
        indentation, white space, comments, etc.Guidelines:"
    - point: "CWE-ID: 1079Parent Class without Virtual Destructor Method"
      priority: Essential
      details: "A parent class contains one or more child classes, but the parent
        class does not have a virtual destructor method.Guidelines:"
    - point: "CWE-ID: 1080Source Code File with Excessive Number of Lines of Code"
      priority: Essential
      details: "A source code file has too many lines of code.Guidelines:"
    - point: "CWE-ID: 1082Class Instance Self Destruction Control Element"
      priority: Essential
      details: "The code contains a class instance that calls the method or function
        to delete or destroy itself.Guidelines:"
    - point: "CWE-ID: 1083Data Access from Outside Expected Data Manager Component"
      priority: Essential
      details: "The product is intended to manage data access through a particular
        data manager component such as a relational or non-SQL database, but it
        contains code that performs data access operations without using that
        component.Guidelines:"
    - point: "CWE-ID: 1084Invokable Control Element with Excessive File or Data Access
        Operations"
      priority: Essential
      details: "A function or method contains too many operations that utilize a data
        manager or file resource.Guidelines:"
    - point: "CWE-ID: 1085Invokable Control Element with Excessive Volume of
        Commented-out Code"
      priority: Essential
      details: "A function, method, procedure, etc. contains an excessive amount of
        code that has been commented out within its body.Guidelines:"
    - point: "CWE-ID: 1086Class with Excessive Number of Child Classes"
      priority: Essential
      details: "A class contains an unnecessarily large number of children.Guidelines:"
    - point: "CWE-ID: 1087Class with Virtual Method without a Virtual Destructor"
      priority: Essential
      details: "A class contains a virtual method, but the method does not have an
        associated virtual destructor.Guidelines:"
    - point: "CWE-ID: 1088Synchronous Access of Remote Resource without Timeout"
      priority: Essential
      details: "The code has a synchronous call to a remote resource, but there is no
        timeout for the call, or the timeout is set to infinite.Guidelines:"
    - point: "CWE-ID: 1089Large Data Table with Excessive Number of Indices"
      priority: Essential
      details: "The product uses a large data table that contains an excessively large
        number of indices.Guidelines:"
    - point: "CWE-ID: 1090Method Containing Access of a Member Element from Another
        Class"
      priority: Essential
      details: "A method for a class performs an operation that directly accesses a
        member element from another class.Guidelines:"
    - point: "CWE-ID: 1091Use of Object without Invoking Destructor Method"
      priority: Essential
      details: "The product contains a method that accesses an object but does not
        later invoke the element's associated finalize/destructor
        method.Guidelines:"
    - point: "CWE-ID: 1092Use of Same Invokable Control Element in Multiple
        Architectural Layers"
      priority: Essential
      details: "The product uses the same control element across multiple
        architectural layers.Guidelines:"
    - point: "CWE-ID: 1093Excessively Complex Data Representation"
      priority: Essential
      details: "The product uses an unnecessarily complex internal representation for
        its data structures or interrelationships between those
        structures.Guidelines:"
    - point: "CWE-ID: 1094Excessive Index Range Scan for a Data Resource"
      priority: Essential
      details: "The product contains an index range scan for a large data table, but
        the scan can cover a large number of rows.Guidelines:"
    - point: "CWE-ID: 1095Loop Condition Value Update within the Loop"
      priority: Essential
      details: "The product uses a loop with a control flow condition based on a value
        that is updated within the body of the loop.Guidelines:"
    - point: "CWE-ID: 1096Singleton Class Instance Creation without Proper Locking or
        Synchronization"
      priority: Essential
      details: "The product implements a Singleton design pattern but does not use
        appropriate locking or other synchronization mechanism to ensure that
        the singleton class is only instantiated once.Guidelines:"
    - point: "CWE-ID: 1097Persistent Storable Data Element without Associated
        Comparison Control Element"
      priority: Essential
      details: "The product uses a storable data element that does not have all of the
        associated functions or methods that are necessary to support
        comparison.Guidelines:"
    - point: "CWE-ID: 1098Data Element containing Pointer Item without Proper Copy
        Control Element"
      priority: Essential
      details: "The code contains a data element with a pointer that does not have an
        associated copy or constructor method.Guidelines:"
    - point: "CWE-ID: 1099Inconsistent Naming Conventions for Identifiers"
      priority: Essential
      details: "The product's code, documentation, or other artifacts do not
        consistently use the same naming conventions for variables, callables,
        groups of related callables, I/O capabilities, data types, file names,
        or similar types of elements.Guidelines:"
    - point: "CWE-ID: 1100Insufficient Isolation of System-Dependent Functions"
      priority: Essential
      details: "The product or code does not isolate system-dependent functionality
        into separate standalone modules.Guidelines:"
    - point: "CWE-ID: 1101Reliance on Runtime Component in Generated Code"
      priority: Essential
      details: "The product uses automatically-generated code that cannot be executed
        without a specific runtime support component.Guidelines:"
    - point: "CWE-ID: 1102Reliance on Machine-Dependent Data Representation"
      priority: Essential
      details: "The code uses a data representation that relies on low-level data
        representation or constructs that may vary across different processors,
        physical machines, OSes, or other physical components.Guidelines:"
    - point: "CWE-ID: 1103Use of Platform-Dependent Third Party Components"
      priority: Essential
      details: "The product relies on third-party components that do not provide
        equivalent functionality across all desirable platforms.Guidelines:"
    - point: "CWE-ID: 1104Use of Unmaintained Third Party Components"
      priority: Essential
      details: "The product relies on third-party components that are not actively
        supported or maintained by the original developer or a trusted proxy for
        the original developer.Guidelines:"
    - point: "CWE-ID: 1105Insufficient Encapsulation of Machine-Dependent
        Functionality"
      priority: Essential
      details: "The product or code uses machine-dependent functionality, but it does
        not sufficiently encapsulate or isolate this functionality from the rest
        of the code.Guidelines:"
    - point: "CWE-ID: 1106Insufficient Use of Symbolic Constants"
      priority: Essential
      details: "The source code uses literal constants that may need to change or
        evolve over time, instead of using symbolic constants.Guidelines:"
    - point: "CWE-ID: 1107Insufficient Isolation of Symbolic Constant Definitions"
      priority: Essential
      details: "The source code uses symbolic constants, but it does not sufficiently
        place the definitions of these constants into a more centralized or
        isolated location.Guidelines:"
    - point: "CWE-ID: 1108Excessive Reliance on Global Variables"
      priority: Essential
      details: "The code is structured in a way that relies too much on using or
        setting global variables throughout various points in the code, instead
        of preserving the associated information in a narrower, more local
        context.Guidelines:"
    - point: "CWE-ID: 1109Use of Same Variable for Multiple Purposes"
      priority: Essential
      details: "The code contains a callable, block, or other code element in which
        the same variable is used to control more than one unique task or store
        more than one instance of data.Guidelines:"
    - point: "CWE-ID: 1110Incomplete Design Documentation"
      priority: Essential
      details: "The product's design documentation does not adequately describe
        control flow, data flow, system initialization, relationships between
        tasks, components, rationales, or other important aspects of the
        design.Guidelines:"
    - point: "CWE-ID: 1111Incomplete I/O Documentation"
      priority: Essential
      details: "The product's documentation does not adequately define inputs,
        outputs, or system/software interfaces.Guidelines:"
    - point: "CWE-ID: 1112Incomplete Documentation of Program Execution"
      priority: Essential
      details: "The document does not fully define all mechanisms that are used to
        control or influence how product-specific programs are
        executed.Guidelines:"
    - point: "CWE-ID: 1113Inappropriate Comment Style"
      priority: Essential
      details: "The source code uses comment styles or formats that are inconsistent
        or do not follow expected standards for the product.Guidelines:"
    - point: "CWE-ID: 1114Inappropriate Whitespace Style"
      priority: Essential
      details: "The source code contains whitespace that is inconsistent across the
        code or does not follow expected standards for the product.Guidelines:"
    - point: "CWE-ID: 1115Source Code Element without Standard Prologue"
      priority: Essential
      details: "The source code contains elements such as source files that do not
        consistently provide a prologue or header that has been standardized for
        the project.Guidelines:"
    - point: "CWE-ID: 1116Inaccurate Comments"
      priority: Essential
      details: "The source code contains comments that do not accurately describe or
        explain aspects of the portion of the code with which the comment is
        associated.Guidelines:"
    - point: "CWE-ID: 1117Callable with Insufficient Behavioral Summary"
      priority: Essential
      details: "The code contains a function or method whose signature and/or
        associated inline documentation does not sufficiently describe the
        callable's inputs, outputs, side effects, assumptions, or return
        codes.Guidelines:"
    - point: "CWE-ID: 1118Insufficient Documentation of Error Handling Techniques"
      priority: Essential
      details: "The documentation does not sufficiently describe the techniques that
        are used for error handling, exception processing, or similar
        mechanisms.Guidelines:"
    - point: "CWE-ID: 1119Excessive Use of Unconditional Branching"
      priority: Essential
      details: "The code uses too many unconditional branches (such as
        goto).Guidelines:"
    - point: "CWE-ID: 1120Excessive Code Complexity"
      priority: Essential
      details: "The code is too complex, as calculated using a well-defined,
        quantitative measure.Guidelines:"
    - point: "CWE-ID: 1121Excessive McCabe Cyclomatic Complexity"
      priority: Essential
      details: "The code contains McCabe cyclomatic complexity that exceeds a
        desirable maximum.Guidelines:"
    - point: "CWE-ID: 1122Excessive Halstead Complexity"
      priority: Essential
      details: "The code is structured in a way that a Halstead complexity measure
        exceeds a desirable maximum.Guidelines:"
    - point: "CWE-ID: 1123Excessive Use of Self-Modifying Code"
      priority: Essential
      details: "The product uses too much self-modifying code.Guidelines:"
    - point: "CWE-ID: 1124Excessively Deep Nesting"
      priority: Essential
      details: "The code contains a callable or other code grouping in which the
        nesting / branching is too deep.Guidelines:"
    - point: "CWE-ID: 1125Excessive Attack Surface"
      priority: Essential
      details: "The product has an attack surface whose quantitative measurement
        exceeds a desirable maximum.Guidelines:"
    - point: "CWE-ID: 1126Declaration of Variable with Unnecessarily Wide Scope"
      priority: Essential
      details: "The source code declares a variable in one scope, but the variable is
        only used within a narrower scope.Guidelines:"
    - point: "CWE-ID: 1127Compilation with Insufficient Warnings or Errors"
      priority: Essential
      details: "The code is compiled without sufficient warnings enabled, which may
        prevent the detection of subtle bugs or quality issues.Guidelines:"
    - point: "CWE-ID: 1164Irrelevant Code"
      priority: Essential
      details: "The product contains code that is not essential for execution, i.e.
        makes no state changes and has no side effects that alter data or
        control flow, such that removal of the code would have no impact to
        functionality or correctness.Guidelines:"
    - point: "CWE-ID: 1173Improper Use of Validation Framework"
      priority: Essential
      details: "The product does not use, or incorrectly uses, an input validation
        framework that is provided by the source language or an independent
        library.Guidelines:"
    - point: "CWE-ID: 1174ASP.NET Misconfiguration: Improper Model Validation"
      priority: Essential
      details: "The ASP.NET application does not use, or incorrectly uses, the model
        validation framework.Guidelines:"
    - point: "CWE-ID: 1176Inefficient CPU Computation"
      priority: Essential
      details: "The product performs CPU computations using algorithms that are not as
        efficient as they could be for the needs of the developer, i.e., the
        computations can be optimized further.Guidelines:"
    - point: "CWE-ID: 1177Use of Prohibited Code"
      priority: Essential
      details: "The product uses a function, library, or third party component that
        has been explicitly prohibited, whether by the developer or the
        customer.Guidelines:"
    - point: "CWE-ID: 1188Initialization of a Resource with an Insecure Default"
      priority: Essential
      details: "The product initializes or sets a resource with a default that is
        intended to be changed by the administrator, but the default is not
        secure.Guidelines:::TYPE:Maintenance:NOTE:This entry improves
        organization of concepts under initialization. The typical CWE model is
        to cover Missing and Incorrect behaviors. Arguably, this entry could be
        named as Incorrect instead of Insecure. This might be changed in the
        near future.::"
    - point: "CWE-ID: 1189Improper Isolation of Shared Resources on System-on-a-Chip
        (SoC)"
      priority: Essential
      details: "The System-On-a-Chip (SoC) does not properly isolate shared resources
        between trusted and untrusted agents.Guidelines:"
    - point: "CWE-ID: 1190DMA Device Enabled Too Early in Boot Phase"
      priority: Essential
      details: "The product enables a Direct Memory Access (DMA) capable device before
        the security configuration settings are established, which allows an
        attacker to extract data from or gain privileges on the
        product.Guidelines:"
    - point: "CWE-ID: 1191On-Chip Debug and Test Interface With Improper Access
        Control"
      priority: Essential
      details: "The chip does not implement or does not correctly perform access
        control to check whether users are authorized to access internal
        registers and test modes through the physical debug/test
        interface.Guidelines:::TYPE:Relationship:NOTE:CWE-1191 and CWE-1244 both
        involve physical debug access, but the weaknesses are different.
        CWE-1191 is effectively about missing authorization for a debug
        interface, i.e. JTAG. CWE-1244 is about providing internal assets with
        the wrong debug access level, exposing the asset to untrusted debug
        agents.::"
    - point: "CWE-ID: 1192Improper Identifier for IP Block used in System-On-Chip
        (SOC)"
      priority: Essential
      details: "The System-on-Chip (SoC) does not have unique, immutable identifiers
        for each of its components.Guidelines:"
    - point: "CWE-ID: 1193Power-On of Untrusted Execution Core Before Enabling Fabric
        Access Control"
      priority: Essential
      details: "The product enables components that contain untrusted firmware before
        memory and fabric access controls have been enabled.Guidelines:"
    - point: "CWE-ID: 1204Generation of Weak Initialization Vector (IV)"
      priority: Essential
      details: "The product uses a cryptographic primitive that uses an Initialization
        Vector (IV), but the product does not generate IVs that are sufficiently
        unpredictable or unique according to the expected cryptographic
        requirements for that primitive.Guidelines:::TYPE:Maintenance:NOTE:As of
        CWE 4.5, terminology related to randomness, entropy, and predictability
        can vary widely. Within the developer and other communities, randomness
        is used heavily. However, within cryptography, entropy is distinct,
        typically implied as a measurement. There are no commonly-used
        definitions, even within standards documents and cryptography papers.
        Future versions of CWE will attempt to define these terms and, if
        necessary, distinguish between them in ways that are appropriate for
        different communities but do not reduce the usability of CWE for
        mapping, understanding, or other scenarios.::"
    - point: "CWE-ID: 1209Failure to Disable Reserved Bits"
      priority: Essential
      details: "The reserved bits in a hardware design are not disabled prior to
        production. Typically, reserved bits are used for future capabilities
        and should not support any functional logic in the design. However,
        designers might covertly use these bits to debug or further develop new
        capabilities in production hardware. Adversaries with access to these
        bits will write to them in hopes of compromising hardware
        state.Guidelines:"
    - point: "CWE-ID: 1220Insufficient Granularity of Access Control"
      priority: Essential
      details: "The product implements access controls via a policy or other feature
        with the intention to disable or restrict accesses (reads and/or writes)
        to assets in a system from untrusted agents. However, implemented access
        controls lack required granularity, which renders the control policy too
        broad because it allows accesses from unauthorized agents to the
        security-sensitive assets.Guidelines:"
    - point: "CWE-ID: 1221Incorrect Register Defaults or Module Parameters"
      priority: Essential
      details: "Hardware description language code incorrectly defines register
        defaults or hardware Intellectual Property (IP) parameters to insecure
        values.Guidelines:"
    - point: "CWE-ID: 1222Insufficient Granularity of Address Regions Protected by
        Register Locks"
      priority: Essential
      details: "The product defines a large address region protected from modification
        by the same register lock control bit. This results in a conflict
        between the functional requirement that some addresses need to be
        writable by software during operation and the security requirement that
        the system configuration lock bit must be set during the boot
        process.Guidelines:"
    - point: "CWE-ID: 1223Race Condition for Write-Once Attributes"
      priority: Essential
      details: "A write-once register in hardware design is programmable by an
        untrusted software component earlier than the trusted software
        component, resulting in a race condition issue.Guidelines:"
    - point: "CWE-ID: 1224Improper Restriction of Write-Once Bit Fields"
      priority: Essential
      details: "The hardware design control register sticky bits or write-once bit
        fields are improperly implemented, such that they can be reprogrammed by
        software.Guidelines:"
    - point: "CWE-ID: 1229Creation of Emergent Resource"
      priority: Essential
      details: "The product manages resources or behaves in a way that indirectly
        creates a new, distinct resource that can be used by attackers in
        violation of the intended policy.Guidelines:"
    - point: "CWE-ID: 1230Exposure of Sensitive Information Through Metadata"
      priority: Essential
      details: "The product prevents direct access to a resource containing sensitive
        information, but it does not sufficiently limit access to metadata that
        is derived from the original, sensitive information.Guidelines:"
    - point: "CWE-ID: 1231Improper Prevention of Lock Bit Modification"
      priority: Essential
      details: "The product uses a trusted lock bit for restricting access to
        registers, address regions, or other resources, but the product does not
        prevent the value of the lock bit from being modified after it has been
        set.Guidelines:"
    - point: "CWE-ID: 1232Improper Lock Behavior After Power State Transition"
      priority: Essential
      details: "Register lock bit protection disables changes to system configuration
        once the bit is set. Some of the protected registers or lock bits become
        programmable after power state transitions (e.g., Entry and wake from
        low power sleep modes) causing the system configuration to be
        changeable.Guidelines:"
    - point: "CWE-ID: 1233Security-Sensitive Hardware Controls with Missing Lock Bit
        Protection"
      priority: Essential
      details: "The product uses a register lock bit protection mechanism, but it does
        not ensure that the lock bit prevents modification of system registers
        or controls that perform changes to important hardware system
        configuration.Guidelines:"
    - point: "CWE-ID: 1234Hardware Internal or Debug Modes Allow Override of Locks"
      priority: Essential
      details: "System configuration protection may be bypassed during debug
        mode.Guidelines:"
    - point: "CWE-ID: 1235Incorrect Use of Autoboxing and Unboxing for Performance
        Critical Operations"
      priority: Essential
      details: "The code uses boxed primitives, which may introduce inefficiencies
        into performance-critical operations.Guidelines:"
    - point: "CWE-ID: 1236Improper Neutralization of Formula Elements in a CSV File"
      priority: Essential
      details: "The product saves user-provided information into a Comma-Separated
        Value (CSV) file, but it does not neutralize or incorrectly neutralizes
        special elements that could be interpreted as a command when the file is
        opened by a spreadsheet product.Guidelines:"
    - point: "CWE-ID: 1239Improper Zeroization of Hardware Register"
      priority: Essential
      details: "The hardware product does not properly clear sensitive information
        from built-in registers when the user of the hardware block
        changes.Guidelines:"
    - point: "CWE-ID: 1240Use of a Cryptographic Primitive with a Risky
        Implementation"
      priority: Essential
      details: "To fulfill the need for a cryptographic primitive, the product
        implements a cryptographic algorithm using a non-standard, unproven, or
        disallowed/non-compliant cryptographic
        implementation.Guidelines:::TYPE:Terminology:NOTE:Terminology for
        cryptography varies widely, from informal and colloquial to
        mathematically-defined, with different precision and formalism depending
        on whether the stakeholder is a developer, cryptologist, etc. Yet there
        is a need for CWE to be self-consistent while remaining understandable
        and acceptable to multiple audiences. As of CWE 4.6, CWE terminology
        around primitives and algorithms is emerging as shown by the following
        example, subject to future consultation and agreement within the CWE and
        cryptography communities. Suppose one wishes to send encrypted data
        using a CLI tool such as OpenSSL. One might choose to use AES with a
        256-bit key and require tamper protection (GCM mode, for instance). For
        compatibility's sake, one might also choose the ciphertext to be
        formatted to the PKCS#5 standard. In this case, the cryptographic system
        would be AES-256-GCM with PKCS#5 formatting. The cryptographic function
        would be AES-256 in the GCM mode of operation, and the algorithm would
        be AES. Colloquially, one would say that AES (and sometimes AES-256) is
        the cryptographic primitive, because it is the algorithm that realizes
        the concept of symmetric encryption (without modes of operation or other
        protocol related modifications). In practice, developers and architects
        typically refer to base cryptographic algorithms (AES, SHA, etc.) as
        cryptographic primitives.::TYPE:Maintenance:NOTE:Since CWE 4.4, various
        cryptography-related entries, including CWE-327 and CWE-1240, have been
        slated for extensive research, analysis, and community consultation to
        define consistent terminology, improve relationships, and reduce overlap
        or duplication. As of CWE 4.6, this work is still ongoing.::"
    - point: "CWE-ID: 1241Use of Predictable Algorithm in Random Number Generator"
      priority: Essential
      details: "The device uses an algorithm that is predictable and generates a
        pseudo-random number.Guidelines:::TYPE:Maintenance:NOTE:As of CWE 4.5,
        terminology related to randomness, entropy, and predictability can vary
        widely. Within the developer and other communities, randomness is used
        heavily. However, within cryptography, entropy is distinct, typically
        implied as a measurement. There are no commonly-used definitions, even
        within standards documents and cryptography papers. Future versions of
        CWE will attempt to define these terms and, if necessary, distinguish
        between them in ways that are appropriate for different communities but
        do not reduce the usability of CWE for mapping, understanding, or other
        scenarios.::"
    - point: "CWE-ID: 1242Inclusion of Undocumented Features or Chicken Bits"
      priority: Essential
      details: "The device includes chicken bits or undocumented features that can
        create entry points for unauthorized actors.Guidelines:"
    - point: "CWE-ID: 1243Sensitive Non-Volatile Information Not Protected During
        Debug"
      priority: Essential
      details: "Access to security-sensitive information stored in fuses is not
        limited during debug.Guidelines:"
    - point: "CWE-ID: 1244Internal Asset Exposed to Unsafe Debug Access Level or
        State"
      priority: Essential
      details: "The product uses physical debug or test interfaces with support for
        multiple access levels, but it assigns the wrong debug access level to
        an internal asset, providing unintended access to the asset from
        untrusted debug agents.Guidelines:::TYPE:Relationship:NOTE:CWE-1191 and
        CWE-1244 both involve physical debug access, but the weaknesses are
        different. CWE-1191 is effectively about missing authorization for a
        debug interface, i.e. JTAG. CWE-1244 is about providing internal assets
        with the wrong debug access level, exposing the asset to untrusted debug
        agents.::"
    - point: "CWE-ID: 1245Improper Finite State Machines (FSMs) in Hardware Logic"
      priority: Essential
      details: "Faulty finite state machines (FSMs) in the hardware logic allow an
        attacker to put the system in an undefined state, to cause a denial of
        service (DoS) or gain privileges on the victim's system.Guidelines:"
    - point: "CWE-ID: 1246Improper Write Handling in Limited-write Non-Volatile
        Memories"
      priority: Essential
      details: "The product does not implement or incorrectly implements wear leveling
        operations in limited-write non-volatile memories.Guidelines:"
    - point: "CWE-ID: 1247Improper Protection Against Voltage and Clock Glitches"
      priority: Essential
      details: "The device does not contain or contains incorrectly implemented
        circuitry or sensors to detect and mitigate voltage and clock glitches
        and protect sensitive information or software contained on the
        device.Guidelines:"
    - point: "CWE-ID: 1248Semiconductor Defects in Hardware Logic with
        Security-Sensitive Implications"
      priority: Essential
      details: "The security-sensitive hardware module contains semiconductor
        defects.Guidelines:"
    - point: "CWE-ID: 1249Application-Level Admin Tool with Inconsistent View of
        Underlying Operating System"
      priority: Essential
      details: "The product provides an application for administrators to manage parts
        of the underlying operating system, but the application does not
        accurately identify all of the relevant entities or resources that exist
        in the OS; that is, the application's model of the OS's state is
        inconsistent with the OS's actual state.Guidelines:"
    - point: "CWE-ID: 1250Improper Preservation of Consistency Between Independent
        Representations of Shared State"
      priority: Essential
      details: "The product has or supports multiple distributed components or
        sub-systems that are each required to keep their own local copy of
        shared data - such as state or cache - but the product does not ensure
        that all local copies remain consistent with each
        other.Guidelines:::TYPE:Research Gap:NOTE:Issues related to state and
        cache - creation, preservation, and update - are a significant gap in
        CWE that is expected to be addressed in future versions. It likely has
        relationships to concurrency and synchronization, incorrect behavior
        order, and other areas that already have some coverage in CWE, although
        the focus has typically been on independent processes on the same
        operating system - not on independent systems that are all a part of a
        larger system-of-systems.::"
    - point: "CWE-ID: 1251Mirrored Regions with Different Values"
      priority: Essential
      details: "The product's architecture mirrors regions without ensuring that their
        contents always stay in sync.Guidelines:::TYPE:Research Gap:NOTE:Issues
        related to state and cache - creation, preservation, and update - are a
        significant gap in CWE that is expected to be addressed in future
        versions. It has relationships to concurrency and synchronization,
        incorrect behavior order, and other areas that already have some
        coverage in CWE, although the focus has typically been on independent
        processes on the same operating system - not on independent systems that
        are all a part of a larger system-of-systems.::"
    - point: "CWE-ID: 1252CPU Hardware Not Configured to Support Exclusivity of Write
        and Execute Operations"
      priority: Essential
      details: "The CPU is not configured to provide hardware support for exclusivity
        of write and execute operations on memory. This allows an attacker to
        execute data from all of memory.Guidelines:"
    - point: "CWE-ID: 1253Incorrect Selection of Fuse Values"
      priority: Essential
      details: "The logic level used to set a system to a secure state relies on a
        fuse being unblown. An attacker can set the system to an insecure state
        merely by blowing the fuse.Guidelines:::TYPE:Maintenance:NOTE:This entry
        is still under development and will continue to see updates and content
        improvements.::"
    - point: "CWE-ID: 1254Incorrect Comparison Logic Granularity"
      priority: Essential
      details: "The product's comparison logic is performed over a series of steps
        rather than across the entire string in one operation. If there is a
        comparison logic failure on one of these steps, the operation may be
        vulnerable to a timing attack that can result in the interception of the
        process for nefarious purposes.Guidelines:"
    - point: "CWE-ID: 1255Comparison Logic is Vulnerable to Power Side-Channel
        Attacks"
      priority: Essential
      details: "A device's real time power consumption may be monitored during
        security token evaluation and the information gleaned may be used to
        determine the value of the reference token.Guidelines:"
    - point: "CWE-ID: 1256Improper Restriction of Software Interfaces to Hardware
        Features"
      priority: Essential
      details: "The product provides software-controllable device functionality for
        capabilities such as power and clock management, but it does not
        properly limit functionality that can lead to modification of hardware
        memory or register bits, or the ability to observe physical side
        channels.Guidelines:"
    - point: "CWE-ID: 1257Improper Access Control Applied to Mirrored or Aliased
        Memory Regions"
      priority: Essential
      details: "Aliased or mirrored memory regions in hardware designs may have
        inconsistent read/write permissions enforced by the hardware. A possible
        result is that an untrusted agent is blocked from accessing a memory
        region but is not blocked from accessing the corresponding aliased
        memory region.Guidelines:"
    - point: "CWE-ID: 1258Exposure of Sensitive System Information Due to Uncleared
        Debug Information"
      priority: Essential
      details: "The hardware does not fully clear security-sensitive values, such as
        keys and intermediate values in cryptographic operations, when debug
        mode is entered.Guidelines:"
    - point: "CWE-ID: 1259Improper Restriction of Security Token Assignment"
      priority: Essential
      details: "The System-On-A-Chip (SoC) implements a Security Token mechanism to
        differentiate what actions are allowed or disallowed when a transaction
        originates from an entity. However, the Security Tokens are improperly
        protected.Guidelines:::TYPE:Maintenance:NOTE:This entry is still under
        development and will continue to see updates and content improvements.
        Currently it is expressed as a general absence of a protection mechanism
        as opposed to a specific mistake, and the entry's name and description
        could be interpreted as applying to software.::"
    - point: "CWE-ID: 1260Improper Handling of Overlap Between Protected Memory
        Ranges"
      priority: Essential
      details: "The product allows address regions to overlap, which can result in the
        bypassing of intended memory
        protection.Guidelines:::TYPE:Maintenance:NOTE:As of CWE 4.6, CWE-1260
        and CWE-1316 are siblings under view 1000, but CWE-1260 might be a
        parent of CWE-1316. More analysis is warranted.::"
    - point: "CWE-ID: 1261Improper Handling of Single Event Upsets"
      priority: Essential
      details: "The hardware logic does not effectively handle when single-event
        upsets (SEUs) occur.Guidelines:"
    - point: "CWE-ID: 1262Improper Access Control for Register Interface"
      priority: Essential
      details: "The product uses memory-mapped I/O registers that act as an interface
        to hardware functionality from software, but there is improper access
        control to those registers.Guidelines:"
    - point: "CWE-ID: 1263Improper Physical Access Control"
      priority: Essential
      details: "The product is designed with access restricted to certain information,
        but it does not sufficiently protect against an unauthorized actor with
        physical access to these areas.Guidelines:::TYPE:Maintenance:NOTE:This
        entry is still under development and will continue to see updates and
        content improvements.::"
    - point: "CWE-ID: 1264Hardware Logic with Insecure De-Synchronization between
        Control and Data Channels"
      priority: Essential
      details: "The hardware logic for error handling and security checks can
        incorrectly forward data before the security check is
        complete.Guidelines:::TYPE:Maintenance:NOTE:As of CWE 4.9, members of
        the CWE Hardware SIG are closely analyzing this entry and others to
        improve CWE's coverage of transient execution weaknesses, which include
        issues related to Spectre, Meltdown, and other attacks. Additional
        investigation may include other weaknesses related to microarchitectural
        state. As a result, this entry might change significantly in CWE
        4.10.::"
    - point: "CWE-ID: 1265Unintended Reentrant Invocation of Non-reentrant Code Via
        Nested Calls"
      priority: Essential
      details: "During execution of non-reentrant code, the product performs a call
        that unintentionally produces a nested invocation of the non-reentrant
        code.Guidelines:"
    - point: "CWE-ID: 1266Improper Scrubbing of Sensitive Data from Decommissioned
        Device"
      priority: Essential
      details: "The product does not properly provide a capability for the product
        administrator to remove sensitive data at the time the product is
        decommissioned. A scrubbing capability could be missing, insufficient,
        or incorrect.Guidelines:::TYPE:Maintenance:NOTE:This entry is still
        under development and will continue to see updates and content
        improvements.::"
    - point: "CWE-ID: 1267Policy Uses Obsolete Encoding"
      priority: Essential
      details: "The product uses an obsolete encoding mechanism to implement access
        controls.Guidelines:"
    - point: "CWE-ID: 1268Policy Privileges are not Assigned Consistently Between
        Control and Data Agents"
      priority: Essential
      details: "The product's hardware-enforced access control for a particular
        resource improperly accounts for privilege discrepancies between control
        and write policies.Guidelines:::TYPE:Maintenance:NOTE:This entry is
        still under development and will continue to see updates and content
        improvements.::"
    - point: "CWE-ID: 1269Product Released in Non-Release Configuration"
      priority: Essential
      details: "The product released to market is released in pre-production or
        manufacturing configuration.Guidelines:"
    - point: "CWE-ID: 1270Generation of Incorrect Security Tokens"
      priority: Essential
      details: "The product implements a Security Token mechanism to differentiate
        what actions are allowed or disallowed when a transaction originates
        from an entity. However, the Security Tokens generated in the system are
        incorrect.Guidelines:"
    - point: "CWE-ID: 1271Uninitialized Value on Reset for Registers Holding Security
        Settings"
      priority: Essential
      details: "Security-critical logic is not set to a known value on
        reset.Guidelines:::TYPE:Maintenance:NOTE:This entry is still under
        development and will continue to see updates and content
        improvements.::"
    - point: "CWE-ID: 1272Sensitive Information Uncleared Before Debug/Power State
        Transition"
      priority: Essential
      details: "The product performs a power or debug state transition, but it does
        not clear sensitive information that should no longer be accessible due
        to changes to information access restrictions.Guidelines:"
    - point: "CWE-ID: 1273Device Unlock Credential Sharing"
      priority: Essential
      details: "The credentials necessary for unlocking a device are shared across
        multiple parties and may expose sensitive
        information.Guidelines:::TYPE:Maintenance:NOTE:This entry is still under
        development and will continue to see updates and content
        improvements.::"
    - point: "CWE-ID: 1274Improper Access Control for Volatile Memory Containing Boot
        Code"
      priority: Essential
      details: "The product conducts a secure-boot process that transfers bootloader
        code from Non-Volatile Memory (NVM) into Volatile Memory (VM), but it
        does not have sufficient access control or other protections for the
        Volatile Memory.Guidelines:"
    - point: "CWE-ID: 1275Sensitive Cookie with Improper SameSite Attribute"
      priority: Essential
      details: "The SameSite attribute for sensitive cookies is not set, or an
        insecure value is used.Guidelines:"
    - point: "CWE-ID: 1276Hardware Child Block Incorrectly Connected to Parent System"
      priority: Essential
      details: "Signals between a hardware IP and the parent system design are
        incorrectly connected causing security risks.Guidelines:"
    - point: "CWE-ID: 1277Firmware Not Updateable"
      priority: Essential
      details: "The product does not provide its users with the ability to update or
        patch its firmware to address any vulnerabilities or weaknesses that may
        be present.Guidelines:::TYPE:Terminology:NOTE:The firmware term does not
        have a single commonly-shared definition, so there may be variations in
        how this CWE entry is interpreted during mapping.::"
    - point: "CWE-ID: 1278Missing Protection Against Hardware Reverse Engineering
        Using Integrated Circuit (IC) Imaging Techniques"
      priority: Essential
      details: "Information stored in hardware may be recovered by an attacker with
        the capability to capture and analyze images of the integrated circuit
        using techniques such as scanning electron
        microscopy.Guidelines:::TYPE:Maintenance:NOTE:This entry is still under
        development and will continue to see updates and content improvements.
        It is more attack-oriented, so it might be more suited for CAPEC.::"
    - point: "CWE-ID: 1279Cryptographic Operations are run Before Supporting Units are
        Ready"
      priority: Essential
      details: "Performing cryptographic operations without ensuring that the
        supporting inputs are ready to supply valid data may compromise the
        cryptographic result.Guidelines:"
    - point: "CWE-ID: 1280Access Control Check Implemented After Asset is Accessed"
      priority: Essential
      details: "A product's hardware-based access control check occurs after the asset
        has been accessed.Guidelines:"
    - point: "CWE-ID: 1281Sequence of Processor Instructions Leads to Unexpected
        Behavior"
      priority: Essential
      details: "Specific combinations of processor instructions lead to undesirable
        behavior such as locking the processor until a hard reset
        performed.Guidelines:"
    - point: "CWE-ID: 1282Assumed-Immutable Data is Stored in Writable Memory"
      priority: Essential
      details: "Immutable data, such as a first-stage bootloader, device identifiers,
        and write-once configuration settings are stored in writable memory that
        can be re-programmed or updated in the
        field.Guidelines:::TYPE:Maintenance:NOTE:This entry is still under
        development and will continue to see updates and content
        improvements.::TYPE:Maintenance:NOTE:As of CWE 4.3, CWE-1282 and
        CWE-1233 are being investigated for potential duplication or overlap.::"
    - point: "CWE-ID: 1283Mutable Attestation or Measurement Reporting Data"
      priority: Essential
      details: "The register contents used for attestation or measurement reporting
        data to verify boot flow are modifiable by an
        adversary.Guidelines:::TYPE:Maintenance:NOTE:This entry is still in
        development and will continue to see updates and content
        improvements.::"
    - point: "CWE-ID: 1284Improper Validation of Specified Quantity in Input"
      priority: Essential
      details: "The product receives input that is expected to specify a quantity
        (such as size or length), but it does not validate or incorrectly
        validates that the quantity has the required
        properties.Guidelines:::TYPE:Maintenance:NOTE:This entry is still under
        development and will continue to see updates and content
        improvements.::"
    - point: "CWE-ID: 1285Improper Validation of Specified Index, Position, or Offset
        in Input"
      priority: Essential
      details: "The product receives input that is expected to specify an index,
        position, or offset into an indexable resource such as a buffer or file,
        but it does not validate or incorrectly validates that the specified
        index/position/offset has the required
        properties.Guidelines:::TYPE:Maintenance:NOTE:This entry is still under
        development and will continue to see updates and content
        improvements.::"
    - point: "CWE-ID: 1286Improper Validation of Syntactic Correctness of Input"
      priority: Essential
      details: "The product receives input that is expected to be well-formed - i.e.,
        to comply with a certain syntax - but it does not validate or
        incorrectly validates that the input complies with the
        syntax.Guidelines:::TYPE:Maintenance:NOTE:This entry is still under
        development and will continue to see updates and content
        improvements.::"
    - point: "CWE-ID: 1287Improper Validation of Specified Type of Input"
      priority: Essential
      details: "The product receives input that is expected to be of a certain type,
        but it does not validate or incorrectly validates that the input is
        actually of the expected type.Guidelines:::TYPE:Maintenance:NOTE:This
        entry is still under development and will continue to see updates and
        content improvements.::"
    - point: "CWE-ID: 1288Improper Validation of Consistency within Input"
      priority: Essential
      details: "The product receives a complex input with multiple elements or fields
        that must be consistent with each other, but it does not validate or
        incorrectly validates that the input is actually
        consistent.Guidelines:::TYPE:Maintenance:NOTE:This entry is still under
        development and will continue to see updates and content
        improvements.::"
    - point: "CWE-ID: 1289Improper Validation of Unsafe Equivalence in Input"
      priority: Essential
      details: "The product receives an input value that is used as a resource
        identifier or other type of reference, but it does not validate or
        incorrectly validates that the input is equivalent to a
        potentially-unsafe value.Guidelines:::TYPE:Maintenance:NOTE:This entry
        is still under development and will continue to see updates and content
        improvements.::"
    - point: "CWE-ID: 1290Incorrect Decoding of Security Identifiers"
      priority: Essential
      details: "The product implements a decoding mechanism to decode certain
        bus-transaction signals to security identifiers. If the decoding is
        implemented incorrectly, then untrusted agents can now gain unauthorized
        access to the asset.Guidelines:"
    - point: "CWE-ID: 1291Public Key Re-Use for Signing both Debug and Production
        Code"
      priority: Essential
      details: "The same public key is used for signing both debug and production
        code.Guidelines:"
    - point: "CWE-ID: 1292Incorrect Conversion of Security Identifiers"
      priority: Essential
      details: "The product implements a conversion mechanism to map certain
        bus-transaction signals to security identifiers. However, if the
        conversion is incorrectly implemented, untrusted agents can gain
        unauthorized access to the asset.Guidelines:"
    - point: "CWE-ID: 1293Missing Source Correlation of Multiple Independent Data"
      priority: Essential
      details: "The product relies on one source of data, preventing the ability to
        detect if an adversary has compromised a data source.Guidelines:"
    - point: "CWE-ID: 1294Insecure Security Identifier Mechanism"
      priority: Essential
      details: "The System-on-Chip (SoC) implements a Security Identifier mechanism to
        differentiate what actions are allowed or disallowed when a transaction
        originates from an entity. However, the Security Identifiers are not
        correctly implemented.Guidelines:::TYPE:Maintenance:NOTE:This entry is
        still under development and will continue to see updates and content
        improvements.::"
    - point: "CWE-ID: 1295Debug Messages Revealing Unnecessary Information"
      priority: Essential
      details: "The product fails to adequately prevent the revealing of unnecessary
        and potentially sensitive system information within debugging
        messages.Guidelines:"
    - point: "CWE-ID: 1296Incorrect Chaining or Granularity of Debug Components"
      priority: Essential
      details: "The product's debug components contain incorrect chaining or
        granularity of debug components.Guidelines:::TYPE:Maintenance:NOTE:This
        entry is still under development and will continue to see updates and
        content improvements.::"
    - point: "CWE-ID: 1297Unprotected Confidential Information on Device is Accessible
        by OSAT Vendors"
      priority: Essential
      details: "The product does not adequately protect confidential information on
        the device from being accessed by Outsourced Semiconductor Assembly and
        Test (OSAT) vendors.Guidelines:::TYPE:Maintenance:NOTE:This entry might
        be subject to CWE Scope Exclusion SCOPE.SITUATIONS (Focus on situations
        in which weaknesses may appear); SCOPE.HUMANPROC (Human/organizational
        process; and/or SCOPE.CUSTREL (Not
        customer-relevant).::TYPE:Maintenance:NOTE:This entry is still under
        development and will continue to see updates and content
        improvements.::"
    - point: "CWE-ID: 1298Hardware Logic Contains Race Conditions"
      priority: Essential
      details: "A race condition in the hardware logic results in undermining security
        guarantees of the system.Guidelines:"
    - point: "CWE-ID: 1299Missing Protection Mechanism for Alternate Hardware
        Interface"
      priority: Essential
      details: "The lack of protections on alternate paths to access control-protected
        assets (such as unprotected shadow registers and other external facing
        unguarded interfaces) allows an attacker to bypass existing protections
        to the asset that are only performed against the primary
        path.Guidelines:"
    - point: "CWE-ID: 1300Improper Protection of Physical Side Channels"
      priority: Essential
      details: "The device does not contain sufficient protection mechanisms to
        prevent physical side channels from exposing sensitive information due
        to patterns in physically observable phenomena such as variations in
        power consumption, electromagnetic emissions (EME), or acoustic
        emissions.Guidelines:"
    - point: "CWE-ID: 1301Insufficient or Incomplete Data Removal within Hardware
        Component"
      priority: Essential
      details: "The product's data removal process does not completely delete all data
        and potentially sensitive information within hardware
        components.Guidelines:::TYPE:Maintenance:NOTE:This entry is still under
        development and will continue to see updates and content
        improvements.::"
    - point: "CWE-ID: 1302Missing Source Identifier in Entity Transactions on a
        System-On-Chip (SOC)"
      priority: Essential
      details: "The product implements a security identifier mechanism to
        differentiate what actions are allowed or disallowed when a transaction
        originates from an entity. A transaction is sent without a security
        identifier.Guidelines:"
    - point: "CWE-ID: 1303Non-Transparent Sharing of Microarchitectural Resources"
      priority: Essential
      details: "Hardware structures shared across execution contexts (e.g., caches and
        branch predictors) can violate the expected architecture isolation
        between contexts.Guidelines:::TYPE:Maintenance:NOTE:As of CWE 4.9,
        members of the CWE Hardware SIG are closely analyzing this entry and
        others to improve CWE's coverage of transient execution weaknesses,
        which include issues related to Spectre, Meltdown, and other attacks.
        Additional investigation may include other weaknesses related to
        microarchitectural state. Finally, this entry's demonstrative example
        might not be appropriate. As a result, this entry might change
        significantly in CWE 4.10.::"
    - point: "CWE-ID: 1304Improperly Preserved Integrity of Hardware Configuration
        State During a Power Save/Restore Operation"
      priority: Essential
      details: "The product performs a power save/restore operation, but it does not
        ensure that the integrity of the configuration state is maintained
        and/or verified between the beginning and ending of the
        operation.Guidelines:"
    - point: "CWE-ID: 1310Missing Ability to Patch ROM Code"
      priority: Essential
      details: "Missing an ability to patch ROM code may leave a System or
        System-on-Chip (SoC) in a vulnerable state.Guidelines:"
    - point: "CWE-ID: 1311Improper Translation of Security Attributes by Fabric
        Bridge"
      priority: Essential
      details: "The bridge incorrectly translates security attributes from either
        trusted to untrusted or from untrusted to trusted when converting from
        one fabric protocol to another.Guidelines:"
    - point: "CWE-ID: 1312Missing Protection for Mirrored Regions in On-Chip Fabric
        Firewall"
      priority: Essential
      details: "The firewall in an on-chip fabric protects the main addressed region,
        but it does not protect any mirrored memory or memory-mapped-IO (MMIO)
        regions.Guidelines:"
    - point: "CWE-ID: 1313Hardware Allows Activation of Test or Debug Logic at
        Runtime"
      priority: Essential
      details: "During runtime, the hardware allows for test or debug logic (feature)
        to be activated, which allows for changing the state of the hardware.
        This feature can alter the intended behavior of the system and allow for
        alteration and leakage of sensitive data by an adversary.Guidelines:"
    - point: "CWE-ID: 1314Missing Write Protection for Parametric Data Values"
      priority: Essential
      details: "The device does not write-protect the parametric data values for
        sensors that scale the sensor value, allowing untrusted software to
        manipulate the apparent result and potentially damage hardware or cause
        operational failure.Guidelines:"
    - point: "CWE-ID: 1315Improper Setting of Bus Controlling Capability in Fabric
        End-point"
      priority: Essential
      details: "The bus controller enables bits in the fabric end-point to allow
        responder devices to control transactions on the fabric.Guidelines:"
    - point: "CWE-ID: 1316Fabric-Address Map Allows Programming of Unwarranted
        Overlaps of Protected and Unprotected Ranges"
      priority: Essential
      details: "The address map of the on-chip fabric has protected and unprotected
        regions overlapping, allowing an attacker to bypass access control to
        the overlapping portion of the protected
        region.Guidelines:::TYPE:Maintenance:NOTE:As of CWE 4.6, CWE-1260 and
        CWE-1316 are siblings under view 1000, but CWE-1260 might be a parent of
        CWE-1316. More analysis is warranted.::"
    - point: "CWE-ID: 1317Improper Access Control in Fabric Bridge"
      priority: Essential
      details: "The product uses a fabric bridge for transactions between two
        Intellectual Property (IP) blocks, but the bridge does not properly
        perform the expected privilege, identity, or other access control checks
        between those IP blocks.Guidelines:"
    - point: "CWE-ID: 1318Missing Support for Security Features in On-chip Fabrics or
        Buses"
      priority: Essential
      details: "On-chip fabrics or buses either do not support or are not configured
        to support privilege separation or other security features, such as
        access control.Guidelines:"
    - point: "CWE-ID: 1319Improper Protection against Electromagnetic Fault Injection
        (EM-FI)"
      priority: Essential
      details: "The device is susceptible to electromagnetic fault injection attacks,
        causing device internal information to be compromised or security
        mechanisms to be bypassed.Guidelines:::TYPE:Maintenance:NOTE:This entry
        is attack-oriented and may require significant modification in future
        versions, or even deprecation. It is not clear whether there is really a
        design mistake that enables such attacks, so this is not necessarily a
        weakness and may be more appropriate for CAPEC.::"
    - point: "CWE-ID: 1320Improper Protection for Outbound Error Messages and Alert
        Signals"
      priority: Essential
      details: "Untrusted agents can disable alerts about signal conditions exceeding
        limits or the response mechanism that handles such alerts.Guidelines:"
    - point: "CWE-ID: 1321Improperly Controlled Modification of Object Prototype
        Attributes ('Prototype Pollution')"
      priority: Essential
      details: "The product receives input from an upstream component that specifies
        attributes that are to be initialized or updated in an object, but it
        does not properly control modifications of attributes of the object
        prototype.Guidelines:"
    - point: "CWE-ID: 1322Use of Blocking Code in Single-threaded, Non-blocking
        Context"
      priority: Essential
      details: "The product uses a non-blocking model that relies on a single threaded
        process for features such as scalability, but it contains code that can
        block when it is invoked.Guidelines:"
    - point: "CWE-ID: 1323Improper Management of Sensitive Trace Data"
      priority: Essential
      details: "Trace data collected from several sources on the System-on-Chip (SoC)
        is stored in unprotected locations or transported to untrusted
        agents.Guidelines:"
    - point: "CWE-ID: 1325Improperly Controlled Sequential Memory Allocation"
      priority: Essential
      details: "The product manages a group of objects or resources and performs a
        separate memory allocation for each object, but it does not properly
        limit the total amount of memory that is consumed by all of the combined
        objects.Guidelines:"
    - point: "CWE-ID: 1326Missing Immutable Root of Trust in Hardware"
      priority: Essential
      details: "A missing immutable root of trust in the hardware results in the
        ability to bypass secure boot or execute untrusted or adversarial boot
        code.Guidelines:"
    - point: "CWE-ID: 1327Binding to an Unrestricted IP Address"
      priority: Essential
      details: "The product assigns the address 0.0.0.0 for a database server, a cloud
        service/instance, or any computing resource that communicates
        remotely.Guidelines:"
    - point: "CWE-ID: 1328Security Version Number Mutable to Older Versions"
      priority: Essential
      details: "Security-version number in hardware is mutable, resulting in the
        ability to downgrade (roll-back) the boot firmware to vulnerable code
        versions.Guidelines:"
    - point: "CWE-ID: 1329Reliance on Component That is Not Updateable"
      priority: Essential
      details: "The product contains a component that cannot be updated or patched in
        order to remove vulnerabilities or significant bugs.Guidelines:"
    - point: "CWE-ID: 1330Remanent Data Readable after Memory Erase"
      priority: Essential
      details: "Confidential information stored in memory circuits is readable or
        recoverable after being cleared or erased.Guidelines:"
    - point: "CWE-ID: 1331Improper Isolation of Shared Resources in Network On Chip
        (NoC)"
      priority: Essential
      details: "The Network On Chip (NoC) does not isolate or incorrectly isolates its
        on-chip-fabric and internal resources such that they are shared between
        trusted and untrusted agents, creating timing channels.Guidelines:"
    - point: "CWE-ID: 1332Improper Handling of Faults that Lead to Instruction Skips"
      priority: Essential
      details: "The device is missing or incorrectly implements circuitry or sensors
        that detect and mitigate the skipping of security-critical CPU
        instructions when they occur.Guidelines:"
    - point: "CWE-ID: 1333Inefficient Regular Expression Complexity"
      priority: Essential
      details: "The product uses a regular expression with an inefficient, possibly
        exponential worst-case computational complexity that consumes excessive
        CPU cycles.Guidelines:"
    - point: "CWE-ID: 1334Unauthorized Error Injection Can Degrade Hardware
        Redundancy"
      priority: Essential
      details: "An unauthorized agent can inject errors into a redundant block to
        deprive the system of redundancy or put the system in a degraded
        operating mode.Guidelines:"
    - point: "CWE-ID: 1335Incorrect Bitwise Shift of Integer"
      priority: Essential
      details: "An integer value is specified to be shifted by a negative amount or an
        amount greater than or equal to the number of bits contained in the
        value causing an unexpected or indeterminate result.Guidelines:"
    - point: "CWE-ID: 1336Improper Neutralization of Special Elements Used in a
        Template Engine"
      priority: Essential
      details: "The product uses a template engine to insert or process
        externally-influenced input, but it does not neutralize or incorrectly
        neutralizes special elements or syntax that can be interpreted as
        template expressions or other code directives when processed by the
        engine.Guidelines:::TYPE:Relationship:NOTE:Since expression languages
        are often used in templating languages, there may be some overlap with
        CWE-917 (Expression Language Injection). XSS (CWE-79) is also co-located
        with template injection.::TYPE:Maintenance:NOTE:The interrelationships
        and differences between CWE-917 and CWE-1336 need to be further
        clarified.::"
    - point: "CWE-ID: 1338Improper Protections Against Hardware Overheating"
      priority: Essential
      details: "A hardware device is missing or has inadequate protection features to
        prevent overheating.Guidelines:"
    - point: "CWE-ID: 1339Insufficient Precision or Accuracy of a Real Number"
      priority: Essential
      details: "The product processes a real number with an implementation in which
        the number's representation does not preserve required accuracy and
        precision in its fractional part, causing an incorrect
        result.Guidelines:"
    - point: "CWE-ID: 1341Multiple Releases of Same Resource or Handle"
      priority: Essential
      details: "The product attempts to close or release a resource or handle more
        than once, without any successful open between the close
        operations.Guidelines:::TYPE:Terminology:NOTE:The terms related to
        release may vary depending on the type of resource, programming
        language, specification, or framework. Close has been used synonymously
        for the release of resources like file descriptors and file handles.
        Return is sometimes used instead of Release. Free is typically used when
        releasing memory or buffers back into the system for reuse.::"
    - point: "CWE-ID: 1342Information Exposure through Microarchitectural State after
        Transient Execution"
      priority: Essential
      details: "The processor does not properly clear microarchitectural state after
        incorrect microcode assists or speculative execution, resulting in
        transient execution.Guidelines:::TYPE:Relationship:NOTE:CWE-1342 differs
        from CWE-1303, which is related to misprediction and biasing
        microarchitectural components, while CWE-1342 addresses illegal data
        flows and retention. For example, Spectre is an instance of CWE-1303
        biasing branch prediction to steer the transient execution
        indirectly.::TYPE:Maintenance:NOTE:As of CWE 4.9, members of the CWE
        Hardware SIG are closely analyzing this entry and others to improve
        CWE's coverage of transient execution weaknesses, which include issues
        related to Spectre, Meltdown, and other attacks. Additional
        investigation may include other weaknesses related to microarchitectural
        state. As a result, this entry might change significantly in CWE
        4.10.::"
    - point: "CWE-ID: 1351Improper Handling of Hardware Behavior in Exceptionally Cold
        Environments"
      priority: Essential
      details: "A hardware device, or the firmware running on it, is missing or has
        incorrect protection features to maintain goals of security primitives
        when the device is cooled below standard operating
        temperatures.Guidelines:"
    - point: "CWE-ID: 1357Reliance on Insufficiently Trustworthy Component"
      priority: Essential
      details: "The product is built from multiple separate components, but it uses a
        component that is not sufficiently trusted to meet expectations for
        security, reliability, updateability, and
        maintainability.Guidelines:::TYPE:Maintenance:NOTE:As of CWE 4.10, the
        name and description for this entry has undergone significant change and
        is still under public discussion, especially by members of the HW
        SIG.::"
    - point: "CWE-ID: 1384Improper Handling of Physical or Environmental Conditions"
      priority: Essential
      details: "The product does not properly handle unexpected physical or
        environmental conditions that occur naturally or are artificially
        induced.Guidelines:"
    - point: "CWE-ID: 1385Missing Origin Validation in WebSockets"
      priority: Essential
      details: "The product uses a WebSocket, but it does not properly verify that the
        source of data or communication is valid.Guidelines:"
    - point: "CWE-ID: 1386Insecure Operation on Windows Junction / Mount Point"
      priority: Essential
      details: "The product opens a file or directory, but it does not properly
        prevent the name from being associated with a junction or mount point to
        a destination that is outside of the intended control
        sphere.Guidelines:::TYPE:Terminology:NOTE:Symbolic links, hard links,
        junctions, and mount points can be confusing terminology, as there are
        differences in how they operate between UNIX-based systems and Windows,
        and there are interactions between them.::TYPE:Maintenance:NOTE:This
        entry is still under development and will continue to see updates and
        content improvements.::"
    - point: "CWE-ID: 1389Incorrect Parsing of Numbers with Different Radices"
      priority: Essential
      details: "The product parses numeric input assuming base 10 (decimal) values,
        but it does not account for inputs that use a different base number
        (radix).Guidelines:"
    - point: "CWE-ID: 1390Weak Authentication"
      priority: Essential
      details: "The product uses an authentication mechanism to restrict access to
        specific users or identities, but the mechanism does not sufficiently
        prove that the claimed identity is correct.Guidelines:"
    - point: "CWE-ID: 1391Use of Weak Credentials"
      priority: Essential
      details: "The product uses weak credentials (such as a default key or hard-coded
        password) that can be calculated, derived, reused, or guessed by an
        attacker.Guidelines:"
    - point: "CWE-ID: 1392Use of Default Credentials"
      priority: Essential
      details: "The product uses default credentials (such as passwords or
        cryptographic keys) for potentially critical functionality.Guidelines:"
    - point: "CWE-ID: 1393Use of Default Password"
      priority: Essential
      details: "The product uses default passwords for potentially critical
        functionality.Guidelines:"
    - point: "CWE-ID: 1394Use of Default Cryptographic Key"
      priority: Essential
      details: "The product uses a default cryptographic key for potentially critical
        functionality.Guidelines:"
    - point: "CWE-ID: 1395Dependency on Vulnerable Third-Party Component"
      priority: Essential
      details: "The product has a dependency on a third-party component that contains
        one or more known vulnerabilities.Guidelines:"
    - point: "CWE-ID: 1419Incorrect Initialization of Resource"
      priority: Essential
      details: "The product attempts to initialize a resource but does not correctly
        do so, which might leave the resource in an unexpected, incorrect, or
        insecure state when it is accessed.Guidelines:"
    - point: "CWE-ID: 1420Exposure of Sensitive Information during Transient
        Execution"
      priority: Essential
      details: "A processor event or prediction may allow incorrect operations (or
        correct operations with incorrect data) to execute transiently,
        potentially exposing data over a covert channel.Guidelines:"
    - point: "CWE-ID: 1421Exposure of Sensitive Information in Shared
        Microarchitectural Structures during Transient Execution"
      priority: Essential
      details: "A processor event may allow transient operations to access
        architecturally restricted data (for example, in another address space)
        in a shared microarchitectural structure (for example, a CPU cache),
        potentially exposing the data over a covert channel.Guidelines:"
    - point: "CWE-ID: 1422Exposure of Sensitive Information caused by Incorrect Data
        Forwarding during Transient Execution"
      priority: Essential
      details: "A processor event or prediction may allow incorrect or stale data to
        be forwarded to transient operations, potentially exposing data over a
        covert channel.Guidelines:"
    - point: "CWE-ID: 1423Exposure of Sensitive Information caused by Shared
        Microarchitectural Predictor State that Influences Transient Execution"
      priority: Essential
      details: "Shared microarchitectural predictor state may allow code to influence
        transient execution across a hardware boundary, potentially exposing
        data that is accessible beyond the boundary over a covert
        channel.Guidelines:"
  color: lime
- title: OWASP Top 10
  slug: owasp-security
  description: Taking measures to comply OWASP security guidelines
  icon: physical
  intro: >-
    Public records often include sensitive personal data (full name, date of
    birth, phone number, email, address, ethnicity etc), and are gathered from a
    range of sources (census records, birth/ death/ marriage certificates, voter
    registrants, marketing information, customer databases, motor vehicle
    records, professional/ business licenses and all court files in full
    detail). This sensitive personal information is [easy and legal to
    access](https://www.consumerreports.org/consumerist/its-creepy-but-not-illegal-for-this-website-to-provide-all-your-public-info-to-anyone/),
    which raises some [serious privacy
    concerns](https://privacyrights.org/resources/public-records-internet-privacy-dilemma)
    (identity theft, personal safety risks/ stalkers, destruction of
    reputations, dossier society)


    CCTV is one of the major ways that the corporations, individuals and the government tracks your movements. In London, UK the average person is caught on camera about 500 times per day. This network is continuing to grow, and in many cities around the world, facial recognition is being rolled out, meaning the state can know the identity of residents on the footage in real-time.

    Strong authentication, encrypted devices, patched software and anonymous web browsing may be of little use if someone is able to physically compromise you, your devices and your data. This section outlines some basic methods for physical security
  checklist:
    - point: Destroy Sensitive Documents
      priority: Essential
      details: |
        Shred or redact sensitive documents before disposal to protect against
        identity theft and maintain confidentiality.
    - point: Opt-Out of Public Records
      priority: Essential
      details: >
        Contact people search websites to opt-out from listings that show
        persona

        information, using guides like Michael Bazzell's Personal Data Removal Workbook.
    - point: Watermark Documents
      priority: Essential
      details: >
        Add a watermark with the recipient's name and date to digital copies of
        personal documents to trace the source of a breach.
    - point: Don't Reveal Info on Inbound Calls
      priority: Essential
      details: >
        Only share personal data on calls you initiate and verify the
        recipient's phone number.
    - point: Stay Alert
      priority: Essential
      details: >
        Be aware of your surroundings and assess potential risks in new
        environments.
    - point: Secure Perimeter
      priority: Essential
      details: >
        Ensure physical security of locations storing personal info devices,
        minimizing external access and using intrusion detection systems.
    - point: Physically Secure Devices
      priority: Essential
      details: >
        Ensure physical security of locations storing personal info devices,
        minimizing external access and using intrusion detection systems.
    - point: Keep Devices Out of Direct Sight
      priority: Essential
      details: >
        Ensure physical security of locations storing personal info devices,
        minimizing external access and using intrusion detection systems.
    - point: Protect your PIN
      priority: Essential
      details: >
        Ensure physical security of locations storing personal info devices,
        minimizing external access and using intrusion detection systems.
    - point: Check for Skimmers
      priority: Essential
      details: >
        Ensure physical security of locations storing personal info devices,
        minimizing external access and using intrusion detection systems.
    - point: Protect your Home Address
      priority: Optional
      details: Use alternative locations, forwarding addresses, and anonymous payment
        methods to protect your home address.
    - point: Audit your design and implementation with unit/integration tests
        coverage.
      priority: Optional
    - point: Use a code review process and disregard self-approval.
      priority: Optional
    - point: Ensure that all components of your services are statically scanned by AV
        software before pushing to production, including vendor libraries and
        other dependencies.
      priority: Optional
    - point: Design a rollback solution for deployments.
      priority: Optional
  color: lime
- title: NIST Security Guidelines
  slug: nist-security
  description: Taking measures to comply OWASP security guidelines
  icon: physical
  intro: >-
    Public records often include sensitive personal data (full name, date of
    birth, phone number, email, address, ethnicity etc), and are gathered from a
    range of sources (census records, birth/ death/ marriage certificates, voter
    registrants, marketing information, customer databases, motor vehicle
    records, professional/ business licenses and all court files in full
    detail). This sensitive personal information is [easy and legal to
    access](https://www.consumerreports.org/consumerist/its-creepy-but-not-illegal-for-this-website-to-provide-all-your-public-info-to-anyone/),
    which raises some [serious privacy
    concerns](https://privacyrights.org/resources/public-records-internet-privacy-dilemma)
    (identity theft, personal safety risks/ stalkers, destruction of
    reputations, dossier society)


    CCTV is one of the major ways that the corporations, individuals and the government tracks your movements. In London, UK the average person is caught on camera about 500 times per day. This network is continuing to grow, and in many cities around the world, facial recognition is being rolled out, meaning the state can know the identity of residents on the footage in real-time.

    Strong authentication, encrypted devices, patched software and anonymous web browsing may be of little use if someone is able to physically compromise you, your devices and your data. This section outlines some basic methods for physical security
  checklist:
    - point: 32 CFR 2002
      priority: Advanced
      details: Code of Federal Regulations, Title 32, *Controlled Unclassified
        Information* (32 C.F.R. 2002).
    - point: 41 CFR 201
      priority: Advanced
      details: ' "Federal Acquisition Supply Chain Security Act; Rule," 85 Federal
        Register 54263 (September 1, 2020), pp 54263-54271.'
    - point: 5 CFR 731
      priority: Advanced
      details: Code of Federal Regulations, Title 5, *Administrative Personnel* ,
        Section 731.106, *Designation of Public Trust Positions and
        Investigative Requirements* (5 C.F.R. 731.106).
    - point: CNSSD 505
      priority: Advanced
      details: Committee on National Security Systems Directive No. 505, *Supply Chain
        Risk Management (SCRM)* , August 2017.
    - point: CNSSI 1253
      priority: Advanced
      details: Committee on National Security Systems Instruction No. 1253, *Security
        Categorization and Control Selection for National Security Systems* ,
        March 2014.
    - point: DHS TIC
      priority: Advanced
      details: Department of Homeland Security, *Trusted Internet Connections (TIC)*.
    - point: DOD STIG
      priority: Advanced
      details: Defense Information Systems Agency, *Security Technical Implementation
        Guides (STIG)*.
    - point: EO 13526
      priority: Advanced
      details: Executive Order 13526, *Classified National Security Information* ,
        December 2009.
    - point: EO 13556
      priority: Advanced
      details: Executive Order 13556, *Controlled Unclassified Information* , November
        2010.
    - point: EO 13587
      priority: Advanced
      details: Executive Order 13587, *Structural Reforms to Improve the Security of
        Classified Networks and the Responsible Sharing and Safeguarding of
        Classified Information* , October 2011.
    - point: EO 13873
      priority: Advanced
      details: Executive Order 13873, *Executive Order on Securing the Information and
        Communications Technology and Services Supply Chain* , May 2019.
    - point: FASC18
      priority: Advanced
      details: Secure Technology Act [includes Federal Acquisition Supply Chain
        Security Act] (P.L. 115-390), December 2018.
    - point: FED PKI
      priority: Advanced
      details: General Services Administration, *Federal Public Key Infrastructure*.
    - point: FIPS 140-3
      priority: Advanced
      details: "National Institute of Standards and Technology (2019) Security
        Requirements for Cryptographic Modules. (U.S. Department of Commerce,
        Washington, D.C.), Federal Information Processing Standards Publication
        (FIPS) 140-3. "
    - point: FIPS 180-4
      priority: Advanced
      details: National Institute of Standards and Technology (2015) Secure Hash
        Standard (SHS). (U.S. Department of Commerce, Washington, D.C.), Federal
        Information Processing Standards Publication (FIPS) 180-4.
    - point: FIPS 186-4
      priority: Advanced
      details: National Institute of Standards and Technology (2013) Digital Signature
        Standard (DSS). (U.S. Department of Commerce, Washington, D.C.), Federal
        Information Processing Standards Publication (FIPS) 186-4.
    - point: FIPS 197
      priority: Advanced
      details: National Institute of Standards and Technology (2001) Advanced
        Encryption Standard (AES). (U.S. Department of Commerce, Washington,
        D.C.), Federal Information Processing Standards Publication (FIPS) 197.
    - point: FIPS 199
      priority: Advanced
      details: National Institute of Standards and Technology (2004) Standards for
        Security Categorization of Federal Information and Information Systems.
        (U.S. Department of Commerce, Washington, D.C.), Federal Information
        Processing Standards Publication (FIPS) 199.
    - point: FIPS 200
      priority: Advanced
      details: National Institute of Standards and Technology (2006) Minimum Security
        Requirements for Federal Information and Information Systems. (U.S.
        Department of Commerce, Washington, D.C.), Federal Information
        Processing Standards Publication (FIPS) 200.
    - point: FIPS 201-2
      priority: Advanced
      details: National Institute of Standards and Technology (2013) Personal Identity
        Verification (PIV) of Federal Employees and Contractors. (U.S.
        Department of Commerce, Washington, D.C.), Federal Information
        Processing Standards Publication (FIPS) 201-2.
    - point: FIPS 202
      priority: Advanced
      details: National Institute of Standards and Technology (2015) SHA-3 Standard
        Permutation-Based Hash and Extendable-Output Functions. (U.S. Department
        of Commerce, Washington, D.C.), Federal Information Processing Standards
        Publication (FIPS) 202.
    - point: FISMA
      priority: Advanced
      details: Federal Information Security Modernization Act (P.L. 113-283), December
        2014.
    - point: HSPD 12
      priority: Advanced
      details: Homeland Security Presidential Directive 12, Policy for a Common
        Identification Standard for Federal Employees and Contractors, August
        2004.
    - point: IR 7539
      priority: Advanced
      details: Cooper DA, MacGregor WI (2008) Symmetric Key Injection onto Smart
        Cards. (National Institute of Standards and Technology, Gaithersburg,
        MD), NIST Interagency or Internal Report (IR) 7539.
    - point: IR 7559
      priority: Advanced
      details: Singhal A, Gunestas M, Wijesekera D (2010) Forensics Web Services
        (FWS). (National Institute of Standards and Technology, Gaithersburg,
        MD), NIST Interagency or Internal Report (IR) 7559.
    - point: IR 7622
      priority: Advanced
      details: Boyens JM, Paulsen C, Bartol N, Shankles S, Moorthy R (2012) Notional
        Supply Chain Risk Management Practices for Federal Information Systems.
        (National Institute of Standards and Technology, Gaithersburg, MD), NIST
        Interagency or Internal Report (IR) 7622.
    - point: IR 7676
      priority: Advanced
      details: Cooper DA (2010) Maintaining and Using Key History on Personal Identity
        Verification (PIV) Cards. (National Institute of Standards and
        Technology, Gaithersburg, MD), NIST Interagency or Internal Report (IR)
        7676.
    - point: IR 7788
      priority: Advanced
      details: Singhal A, Ou X (2011) Security Risk Analysis of Enterprise Networks
        Using Probabilistic Attack Graphs. (National Institute of Standards and
        Technology, Gaithersburg, MD), NIST Interagency or Internal Report (IR)
        7788.
    - point: IR 7817
      priority: Advanced
      details: Ferraiolo H (2012) A Credential Reliability and Revocation Model for
        Federated Identities. (National Institute of Standards and Technology,
        Gaithersburg, MD), NIST Interagency or Internal Report (IR) 7817.
    - point: IR 7849
      priority: Advanced
      details: Chandramouli R (2014) A Methodology for Developing Authentication
        Assurance Level Taxonomy for Smart Card-based Identity Verification.
        (National Institute of Standards and Technology, Gaithersburg, MD), NIST
        Interagency or Internal Report (IR) 7849.
    - point: IR 7870
      priority: Advanced
      details: Cooper DA (2012) NIST Test Personal Identity Verification (PIV) Cards.
        (National Institute of Standards and Technology, Gaithersburg, MD), NIST
        Interagency or Internal Report (IR) 7870.
    - point: IR 7874
      priority: Advanced
      details: Hu VC, Scarfone KA (2012) Guidelines for Access Control System
        Evaluation Metrics. (National Institute of Standards and Technology,
        Gaithersburg, MD), NIST Interagency or Internal Report (IR) 7874.
    - point: IR 7956
      priority: Advanced
      details: Chandramouli R, Iorga M, Chokhani S (2013) Cryptographic Key Management
        Issues & Challenges in Cloud Services. (National Institute of Standards
        and Technology, Gaithersburg, MD), NIST Interagency or Internal Report
        (IR)
    - point: IR 7966
      priority: Advanced
      details: Ylonen T, Turner P, Scarfone KA, Souppaya MP (2015) Security of
        Interactive and Automated Access Management Using Secure Shell (SSH).
        (National Institute of Standards and Technology, Gaithersburg, MD), NIST
        Interagency or Internal Report (IR) 7966.
    - point: IR 8011-1
      priority: Advanced
      details: "Dempsey KL, Eavy P, Moore G (2017) Automation Support for Security
        Control Assessments: Volume 1: Overview. (National Institute of
        Standards and Technology, Gaithersburg, MD), NIST Interagency or
        Internal Report (IR) 8011, Volume 1."
    - point: IR 8011-2
      priority: Advanced
      details: "Dempsey KL, Eavy P, Moore G (2017) Automation Support for Security
        Control Assessments: Volume 2: Hardware Asset Management. (National
        Institute of Standards and Technology, Gaithersburg, MD), NIST
        Interagency or Internal Report (IR) 8011, Volume 2."
    - point: IR 8011-3
      priority: Advanced
      details: "Dempsey KL, Eavy P, Goren N, Moore G (2018) Automation Support for
        Security Control Assessments: Volume 3: Software Asset Management.
        (National Institute of Standards and Technology, Gaithersburg, MD), NIST
        Interagency or Internal Report (IR) 8011, Volume 3."
    - point: IR 8011-4
      priority: Advanced
      details: "Dempsey KL, Takamura E, Eavy P, Moore G (2020) Automation Support for
        Security Control Assessments: Volume 4: Software Vulnerability
        Management. (National Institute of Standards and Technology,
        Gaithersburg, MD), NIST Interagency or Internal Report (IR) 8011, Volume
        4."
    - point: IR 8023
      priority: Advanced
      details: Dempsey KL, Paulsen C (2015) Risk Management for Replication Devices.
        (National Institute of Standards and Technology, Gaithersburg, MD), NIST
        Interagency or Internal Report (IR) 8023.
    - point: IR 8040
      priority: Advanced
      details: Greene KK, Kelsey JM, Franklin JM (2016) Measuring the Usability and
        Security of Permuted Passwords on Mobile Platforms. (National Institute
        of Standards and Technology, Gaithersburg, MD), NIST Interagency or
        Internal Report (IR) 8040.
    - point: IR 8062
      priority: Advanced
      details: Brooks S, Garcia M, Lefkovitz N, Lightman S, Nadeau E (2017) An
        Introduction to Privacy Engineering and Risk Management in Federal
        Systems. (National Institute of Standards and Technology, Gaithersburg,
        MD), NIST Interagency or Internal Report (IR) 8062.
    - point: IR 8112
      priority: Advanced
      details: "Grassi P, Lefkovitz N, Nadeau E, Galluzzo R, Dinh, A (2018) Attribute
        Metadata: A Proposed Schema for Evaluating Federated Attributes.
        (National Institute of Standards and Technology, Gaithersburg, MD), NIST
        Interagency or Internal Report (IR) 8112."
    - point: IR 8179
      priority: Advanced
      details: "Paulsen C, Boyens JM, Bartol N, Winkler K (2018) Criticality Analysis
        Process Model: Prioritizing Systems and Components. (National Institute
        of Standards and Technology, Gaithersburg, MD), NIST Interagency or
        Internal Report (IR) 8179."
    - point: IR 8272
      priority: Advanced
      details: Paulsen C, Winkler K, Boyens JM, Ng J, Gimbi J (2020) Impact Analysis
        Tool for Interdependent Cyber Supply Chain Risks. (National Institute of
        Standards and Technology, Gaithersburg, MD), NIST Interagency or
        Internal Report (IR) 8272.
    - point: ISO 15408-1
      priority: Advanced
      details: "International Organization for Standardization/International
        Electrotechnical Commission 15408-1:2009, *Information technology
        —Security techniques — Evaluation criteria for IT security — Part 1:
        Introduction and general model* , April 2017."
    - point: ISO 15408-2
      priority: Advanced
      details: "International Organization for Standardization/International
        Electrotechnical Commission 15408-2:2008, *Information technology
        —Security techniques — Evaluation criteria for IT security — Part 2:
        Security functional requirements* , April 2017."
    - point: ISO 15408-3
      priority: Advanced
      details: "International Organization for Standardization/International
        Electrotechnical Commission 15408-3:2008, *Information
        technology—Security techniques — Evaluation criteria for IT security —
        Part 3: Security assurance requirements* , April 2017."
    - point: ISO 20243
      priority: Advanced
      details: "International Organization for Standardization/International
        Electrotechnical Commission 20243-1:2018, *Information technology — Open
        Trusted Technology Provider™ Standard (O-TTPS) — Mitigating maliciously
        tainted and counterfeit products — Part 1: Requirements and
        recommendations* , February 2018."
    - point: ISO 27036
      priority: Advanced
      details: "International Organization for Standardization/International
        Electrotechnical Commission 27036-1:2014, *Information
        technology—Security techniques—Information security for supplier
        relationships, Part 1: Overview and concepts* , April 2014."
    - point: ISO 29147
      priority: Advanced
      details: International Organization for Standardization/International
        Electrotechnical Commission 29147:2018, *Information technology—Security
        techniques—Vulnerability disclosure* , October 2018.
    - point: ISO 29148
      priority: Advanced
      details: International Organization for Standardization/International
        Electrotechnical Commission/Institute of Electrical and Electronics
        Engineers (ISO/IEC/IEEE) 29148:2018, *Systems and software
        engineering—Life cycle processes—Requirements engineering* , November
        2018.
    - point: NARA CUI
      priority: Advanced
      details: National Archives and Records Administration, Controlled Unclassified
        Information (CUI) Registry.
    - point: NCPR
      priority: Advanced
      details: National Institute of Standards and Technology (2020) *National
        Checklist Program Repository* . Available at
    - point: NIAP CCEVS
      priority: Advanced
      details: National Information Assurance Partnership, *Common Criteria Evaluation
        and Validation Scheme*.
    - point: NIST CAVP
      priority: Advanced
      details: National Institute of Standards and Technology (2020) *Cryptographic
        Algorithm Validation Program* . Available at
    - point: NIST CMVP
      priority: Advanced
      details: National Institute of Standards and Technology (2020) *Cryptographic
        Module Validation Program* . Available at
    - point: NSA CSFC
      priority: Advanced
      details: National Security Agency, *Commercial Solutions for Classified Program
        (CSfC)*.
    - point: NSA MEDIA
      priority: Advanced
      details: National Security Agency, *Media Destruction Guidance*.
    - point: ODNI CTF
      priority: Advanced
      details: Office of the Director of National Intelligence (ODNI) Cyber Threat
        Framework.
    - point: OMB A-130
      priority: Advanced
      details: Office of Management and Budget Memorandum Circular A-130, *Managing
        Information as a Strategic Resource* , July 2016.
    - point: OMB M-17-12
      priority: Advanced
      details: Office of Management and Budget Memorandum M-17-12, *Preparing for and
        Responding to a Breach of Personally Identifiable Information* , January
        2017.
    - point: OMB M-19-03
      priority: Advanced
      details: Office of Management and Budget Memorandum M-19-03, *Strengthening the
        Cybersecurity of Federal Agencies by Enhancing the High Value Asset
        Program* , December 2018.
    - point: PRIVACT
      priority: Advanced
      details: Privacy Act (P.L. 93-579), December 1974.
    - point: SP 800-100
      priority: Advanced
      details: "Bowen P, Hash J, Wilson M (2006) Information Security Handbook: A
        Guide for Managers. (National Institute of Standards and Technology,
        Gaithersburg, MD), NIST Special Publication (SP) 800-100, Includes
        updates as of March 7, 2007."
    - point: SP 800-101
      priority: Advanced
      details: Ayers RP, Brothers S, Jansen W (2014) Guidelines on Mobile Device
        Forensics. (National Institute of Standards and Technology,
        Gaithersburg, MD), NIST Special Publication (SP) 800-101, Rev. 1.
    - point: SP 800-111
      priority: Advanced
      details: Scarfone KA, Souppaya MP, Sexton M (2007) Guide to Storage Encryption
        Technologies for End User Devices. (National Institute of Standards and
        Technology, Gaithersburg, MD), NIST Special Publication (SP) 800-111.
    - point: SP 800-113
      priority: Advanced
      details: Frankel SE, Hoffman P, Orebaugh AD, Park R (2008) Guide to SSL VPNs.
        (National Institute of Standards and Technology, Gaithersburg, MD), NIST
        Special Publication (SP) 800-113.
    - point: SP 800-114
      priority: Advanced
      details: Souppaya MP, Scarfone KA (2016) User's Guide to Telework and Bring Your
        Own Device (BYOD) Security. (National Institute of Standards and
        Technology, Gaithersburg, MD), NIST Special Publication (SP) 800-114,
        Rev. 1.
    - point: SP 800-115
      priority: Advanced
      details: Scarfone KA, Souppaya MP, Cody A, Orebaugh AD (2008) Technical Guide to
        Information Security Testing and Assessment. (National Institute of
        Standards and Technology, Gaithersburg, MD), NIST Special Publication
        (SP) 800-115.
    - point: SP 800-116
      priority: Advanced
      details: Ferraiolo H, Mehta KL, Ghadiali N, Mohler J, Johnson V, Brady S (2018)
        A Recommendation for the Use of PIV Credentials in Physical Access
        Control Systems (PACS). (National Institute of Standards and Technology,
        Gaithersburg, MD), NIST Special Publication (SP) 800-116, Rev. 1.
    - point: SP 800-121
      priority: Advanced
      details: Padgette J, Bahr J, Holtmann M, Batra M, Chen L, Smithbey R, Scarfone
        KA (2017) Guide to Bluetooth Security. (National Institute of Standards
        and Technology, Gaithersburg, MD), NIST Special Publication (SP)
        800-121, Rev. 2.
    - point: SP 800-124
      priority: Advanced
      details: Souppaya MP, Scarfone KA (2013) Guidelines for Managing the Security of
        Mobile Devices in the Enterprise. (National Institute of Standards and
        Technology, Gaithersburg, MD), NIST Special Publication (SP) 800-124,
        Rev. 1.
    - point: SP 800-125B
      priority: Advanced
      details: Chandramouli R (2016) Secure Virtual Network Configuration for Virtual
        Machine (VM) Protection. (National Institute of Standards and
        Technology, Gaithersburg, MD), NIST Special Publication (SP) 800-125B.
    - point: SP 800-126
      priority: Advanced
      details: "Waltermire DA, Quinn SD, Booth H, III, Scarfone KA, Prisaca D (2018)
        The Technical Specification for the Security Content Automation Protocol
        (SCAP): SCAP Version 1.3. (National Institute of Standards and
        Technology, Gaithersburg, MD), NIST Special Publication (SP) 800-126,
        Rev. 3."
    - point: SP 800-128
      priority: Advanced
      details: Johnson LA, Dempsey KL, Ross RS, Gupta S, Bailey D (2011) Guide for
        Security-Focused Configuration Management of Information Systems.
        (National Institute of Standards and Technology, Gaithersburg, MD), NIST
        Special Publication (SP) 800-128, Includes updates as of October 10,
        2019.
    - point: SP 800-12
      priority: Advanced
      details: Nieles M, Pillitteri VY, Dempsey KL (2017) An Introduction to
        Information Security. (National Institute of Standards and Technology,
        Gaithersburg, MD), NIST Special Publication (SP) 800-12, Rev. 1.
    - point: SP 800-130
      priority: Advanced
      details: Barker EB, Smid ME, Branstad DK, Chokhani S (2013) A Framework for
        Designing Cryptographic Key Management Systems. (National Institute of
        Standards and Technology, Gaithersburg, MD), NIST Special Publication
        (SP) 800-130.
    - point: SP 800-137A
      priority: Advanced
      details: "Dempsey KL, Pillitteri VY, Baer C, Niemeyer R, Rudman R, Urban S
        (2020) Assessing Information Security Continuous Monitoring (ISCM)
        Programs: Developing an ISCM Program Assessment. (National Institute of
        Standards and Technology, Gaithersburg, MD), NIST Special Publication
        (SP) 800-137A."
    - point: SP 800-137
      priority: Advanced
      details: Dempsey KL, Chawla NS, Johnson LA, Johnston R, Jones AC, Orebaugh AD,
        Scholl MA, Stine KM (2011) Information Security Continuous Monitoring
        (ISCM) for Federal Information Systems and Organizations. (National
        Institute of Standards and Technology, Gaithersburg, MD), NIST Special
        Publication (SP) 800-137.
    - point: SP 800-147
      priority: Advanced
      details: Cooper DA, Polk T, Regenscheid AR, Souppaya MP (2011) BIOS Protection
        Guidelines. (National Institute of Standards and Technology,
        Gaithersburg, MD), NIST Special Publication (SP) 800-147.
    - point: SP 800-150
      priority: Advanced
      details: Johnson CS, Waltermire DA, Badger ML, Skorupka C, Snyder J (2016) Guide
        to Cyber Threat Information Sharing. (National Institute of Standards
        and Technology, Gaithersburg, MD), NIST Special Publication (SP)
        800-150.
    - point: SP 800-152
      priority: Advanced
      details: Barker EB, Branstad DK, Smid ME (2015) A Profile for U.S. Federal
        Cryptographic Key Management Systems (CKMS). (National Institute of
        Standards and Technology, Gaithersburg, MD), NIST Special Publication
        (SP) 800-152.
    - point: SP 800-154
      priority: Advanced
      details: Souppaya MP, Scarfone KA (2016) Guide to Data-Centric System Threat
        Modeling. (National Institute of Standards and Technology, Gaithersburg,
        MD), Draft NIST Special Publication (SP) 800-154.
    - point: SP 800-156
      priority: Advanced
      details: Ferraiolo H, Chandramouli R, Mehta KL, Mohler J, Skordinski S, Brady S
        (2016) Representation of PIV Chain-of-Trust for Import and Export.
        (National Institute of Standards and Technology, Gaithersburg, MD), NIST
        Special Publication (SP) 800-156.
    - point: SP 800-160-1
      priority: Advanced
      details: "Ross RS, Oren JC, McEvilley M (2016) Systems Security Engineering:
        Considerations for a Multidisciplinary Approach in the Engineering of
        Trustworthy Secure Systems. (National Institute of Standards and
        Technology, Gaithersburg, MD), NIST Special Publication (SP) 800-160,
        Vol. 1, Includes updates as of March 21, 2018."
    - point: SP 800-160-2
      priority: Advanced
      details: "Ross RS, Pillitteri VY, Graubart R, Bodeau D, McQuaid R (2019)
        Developing Cyber Resilient Systems: A Systems Security Engineering
        Approach. (National Institute of Standards and Technology, Gaithersburg,
        MD), NIST Special Publication (SP) 800-160, Vol. 2."
    - point: SP 800-161
      priority: Advanced
      details: Boyens JM, Paulsen C, Moorthy R, Bartol N (2015) Supply Chain Risk
        Management Practices for Federal Information Systems and Organizations.
        (National Institute of Standards and Technology, Gaithersburg, MD), NIST
        Special Publication (SP) 800-161.
    - point: SP 800-162
      priority: Advanced
      details: Hu VC, Ferraiolo DF, Kuhn R, Schnitzer A, Sandlin K, Miller R, Scarfone
        KA (2014) Guide to Attribute Based Access Control (ABAC) Definition and
        Considerations. (National Institute of Standards and Technology,
        Gaithersburg, MD), NIST Special Publication (SP) 800-162, Includes
        updates as of August 2, 2019.
    - point: SP 800-166
      priority: Advanced
      details: Cooper DA, Ferraiolo H, Chandramouli R, Ghadiali N, Mohler J, Brady S
        (2016) Derived PIV Application and Data Model Test Guidelines. (National
        Institute of Standards and Technology, Gaithersburg, MD), NIST Special
        Publication (SP) 800-166.
    - point: SP 800-167
      priority: Advanced
      details: Sedgewick A, Souppaya MP, Scarfone KA (2015) Guide to Application
        Whitelisting. (National Institute of Standards and Technology,
        Gaithersburg, MD), NIST Special Publication (SP) 800-167.
    - point: SP 800-171
      priority: Advanced
      details: Ross RS, Pillitteri VY, Dempsey KL, Riddle M, Guissanie G (2020)
        Protecting Controlled Unclassified Information in Nonfederal Systems and
        Organizations. (National Institute of Standards and Technology,
        Gaithersburg, MD), NIST Special Publication (SP) 800-171, Rev. 2.
    - point: SP 800-172
      priority: Advanced
      details: "Ross RS, Pillitteri VY, Graubart RD, Guissanie G, Wagner R, Bodeau D
        (2020) Enhanced Security Requirements for Protecting Controlled
        Unclassified Information: A Supplement to NIST Special Publication
        800-171 (Final Public Draft). (National Institute of Standards and
        Technology, Gaithersburg, MD), NIST Special Publication (SP) 800-172."
    - point: SP 800-177
      priority: Advanced
      details: Rose SW, Nightingale S, Garfinkel SL, Chandramouli R (2019) Trustworthy
        Email. (National Institute of Standards and Technology, Gaithersburg,
        MD), NIST Special Publication (SP) 800-177, Rev. 1.
    - point: SP 800-178
      priority: Advanced
      details: "Ferraiolo DF, Hu VC, Kuhn R, Chandramouli R (2016) A Comparison of
        Attribute Based Access Control (ABAC) Standards for Data Service
        Applications: Extensible Access Control Markup Language (XACML) and Next
        Generation Access Control (NGAC). (National Institute of Standards and
        Technology, Gaithersburg, MD), NIST Special Publication (SP) 800-178."
    - point: SP 800-181
      priority: Advanced
      details: Petersen R, Santos D, Smith MC, Wetzel KA, Witte G (2020) Workforce
        Framework for Cybersecurity (NICE Framework). (National Institute of
        Standards and Technology, Gaithersburg, MD), NIST Special Publication
        (SP) 800-181, Rev. 1.
    - point: SP 800-184
      priority: Advanced
      details: Bartock M, Scarfone KA, Smith MC, Witte GA, Cichonski JA, Souppaya MP
        (2016) Guide for Cybersecurity Event Recovery. (National Institute of
        Standards and Technology, Gaithersburg, MD), NIST Special Publication
        (SP) 800-184.
    - point: SP 800-189
      priority: Advanced
      details: "Sriram K, Montgomery D (2019) Resilient Interdomain Traffic Exchange:
        BGP Security and DDoS Mitigation. (National Institute of Standards and
        Technology, Gaithersburg, MD), NIST Special Publication (SP) 800-189."
    - point: SP 800-18
      priority: Advanced
      details: Swanson MA, Hash J, Bowen P (2006) Guide for Developing Security Plans
        for Federal Information Systems. (National Institute of Standards and
        Technology, Gaithersburg, MD), NIST Special Publication (SP) 800-18,
        Rev. 1.
    - point: SP 800-192
      priority: Advanced
      details: Yaga DJ, Kuhn R, Hu VC (2017) Verification and Test Methods for Access
        Control Policies/Models. (National Institute of Standards and
        Technology, Gaithersburg, MD), NIST Special Publication (SP) 800-192.
    - point: SP 800-28
      priority: Advanced
      details: Jansen W, Winograd T, Scarfone KA (2008) Guidelines on Active Content
        and Mobile Code. (National Institute of Standards and Technology,
        Gaithersburg, MD), NIST Special Publication (SP) 800-28, Version 2.
    - point: SP 800-30
      priority: Advanced
      details: Joint Task Force Transformation Initiative (2012) Guide for Conducting
        Risk Assessments. (National Institute of Standards and Technology,
        Gaithersburg, MD), NIST Special Publication (SP) 800-30, Rev. 1.
    - point: SP 800-32
      priority: Advanced
      details: Kuhn R, Hu VC, Polk T, Chang S-J (2001) Introduction to Public Key
        Technology and the Federal PKI Infrastructure. (National Institute of
        Standards and Technology, Gaithersburg, MD), NIST Special Publication
        (SP) 800-32.
    - point: SP 800-34
      priority: Advanced
      details: Swanson MA, Bowen P, Phillips AW, Gallup D, Lynes D (2010) Contingency
        Planning Guide for Federal Information Systems. (National Institute of
        Standards and Technology, Gaithersburg, MD), NIST Special Publication
        (SP) 800-34, Rev. 1, Includes updates as of November 11, 2010.
    - point: SP 800-35
      priority: Advanced
      details: Grance T, Hash J, Stevens M, O'Neal K, Bartol N (2003) Guide to
        Information Technology Security Services. (National Institute of
        Standards and Technology, Gaithersburg, MD), NIST Special Publication
        (SP) 800-35.
    - point: SP 800-37
      priority: Advanced
      details: "Joint Task Force (2018) Risk Management Framework for Information
        Systems and Organizations: A System Life Cycle Approach for Security and
        Privacy. (National Institute of Standards and Technology, Gaithersburg,
        MD), NIST Special Publication (SP) 800-37, Rev. 2."
    - point: SP 800-39
      priority: Advanced
      details: "Joint Task Force Transformation Initiative (2011) Managing Information
        Security Risk: Organization, Mission, and Information System View.
        (National Institute of Standards and Technology, Gaithersburg, MD), NIST
        Special Publication (SP) 800-39."
    - point: SP 800-40
      priority: Advanced
      details: Souppaya MP, Scarfone KA (2013) Guide to Enterprise Patch Management
        Technologies. (National Institute of Standards and Technology,
        Gaithersburg, MD), NIST Special Publication (SP) 800-40, Rev. 3.
    - point: SP 800-41
      priority: Advanced
      details: Scarfone KA, Hoffman P (2009) Guidelines on Firewalls and Firewall
        Policy. (National Institute of Standards and Technology, Gaithersburg,
        MD), NIST Special Publication (SP) 800-41, Rev. 1.
    - point: SP 800-45
      priority: Advanced
      details: Tracy MC, Jansen W, Scarfone KA, Butterfield J (2007) Guidelines on
        Electronic Mail Security. (National Institute of Standards and
        Technology, Gaithersburg, MD), NIST Special Publication (SP) 800-45,
        Version 2.
    - point: SP 800-46
      priority: Advanced
      details: Souppaya MP, Scarfone KA (2016) Guide to Enterprise Telework, Remote
        Access, and Bring Your Own Device (BYOD) Security. (National Institute
        of Standards and Technology, Gaithersburg, MD), NIST Special Publication
        (SP) 800-46, Rev. 2.
    - point: SP 800-47
      priority: Advanced
      details: Grance T, Hash J, Peck S, Smith J, Korow-Diks K (2002) Security Guide
        for Interconnecting Information Technology Systems. (National Institute
        of Standards and Technology, Gaithersburg, MD), NIST Special Publication
        (SP) 800-47.
    - point: SP 800-50
      priority: Advanced
      details: Wilson M, Hash J (2003) Building an Information Technology Security
        Awareness and Training Program. (National Institute of Standards and
        Technology, Gaithersburg, MD), NIST Special Publication (SP) 800-50.
    - point: SP 800-52
      priority: Advanced
      details: McKay KA, Cooper DA (2019) Guidelines for the Selection, Configuration,
        and Use of Transport Layer Security (TLS) Implementations. (National
        Institute of Standards and Technology, Gaithersburg, MD), NIST Special
        Publication (SP) 800-52, Rev. 2.
    - point: SP 800-53A
      priority: Advanced
      details: "Joint Task Force Transformation Initiative (2014) Assessing Security
        and Privacy Controls in Federal Information Systems and Organizations:
        Building Effective Assessment Plans. (National Institute of Standards
        and Technology, Gaithersburg, MD), NIST Special Publication (SP)
        800-53A, Rev. 4, Includes updates as of December 18, 2014."
    - point: SP 800-53B
      priority: Advanced
      details: Joint Task Force (2020) Control Baselines and Tailoring Guidance for
        Federal Information Systems and Organizations. (National Institute of
        Standards and Technology, Gaithersburg, MD), NIST Special Publication
        (SP) 800-53B.
    - point: SP 800-56A
      priority: Advanced
      details: Barker EB, Chen L, Roginsky A, Vassilev A, Davis R (2018)
        Recommendation for Pair-Wise Key-Establishment Schemes Using Discrete
        Logarithm Cryptography. (National Institute of Standards and Technology,
        Gaithersburg, MD), NIST Special Publication (SP) 800-56A, Rev. 3.
    - point: SP 800-56B
      priority: Advanced
      details: Barker EB, Chen L, Roginsky A, Vassilev A, Davis R, Simon S (2019)
        Recommendation for Pair-Wise Key-Establishment Using Integer
        Factorization Cryptography. (National Institute of Standards and
        Technology, Gaithersburg, MD), NIST Special Publication (SP) 800-56B,
        Rev. 2.
    - point: SP 800-56C
      priority: Advanced
      details: Barker EB, Chen L, Davis R (2020) Recommendation for Key-Derivation
        Methods in Key-Establishment Schemes. (National Institute of Standards
        and Technology, Gaithersburg, MD), NIST Special Publication (SP)
        800-56C, Rev. 2.
    - point: SP 800-57-1
      priority: Advanced
      details: "Barker EB (2020) Recommendation for Key Management: Part 1 – General.
        (National Institute of Standards and Technology, Gaithersburg, MD), NIST
        Special Publication (SP) 800-57 Part 1, Rev. 5."
    - point: SP 800-57-2
      priority: Advanced
      details: "Barker EB, Barker WC (2019) Recommendation for Key Management: Part 2
        – Best Practices for Key Management Organizations. (National Institute
        of Standards and Technology, Gaithersburg, MD), NIST Special Publication
        (SP) 800-57 Part 2, Rev. 1."
    - point: SP 800-57-3
      priority: Advanced
      details: "Barker EB, Dang QH (2015) Recommendation for Key Management, Part 3:
        Application-Specific Key Management Guidance. (National Institute of
        Standards and Technology, Gaithersburg, MD), NIST Special Publication
        (SP) 800-57 Part 3, Rev. 1."
    - point: SP 800-60-1
      priority: Advanced
      details: Stine KM, Kissel RL, Barker WC, Fahlsing J, Gulick J (2008) Guide for
        Mapping Types of Information and Information Systems to Security
        Categories. (National Institute of Standards and Technology,
        Gaithersburg, MD), NIST Special Publication (SP) 800-60, Vol. 1, Rev. 1.
    - point: SP 800-60-2
      priority: Advanced
      details: "Stine KM, Kissel RL, Barker WC, Lee A, Fahlsing J (2008) Guide for
        Mapping Types of Information and Information Systems to Security
        Categories: Appendices. (National Institute of Standards and Technology,
        Gaithersburg, MD), NIST Special Publication (SP) 800-60, Vol. 2, Rev.
        1."
    - point: SP 800-61
      priority: Advanced
      details: Cichonski PR, Millar T, Grance T, Scarfone KA (2012) Computer Security
        Incident Handling Guide. (National Institute of Standards and
        Technology, Gaithersburg, MD), NIST Special Publication (SP) 800-61,
        Rev. 2.
    - point: SP 800-63-3
      priority: Advanced
      details: Grassi PA, Garcia ME, Fenton JL (2017) Digital Identity Guidelines.
        (National Institute of Standards and Technology, Gaithersburg, MD), NIST
        Special Publication (SP) 800-63-3, Includes updates as of March 2, 2020.
    - point: SP 800-63A
      priority: Advanced
      details: "Grassi PA, Fenton JL, Lefkovitz NB, Danker JM, Choong Y-Y, Greene KK,
        Theofanos MF (2017) Digital Identity Guidelines: Enrollment and Identity
        Proofing. (National Institute of Standards and Technology, Gaithersburg,
        MD), NIST Special Publication (SP) 800-63A, Includes updates as of March
        2, 2020."
    - point: SP 800-63B
      priority: Advanced
      details: "Grassi PA, Fenton JL, Newton EM, Perlner RA, Regenscheid AR, Burr WE,
        Richer, JP, Lefkovitz NB, Danker JM, Choong Y-Y, Greene KK, Theofanos MF
        (2017) Digital Identity Guidelines: Authentication and Lifecycle
        Management. (National Institute of Standards and Technology,
        Gaithersburg, MD), NIST Special Publication (SP) 800-63B, Includes
        updates as of March 2, 2020."
    - point: SP 800-70
      priority: Advanced
      details: "Quinn SD, Souppaya MP, Cook MR, Scarfone KA (2018) National Checklist
        Program for IT Products: Guidelines for Checklist Users and Developers.
        (National Institute of Standards and Technology, Gaithersburg, MD), NIST
        Special Publication (SP) 800-70, Rev. 4."
    - point: SP 800-73-4
      priority: Advanced
      details: Cooper DA, Ferraiolo H, Mehta KL, Francomacaro S, Chandramouli R,
        Mohler J (2015) Interfaces for Personal Identity Verification. (National
        Institute of Standards and Technology, Gaithersburg, MD), NIST Special
        Publication (SP) 800-73-4, Includes updates as of February 8, 2016.
    - point: SP 800-76-2
      priority: Advanced
      details: Grother PJ, Salamon WJ, Chandramouli R (2013) Biometric Specifications
        for Personal Identity Verification. (National Institute of Standards and
        Technology, Gaithersburg, MD), NIST Special Publication (SP) 800-76-2.
    - point: SP 800-77
      priority: Advanced
      details: Barker EB, Dang QH, Frankel SE, Scarfone KA, Wouters P (2020) Guide to
        IPsec VPNs. (National Institute of Standards and Technology,
        Gaithersburg, MD), NIST Special Publication (SP) 800-77, Rev. 1.
    - point: SP 800-78-4
      priority: Advanced
      details: Polk T, Dodson DF, Burr WE, Ferraiolo H, Cooper DA (2015) Cryptographic
        Algorithms and Key Sizes for Personal Identity Verification. (National
        Institute of Standards and Technology, Gaithersburg, MD), NIST Special
        Publication (SP) 800-78-4.
    - point: SP 800-79-2
      priority: Advanced
      details: Ferraiolo H, Chandramouli R, Ghadiali N, Mohler J, Shorter S (2015)
        Guidelines for the Authorization of Personal Identity Verification Card
        Issuers (PCI) and Derived PIV Credential Issuers (DPCI). (National
        Institute of Standards and Technology, Gaithersburg, MD), NIST Special
        Publication (SP) 800-79-2.
    - point: SP 800-81-2
      priority: Advanced
      details: Chandramouli R, Rose SW (2013) Secure Domain Name System (DNS)
        Deployment Guide. (National Institute of Standards and Technology,
        Gaithersburg, MD), NIST Special Publication (SP) 800-81-2.
    - point: SP 800-83
      priority: Advanced
      details: Souppaya MP, Scarfone KA (2013) Guide to Malware Incident Prevention
        and Handling for Desktops and Laptops. (National Institute of Standards
        and Technology, Gaithersburg, MD), NIST Special Publication (SP) 800-83,
        Rev. 1.
    - point: SP 800-84
      priority: Advanced
      details: Grance T, Nolan T, Burke K, Dudley R, White G, Good T (2006) Guide to
        Test, Training, and Exercise Programs for IT Plans and Capabilities.
        (National Institute of Standards and Technology, Gaithersburg, MD), NIST
        Special Publication (SP) 800-84.
    - point: SP 800-86
      priority: Advanced
      details: Kent K, Chevalier S, Grance T, Dang H (2006) Guide to Integrating
        Forensic Techniques into Incident Response. (National Institute of
        Standards and Technology, Gaithersburg, MD), NIST Special Publication
        (SP) 800-86.
    - point: SP 800-88
      priority: Advanced
      details: Kissel RL, Regenscheid AR, Scholl MA, Stine KM (2014) Guidelines for
        Media Sanitization. (National Institute of Standards and Technology,
        Gaithersburg, MD), NIST Special Publication (SP) 800-88, Rev. 1.
    - point: SP 800-92
      priority: Advanced
      details: Kent K, Souppaya MP (2006) Guide to Computer Security Log Management.
        (National Institute of Standards and Technology, Gaithersburg, MD), NIST
        Special Publication (SP) 800-92.
    - point: SP 800-94
      priority: Advanced
      details: Scarfone KA, Mell PM (2007) Guide to Intrusion Detection and Prevention
        Systems (IDPS). (National Institute of Standards and Technology,
        Gaithersburg, MD), NIST Special Publication (SP) 800-94.
    - point: SP 800-95
      priority: Advanced
      details: Singhal A, Winograd T, Scarfone KA (2007) Guide to Secure Web Services.
        (National Institute of Standards and Technology, Gaithersburg, MD), NIST
        Special Publication (SP) 800-95.
    - point: SP 800-97
      priority: Advanced
      details: "Frankel SE, Eydt B, Owens L, Scarfone KA (2007) Establishing Wireless
        Robust Security Networks: A Guide to IEEE 802.11i. (National Institute
        of Standards and Technology, Gaithersburg, MD), NIST Special Publication
        (SP) 800-97."
    - point: USA PATRIOT
      priority: Advanced
      details: USA Patriot Act (P.L. 107-56), October 2001.
    - point: USC 2901
      priority: Advanced
      details: United States Code, 2008 Edition, Title 44 - *Public Printing and
        Documents* , Chapters 29, 31, and 33, January 2012.
    - point: USCERT IR
      priority: Advanced
      details: Department of Homeland Security, *US-CERT Federal Incident Notification
        Guidelines* , April 2017.
    - point: USGCB
      priority: Advanced
      details: National Institute of Standards and Technology (2020) *United States
        Government Configuration Baseline* . Available at
    - point: "NIST Special Publication 800-53, Revision 5: * Security and Privacy
        Controls for Information Systems and Organizations* (PDF)"
      priority: Advanced
  color: blue

